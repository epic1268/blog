<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>代码之丑 on Docs</title>
    <link>https://politcloud.org/tags/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/</link>
    <description>Recent content in 代码之丑 on Docs</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 10 Jan 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://politcloud.org/tags/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>01__缺乏业务含义的命名：如何精准命名？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/01__%E7%BC%BA%E4%B9%8F%E4%B8%9A%E5%8A%A1%E5%90%AB%E4%B9%89%E7%9A%84%E5%91%BD%E5%90%8D%E5%A6%82%E4%BD%95%E7%B2%BE%E5%87%86%E5%91%BD%E5%90%8D/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/01__%E7%BC%BA%E4%B9%8F%E4%B8%9A%E5%8A%A1%E5%90%AB%E4%B9%89%E7%9A%84%E5%91%BD%E5%90%8D%E5%A6%82%E4%BD%95%E7%B2%BE%E5%87%86%E5%91%BD%E5%90%8D/</guid>
      <description>&lt;p&gt;你好，我是郑晔。&lt;/p&gt;&#xA;&lt;p&gt;讲写代码的书通常都会从命名开始讲，《程序设计实践》如此，《代码整洁之道》亦然。所以，我们这个讲代码坏味道的专栏，也遵循传统，从命名开始讲。&lt;/p&gt;</description>
    </item>
    <item>
      <title>02__乱用英语：站在中国人的视角来看英文命名</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/02__%E4%B9%B1%E7%94%A8%E8%8B%B1%E8%AF%AD%E7%AB%99%E5%9C%A8%E4%B8%AD%E5%9B%BD%E4%BA%BA%E7%9A%84%E8%A7%86%E8%A7%92%E6%9D%A5%E7%9C%8B%E8%8B%B1%E6%96%87%E5%91%BD%E5%90%8D/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/02__%E4%B9%B1%E7%94%A8%E8%8B%B1%E8%AF%AD%E7%AB%99%E5%9C%A8%E4%B8%AD%E5%9B%BD%E4%BA%BA%E7%9A%84%E8%A7%86%E8%A7%92%E6%9D%A5%E7%9C%8B%E8%8B%B1%E6%96%87%E5%91%BD%E5%90%8D/</guid>
      <description>&lt;p&gt;你好，我是郑晔。&lt;/p&gt;&#xA;&lt;p&gt;上一讲，我们讲了两种常见的命名的坏味道，这一讲的话题还是命名，只不过，这个主题是国外那些经典编程书籍所不曾涵盖的话题：英语命名。&lt;/p&gt;</description>
    </item>
    <item>
      <title>03__重复代码：简单需求到处修改，怎么办？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/03__%E9%87%8D%E5%A4%8D%E4%BB%A3%E7%A0%81%E7%AE%80%E5%8D%95%E9%9C%80%E6%B1%82%E5%88%B0%E5%A4%84%E4%BF%AE%E6%94%B9%E6%80%8E%E4%B9%88%E5%8A%9E/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/03__%E9%87%8D%E5%A4%8D%E4%BB%A3%E7%A0%81%E7%AE%80%E5%8D%95%E9%9C%80%E6%B1%82%E5%88%B0%E5%A4%84%E4%BF%AE%E6%94%B9%E6%80%8E%E4%B9%88%E5%8A%9E/</guid>
      <description>&lt;p&gt;你好，我是郑晔。&lt;/p&gt;&#xA;&lt;p&gt;前面两讲，我们讨论了命名中的坏味道。今天，我们来讨论另外一个常见的坏味道：重复代码。&lt;/p&gt;&#xA;&lt;p&gt;记得我刚开始工作的时候，有人开玩笑说，编程实际上就是 CVS（CVS 是当时流行的一个版本控制工具，相当于今天的 Git），也就是 Ctrl+C、Ctrl+V、Ctrl+S，或许你已经听出来了，这是在调侃很多程序员写程序依靠的是复制粘贴。&lt;/p&gt;</description>
    </item>
    <item>
      <title>04__长函数：为什么你总是不可避免地写出长函数？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/04__%E9%95%BF%E5%87%BD%E6%95%B0%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%A0%E6%80%BB%E6%98%AF%E4%B8%8D%E5%8F%AF%E9%81%BF%E5%85%8D%E5%9C%B0%E5%86%99%E5%87%BA%E9%95%BF%E5%87%BD%E6%95%B0/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/04__%E9%95%BF%E5%87%BD%E6%95%B0%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%A0%E6%80%BB%E6%98%AF%E4%B8%8D%E5%8F%AF%E9%81%BF%E5%85%8D%E5%9C%B0%E5%86%99%E5%87%BA%E9%95%BF%E5%87%BD%E6%95%B0/</guid>
      <description>&lt;p&gt;你好，我是郑晔。&lt;/p&gt;&#xA;&lt;p&gt;这一讲，我们来讲一个你一定深恶痛绝的坏味道：长函数。&lt;/p&gt;&#xA;&lt;p&gt;有一个关于程序员的段子，说程序员一定要用大屏显示器，而且一定要竖起来用，这样才能看到一个函数的全貌。这显然是在调侃函数很长，小屏甚至横屏都不足以看到整个函数，只有竖起来才行。&lt;/p&gt;</description>
    </item>
    <item>
      <title>05__大类：如何避免写出难以理解的大类？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/05__%E5%A4%A7%E7%B1%BB%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D%E5%86%99%E5%87%BA%E9%9A%BE%E4%BB%A5%E7%90%86%E8%A7%A3%E7%9A%84%E5%A4%A7%E7%B1%BB/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/05__%E5%A4%A7%E7%B1%BB%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D%E5%86%99%E5%87%BA%E9%9A%BE%E4%BB%A5%E7%90%86%E8%A7%A3%E7%9A%84%E5%A4%A7%E7%B1%BB/</guid>
      <description>&lt;p&gt;你好，我是郑晔。&lt;/p&gt;&#xA;&lt;p&gt;上一讲我们讲了长函数，一个让你感受最直观的坏味道。这一讲，我们再来讲一个你一听名字就知道是怎么回事的坏味道：大类。&lt;/p&gt;&#xA;&lt;p&gt;一听到大类，估计你的眼前已经浮现出一片无边无际的代码了。类之所以成为了大类，一种表现形式就是我们上节课讲到的长函数，一个类只要有几个长函数，那它就肯定是一眼望不到边了（长函数的话题，我们上一讲已经讨论过了，这里就不再赘述了）。&lt;/p&gt;</description>
    </item>
    <item>
      <title>06__长参数列表：如何处理不同类型的长参数？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/06__%E9%95%BF%E5%8F%82%E6%95%B0%E5%88%97%E8%A1%A8%E5%A6%82%E4%BD%95%E5%A4%84%E7%90%86%E4%B8%8D%E5%90%8C%E7%B1%BB%E5%9E%8B%E7%9A%84%E9%95%BF%E5%8F%82%E6%95%B0/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/06__%E9%95%BF%E5%8F%82%E6%95%B0%E5%88%97%E8%A1%A8%E5%A6%82%E4%BD%95%E5%A4%84%E7%90%86%E4%B8%8D%E5%90%8C%E7%B1%BB%E5%9E%8B%E7%9A%84%E9%95%BF%E5%8F%82%E6%95%B0/</guid>
      <description>&lt;p&gt;你好，我是郑晔。&lt;/p&gt;&#xA;&lt;p&gt;前面两讲，我们分别讲了长函数和大类，它们都是那种“我一说，你就知道是怎么回事”的坏味道，而且都让我们深恶痛绝，唯恐避之不及。这样典型的坏味道还有一个，就是长参数列表。&lt;/p&gt;</description>
    </item>
    <item>
      <title>07__滥用控制语句：出现控制结构，多半是错误的提示</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/07__%E6%BB%A5%E7%94%A8%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5%E5%87%BA%E7%8E%B0%E6%8E%A7%E5%88%B6%E7%BB%93%E6%9E%84%E5%A4%9A%E5%8D%8A%E6%98%AF%E9%94%99%E8%AF%AF%E7%9A%84%E6%8F%90%E7%A4%BA/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/07__%E6%BB%A5%E7%94%A8%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5%E5%87%BA%E7%8E%B0%E6%8E%A7%E5%88%B6%E7%BB%93%E6%9E%84%E5%A4%9A%E5%8D%8A%E6%98%AF%E9%94%99%E8%AF%AF%E7%9A%84%E6%8F%90%E7%A4%BA/</guid>
      <description>&lt;p&gt;你好，我是郑晔。&lt;/p&gt;&#xA;&lt;p&gt;在前面几讲，我们已经讲了不少的坏味道，比如长函数、大类等。对于有一定从业经验的程序员来说，即便不能对这些坏味道有一个很清楚的个人认知，但至少一说出来，通常都知道是怎么回事。&lt;/p&gt;</description>
    </item>
    <item>
      <title>08__缺乏封装：如何应对火车代码和基本类型偏执问题？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/08__%E7%BC%BA%E4%B9%8F%E5%B0%81%E8%A3%85%E5%A6%82%E4%BD%95%E5%BA%94%E5%AF%B9%E7%81%AB%E8%BD%A6%E4%BB%A3%E7%A0%81%E5%92%8C%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B%E5%81%8F%E6%89%A7%E9%97%AE%E9%A2%98/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/08__%E7%BC%BA%E4%B9%8F%E5%B0%81%E8%A3%85%E5%A6%82%E4%BD%95%E5%BA%94%E5%AF%B9%E7%81%AB%E8%BD%A6%E4%BB%A3%E7%A0%81%E5%92%8C%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B%E5%81%8F%E6%89%A7%E9%97%AE%E9%A2%98/</guid>
      <description>&lt;p&gt;你好，我是郑晔。&lt;/p&gt;&#xA;&lt;p&gt;上一讲，我们讲的是控制语句体现出的坏味道，它们不是一种坏味道，而是一类坏味道。这一讲，我们再来讲一类代码的坏味道：缺乏封装。&lt;/p&gt;&#xA;&lt;p&gt;在程序设计中，一个重要的观念就是封装，将零散的代码封装成一个又一个可复用的模块。任何一个程序员都会认同封装的价值，但是，具体到写代码时，每个人对于封装的理解程度却天差地别，造成的结果就是：写代码的人认为自己提供了封装，但实际上，我们还是看到许多的代码散落在那里。&lt;/p&gt;</description>
    </item>
    <item>
      <title>09__可变的数据：不要让你的代码“失控”</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/09__%E5%8F%AF%E5%8F%98%E7%9A%84%E6%95%B0%E6%8D%AE%E4%B8%8D%E8%A6%81%E8%AE%A9%E4%BD%A0%E7%9A%84%E4%BB%A3%E7%A0%81%E5%A4%B1%E6%8E%A7/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/09__%E5%8F%AF%E5%8F%98%E7%9A%84%E6%95%B0%E6%8D%AE%E4%B8%8D%E8%A6%81%E8%AE%A9%E4%BD%A0%E7%9A%84%E4%BB%A3%E7%A0%81%E5%A4%B1%E6%8E%A7/</guid>
      <description>&lt;p&gt;你好，我是郑晔。&lt;/p&gt;&#xA;&lt;p&gt;最近几讲，我们讨论的坏味道挑战了很多人的编程习惯，明明很习惯的编码方式，如今却成了坏味道。这一讲，我们再来说一类这样的坏味道：可变的数据。&lt;/p&gt;</description>
    </item>
    <item>
      <title>10__变量声明与赋值分离：普通的变量声明，怎么也有坏味道？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/10__%E5%8F%98%E9%87%8F%E5%A3%B0%E6%98%8E%E4%B8%8E%E8%B5%8B%E5%80%BC%E5%88%86%E7%A6%BB%E6%99%AE%E9%80%9A%E7%9A%84%E5%8F%98%E9%87%8F%E5%A3%B0%E6%98%8E%E6%80%8E%E4%B9%88%E4%B9%9F%E6%9C%89%E5%9D%8F%E5%91%B3%E9%81%93/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/10__%E5%8F%98%E9%87%8F%E5%A3%B0%E6%98%8E%E4%B8%8E%E8%B5%8B%E5%80%BC%E5%88%86%E7%A6%BB%E6%99%AE%E9%80%9A%E7%9A%84%E5%8F%98%E9%87%8F%E5%A3%B0%E6%98%8E%E6%80%8E%E4%B9%88%E4%B9%9F%E6%9C%89%E5%9D%8F%E5%91%B3%E9%81%93/</guid>
      <description>&lt;p&gt;你好，我是郑晔。&lt;/p&gt;&#xA;&lt;p&gt;我们已经用连续几讲的篇幅在挑战很多人固有的编程习惯了，从各种控制语句，到 getter 和 setter，甚至连直接使用基本类型都已经成了坏味道，这一讲，我们再来挑战一个很多人习以为常的编程习惯：变量的声明与赋值。&lt;/p&gt;</description>
    </item>
    <item>
      <title>11__依赖混乱：你可能还没发现问题，代码就已经无法挽救了</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/11__%E4%BE%9D%E8%B5%96%E6%B7%B7%E4%B9%B1%E4%BD%A0%E5%8F%AF%E8%83%BD%E8%BF%98%E6%B2%A1%E5%8F%91%E7%8E%B0%E9%97%AE%E9%A2%98%E4%BB%A3%E7%A0%81%E5%B0%B1%E5%B7%B2%E7%BB%8F%E6%97%A0%E6%B3%95%E6%8C%BD%E6%95%91%E4%BA%86/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/11__%E4%BE%9D%E8%B5%96%E6%B7%B7%E4%B9%B1%E4%BD%A0%E5%8F%AF%E8%83%BD%E8%BF%98%E6%B2%A1%E5%8F%91%E7%8E%B0%E9%97%AE%E9%A2%98%E4%BB%A3%E7%A0%81%E5%B0%B1%E5%B7%B2%E7%BB%8F%E6%97%A0%E6%B3%95%E6%8C%BD%E6%95%91%E4%BA%86/</guid>
      <description>&lt;p&gt;你好，我是郑晔。&lt;/p&gt;&#xA;&lt;p&gt;我们前面已经讲了许多坏味道，无论是你很容易接受的，还是挑战你编程习惯的，它们都有相对直观的表现形式，属于你很容易一下子就看出来问题的。这一讲，我们要讲的坏味道就不属于一下子就能看出来的，需要你稍微仔细一点看代码才会发现问题，那就是依赖关系。&lt;/p&gt;</description>
    </item>
    <item>
      <title>12__不一致的代码：为什么你的代码总被吐槽难懂？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/12__%E4%B8%8D%E4%B8%80%E8%87%B4%E7%9A%84%E4%BB%A3%E7%A0%81%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%A0%E7%9A%84%E4%BB%A3%E7%A0%81%E6%80%BB%E8%A2%AB%E5%90%90%E6%A7%BD%E9%9A%BE%E6%87%82/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/12__%E4%B8%8D%E4%B8%80%E8%87%B4%E7%9A%84%E4%BB%A3%E7%A0%81%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%A0%E7%9A%84%E4%BB%A3%E7%A0%81%E6%80%BB%E8%A2%AB%E5%90%90%E6%A7%BD%E9%9A%BE%E6%87%82/</guid>
      <description>&lt;p&gt;你好，我是郑晔。&lt;/p&gt;&#xA;&lt;p&gt;上一讲，我们讲了从依赖关系引申出来的坏味道，从代码本身看，这些坏味道并不如之前讲的那些，有非常明显的标识，一眼就能看出问题，但它们都属于问题高发的地带，一不小心就陷入其中，却不知所以。对于这类的问题，我们需要额外打起精神来发现问题。&lt;/p&gt;</description>
    </item>
    <item>
      <title>13__落后的代码风格：使用“新”的语言特性和程序库升级你的代码</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/13__%E8%90%BD%E5%90%8E%E7%9A%84%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%BD%BF%E7%94%A8%E6%96%B0%E7%9A%84%E8%AF%AD%E8%A8%80%E7%89%B9%E6%80%A7%E5%92%8C%E7%A8%8B%E5%BA%8F%E5%BA%93%E5%8D%87%E7%BA%A7%E4%BD%A0%E7%9A%84%E4%BB%A3%E7%A0%81/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/13__%E8%90%BD%E5%90%8E%E7%9A%84%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%BD%BF%E7%94%A8%E6%96%B0%E7%9A%84%E8%AF%AD%E8%A8%80%E7%89%B9%E6%80%A7%E5%92%8C%E7%A8%8B%E5%BA%8F%E5%BA%93%E5%8D%87%E7%BA%A7%E4%BD%A0%E7%9A%84%E4%BB%A3%E7%A0%81/</guid>
      <description>&lt;p&gt;你好，我是郑晔。&lt;/p&gt;&#xA;&lt;p&gt;上一讲，我们讲的是因为代码不一致造成的坏味道，其中我提到的“方案不一致”，是因为随着时间的流逝，总会有一些新的方案产生，替换原有的方案。这其中，最明显的一个例子就是程序设计语言。没有哪门语言是完美的，所以，只要有一个活跃的社区，这门语言就会不断地演进。&lt;/p&gt;</description>
    </item>
    <item>
      <title>14__多久进行一次代码评审最合适？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/14__%E5%A4%9A%E4%B9%85%E8%BF%9B%E8%A1%8C%E4%B8%80%E6%AC%A1%E4%BB%A3%E7%A0%81%E8%AF%84%E5%AE%A1%E6%9C%80%E5%90%88%E9%80%82/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/14__%E5%A4%9A%E4%B9%85%E8%BF%9B%E8%A1%8C%E4%B8%80%E6%AC%A1%E4%BB%A3%E7%A0%81%E8%AF%84%E5%AE%A1%E6%9C%80%E5%90%88%E9%80%82/</guid>
      <description>&lt;p&gt;你好，我是郑晔。&lt;/p&gt;&#xA;&lt;p&gt;前面我们讲了很多代码的坏味道，我们的关注点都在代码本身上。知道了什么样的代码是坏味道，有了具体的评判标准。那么，该如何去运用坏味道这把“尺子”呢？&lt;/p&gt;</description>
    </item>
    <item>
      <title>15__新需求破坏了代码，怎么办？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/15__%E6%96%B0%E9%9C%80%E6%B1%82%E7%A0%B4%E5%9D%8F%E4%BA%86%E4%BB%A3%E7%A0%81%E6%80%8E%E4%B9%88%E5%8A%9E/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/15__%E6%96%B0%E9%9C%80%E6%B1%82%E7%A0%B4%E5%9D%8F%E4%BA%86%E4%BB%A3%E7%A0%81%E6%80%8E%E4%B9%88%E5%8A%9E/</guid>
      <description>&lt;p&gt;你好，我是郑晔。&lt;/p&gt;&#xA;&lt;p&gt;我前面课程讲的所有坏味道都是告诉你如何在已有的代码中发现问题。不过你要明白，即便我们能够极尽所能把代码写整洁，规避各种坏味道，但我们小心翼翼维护的代码，还是可能因为新的需求到来，不经意间就会破坏。&lt;/p&gt;</description>
    </item>
    <item>
      <title>16__熊节：什么代码应该被重构？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/16__%E7%86%8A%E8%8A%82%E4%BB%80%E4%B9%88%E4%BB%A3%E7%A0%81%E5%BA%94%E8%AF%A5%E8%A2%AB%E9%87%8D%E6%9E%84/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/16__%E7%86%8A%E8%8A%82%E4%BB%80%E4%B9%88%E4%BB%A3%E7%A0%81%E5%BA%94%E8%AF%A5%E8%A2%AB%E9%87%8D%E6%9E%84/</guid>
      <description>&lt;p&gt;你好，我是郑晔。&lt;/p&gt;&#xA;&lt;p&gt;代码坏味道的说法源自《重构》这本书，坏味道和重构这两个概念几乎是如影随形。提及《重构》这本书，在国内谁还能比《重构》两版的译者熊节更了解它呢？所以，这一讲，我就请来了我的老朋友熊节，谈谈在他眼中看到的重构和坏味道。有请熊节老师！&lt;/p&gt;</description>
    </item>
    <item>
      <title>17__课前作业点评：发现“你”代码里的坏味道</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/17__%E8%AF%BE%E5%89%8D%E4%BD%9C%E4%B8%9A%E7%82%B9%E8%AF%84%E5%8F%91%E7%8E%B0%E4%BD%A0%E4%BB%A3%E7%A0%81%E9%87%8C%E7%9A%84%E5%9D%8F%E5%91%B3%E9%81%93/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/17__%E8%AF%BE%E5%89%8D%E4%BD%9C%E4%B8%9A%E7%82%B9%E8%AF%84%E5%8F%91%E7%8E%B0%E4%BD%A0%E4%BB%A3%E7%A0%81%E9%87%8C%E7%9A%84%E5%9D%8F%E5%91%B3%E9%81%93/</guid>
      <description>&lt;p&gt;你好，我是郑晔。&lt;/p&gt;&#xA;&lt;p&gt;在这个专栏刚开始的时候，我给你留了一个课前作业，实现一个待办事项管理的软件。许多同学都利用自己的业余时间完成了这个作业，感谢大家的付出！&lt;/p&gt;</description>
    </item>
    <item>
      <title>173-代码之丑</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/173-%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/173-%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/</guid>
      <description></description>
    </item>
    <item>
      <title>结束语__写代码是一件可以一生精进的事</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/%E7%BB%93%E6%9D%9F%E8%AF%AD__%E5%86%99%E4%BB%A3%E7%A0%81%E6%98%AF%E4%B8%80%E4%BB%B6%E5%8F%AF%E4%BB%A5%E4%B8%80%E7%94%9F%E7%B2%BE%E8%BF%9B%E7%9A%84%E4%BA%8B/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/%E7%BB%93%E6%9D%9F%E8%AF%AD__%E5%86%99%E4%BB%A3%E7%A0%81%E6%98%AF%E4%B8%80%E4%BB%B6%E5%8F%AF%E4%BB%A5%E4%B8%80%E7%94%9F%E7%B2%BE%E8%BF%9B%E7%9A%84%E4%BA%8B/</guid>
      <description>&lt;p&gt;你好，我是郑晔。&lt;/p&gt;&#xA;&lt;p&gt;春节将至，祝你新春快乐！我们的专栏到这里也正好要更新完结了，在结束语这一讲，我想和你聊聊程序员精进的话题。&lt;/p&gt;&#xA;&lt;p&gt;创作《10x 程序员工作法》之初，我曾经定下了“写下 100 篇”的宏伟目标。在第三个专栏结束的时候，这个当年许下的宏伟目标终于实现了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>开篇词__这一次，我们从“丑”代码出发</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/%E5%BC%80%E7%AF%87%E8%AF%8D__%E8%BF%99%E4%B8%80%E6%AC%A1%E6%88%91%E4%BB%AC%E4%BB%8E%E4%B8%91%E4%BB%A3%E7%A0%81%E5%87%BA%E5%8F%91/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/%E5%BC%80%E7%AF%87%E8%AF%8D__%E8%BF%99%E4%B8%80%E6%AC%A1%E6%88%91%E4%BB%AC%E4%BB%8E%E4%B8%91%E4%BB%A3%E7%A0%81%E5%87%BA%E5%8F%91/</guid>
      <description>&lt;p&gt;你好，我是郑晔！我又回来了！&lt;/p&gt;&#xA;&lt;p&gt;我在“极客时间”里已经写了两个专栏，分别是《10x 程序员工作法》和《软件设计之美》，从工作原则和设计原则两个方面对软件开发的各种知识进行了探讨，帮助你搭建了一个开启程序员精进之路的框架。&lt;/p&gt;</description>
    </item>
    <item>
      <title>课前热身__这些需求给到你，你会怎么写代码？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/%E8%AF%BE%E5%89%8D%E7%83%AD%E8%BA%AB__%E8%BF%99%E4%BA%9B%E9%9C%80%E6%B1%82%E7%BB%99%E5%88%B0%E4%BD%A0%E4%BD%A0%E4%BC%9A%E6%80%8E%E4%B9%88%E5%86%99%E4%BB%A3%E7%A0%81/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%A3%E7%A0%81%E4%B9%8B%E4%B8%91/%E8%AF%BE%E5%89%8D%E7%83%AD%E8%BA%AB__%E8%BF%99%E4%BA%9B%E9%9C%80%E6%B1%82%E7%BB%99%E5%88%B0%E4%BD%A0%E4%BD%A0%E4%BC%9A%E6%80%8E%E4%B9%88%E5%86%99%E4%BB%A3%E7%A0%81/</guid>
      <description>&lt;p&gt;你好，我是郑晔。&lt;/p&gt;&#xA;&lt;p&gt;我在开篇词中提到，缺乏识别代码坏味道的感觉，这才让很多问题代码堂而皇之地留在了自己的眼皮底下。识别坏味道，单纯学理论是不够的，你得结合具体问题进行分析，所以我才在课程中加入了大量真实的代码案例，帮助你理解坏味道。当然，除此之外，你还要有足够多的练习。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
