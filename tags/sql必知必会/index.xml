<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SQL必知必会 on Docs</title>
    <link>https://politcloud.org/tags/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/</link>
    <description>Recent content in SQL必知必会 on Docs</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 10 Jan 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://politcloud.org/tags/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>01开篇词丨SQL可能是你掌握的最有用的技能</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/01%E5%BC%80%E7%AF%87%E8%AF%8D%E4%B8%A8sql%E5%8F%AF%E8%83%BD%E6%98%AF%E4%BD%A0%E6%8E%8C%E6%8F%A1%E7%9A%84%E6%9C%80%E6%9C%89%E7%94%A8%E7%9A%84%E6%8A%80%E8%83%BD/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/01%E5%BC%80%E7%AF%87%E8%AF%8D%E4%B8%A8sql%E5%8F%AF%E8%83%BD%E6%98%AF%E4%BD%A0%E6%8E%8C%E6%8F%A1%E7%9A%84%E6%9C%80%E6%9C%89%E7%94%A8%E7%9A%84%E6%8A%80%E8%83%BD/</guid>
      <description>&lt;p&gt;开篇词丨SQL可能是你掌握的最有用的技能&lt;/p&gt;&#xA;&lt;p&gt;1946 年，世界上第一台电脑诞生，如今，借由这台电脑发展起来的互联网已经自成江湖。在这几十年里，无数的技术、产业在这片江湖里沉浮，有的方兴未艾，有的已经几幕兴衰。&lt;/p&gt;</description>
    </item>
    <item>
      <title>021丨了解SQL一门半衰期很长的语言</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/021%E4%B8%A8%E4%BA%86%E8%A7%A3sql%E4%B8%80%E9%97%A8%E5%8D%8A%E8%A1%B0%E6%9C%9F%E5%BE%88%E9%95%BF%E7%9A%84%E8%AF%AD%E8%A8%80/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/021%E4%B8%A8%E4%BA%86%E8%A7%A3sql%E4%B8%80%E9%97%A8%E5%8D%8A%E8%A1%B0%E6%9C%9F%E5%BE%88%E9%95%BF%E7%9A%84%E8%AF%AD%E8%A8%80/</guid>
      <description>&lt;p&gt;1丨了解SQL：一门半衰期很长的语言&lt;/p&gt;&#xA;&lt;p&gt;在我们的日常工作中，使用的是类似 MySQL、Oracle 这种的数据库管理系统，实际上这些数据库管理系统都遵循 SQL 语言，这就意味着，我们在使用这些数据库的时候，都是通过 SQL 语言与它们打交道。所以对于从事编程或者互联网行业的人来说，最具有中台能力的语言便是 SQL 语言。自从 SQL 加入了 TIOBE 编程语言排行榜，就一直保持在 Top 10。&lt;/p&gt;</description>
    </item>
    <item>
      <title>0302丨DBMS的前世今生</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/0302%E4%B8%A8dbms%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/0302%E4%B8%A8dbms%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F/</guid>
      <description>&lt;p&gt;02丨DBMS的前世今生&lt;/p&gt;&#xA;&lt;p&gt;上一讲我们介绍过两个 IBM 研究员在 1974 年发表了一篇有关结构化英语查询语言的论文，并将这门语言命名为 SEQUEL。SEQUEL 的语言标准是开放的，但是围绕它的商业化竞争却从来没有停止过。首先因为商标之争，SEQUEL 改名为 SQL，后来有一个重量级的公司基于那篇论文研发出了商业化的数据库管理软件，这就是 Oracle。自此之后，又诞生了一堆大家熟知的 DBMS，比如 MySQL、SQL Server、PostgreSQL、DB2 和 MongoDB 等。&lt;/p&gt;</description>
    </item>
    <item>
      <title>0403丨学会用数据库的方式思考SQL是如何执行的</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/0403%E4%B8%A8%E5%AD%A6%E4%BC%9A%E7%94%A8%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%96%B9%E5%BC%8F%E6%80%9D%E8%80%83sql%E6%98%AF%E5%A6%82%E4%BD%95%E6%89%A7%E8%A1%8C%E7%9A%84/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/0403%E4%B8%A8%E5%AD%A6%E4%BC%9A%E7%94%A8%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%96%B9%E5%BC%8F%E6%80%9D%E8%80%83sql%E6%98%AF%E5%A6%82%E4%BD%95%E6%89%A7%E8%A1%8C%E7%9A%84/</guid>
      <description>&lt;p&gt;03丨学会用数据库的方式思考SQL是如何执行的&lt;/p&gt;&#xA;&lt;p&gt;通过上一篇文章对不同的 DBMS 的介绍，你应该对它们有了一些基础的了解。虽然 SQL 是声明式语言，我们可以像使用英语一样使用它，不过在 RDBMS（关系型数据库管理系统）中，SQL 的实现方式还是有差别的。今天我们就从数据库的角度来思考一下 SQL 是如何被执行的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>0504丨使用DDL创建数据库数据表时需要注意什么</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/0504%E4%B8%A8%E4%BD%BF%E7%94%A8ddl%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93%E6%95%B0%E6%8D%AE%E8%A1%A8%E6%97%B6%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E4%BB%80%E4%B9%88/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/0504%E4%B8%A8%E4%BD%BF%E7%94%A8ddl%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93%E6%95%B0%E6%8D%AE%E8%A1%A8%E6%97%B6%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E4%BB%80%E4%B9%88/</guid>
      <description>&lt;p&gt;04丨使用DDL创建数据库&amp;amp;数据表时需要注意什么？&lt;/p&gt;&#xA;&lt;p&gt;DDL 是 DBMS 的核心组件，也是 SQL 的重要组成部分，DDL 的正确性和稳定性是整个 SQL 运行的重要基础。面对同一个需求，不同的开发人员创建出来的数据库和数据表可能千差万别，那么在设计数据库的时候，究竟什么是好的原则？我们在创建数据表的时候需要注意什么？&lt;/p&gt;</description>
    </item>
    <item>
      <title>0605丨检索数据你还在SELECT么</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/0605%E4%B8%A8%E6%A3%80%E7%B4%A2%E6%95%B0%E6%8D%AE%E4%BD%A0%E8%BF%98%E5%9C%A8select%E4%B9%88/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/0605%E4%B8%A8%E6%A3%80%E7%B4%A2%E6%95%B0%E6%8D%AE%E4%BD%A0%E8%BF%98%E5%9C%A8select%E4%B9%88/</guid>
      <description>&lt;p&gt;05丨检索数据：你还在SELECT * 么？&lt;/p&gt;&#xA;&lt;p&gt;今天我们主要学习如何使用 SQL 检索数据。如果你已经有了一定的 SQL 基础，这节课可以跳过，也可以把它当做是个快速的复习。&lt;/p&gt;</description>
    </item>
    <item>
      <title>0706丨数据过滤SQL数据过滤都有哪些方法</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/0706%E4%B8%A8%E6%95%B0%E6%8D%AE%E8%BF%87%E6%BB%A4sql%E6%95%B0%E6%8D%AE%E8%BF%87%E6%BB%A4%E9%83%BD%E6%9C%89%E5%93%AA%E4%BA%9B%E6%96%B9%E6%B3%95/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/0706%E4%B8%A8%E6%95%B0%E6%8D%AE%E8%BF%87%E6%BB%A4sql%E6%95%B0%E6%8D%AE%E8%BF%87%E6%BB%A4%E9%83%BD%E6%9C%89%E5%93%AA%E4%BA%9B%E6%96%B9%E6%B3%95/</guid>
      <description>&lt;p&gt;06丨数据过滤：SQL数据过滤都有哪些方法？&lt;/p&gt;&#xA;&lt;p&gt;我在上篇文章中讲到过，提升查询效率的一个很重要的方式，就是约束返回结果的数量，还有一个很有效的方式，就是指定筛选条件，进行过滤。过滤可以筛选符合条件的结果，并进行返回，减少不必要的数据行。&lt;/p&gt;</description>
    </item>
    <item>
      <title>0807丨什么是SQL函数为什么使用SQL函数可能会带来问题</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/0807%E4%B8%A8%E4%BB%80%E4%B9%88%E6%98%AFsql%E5%87%BD%E6%95%B0%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%BF%E7%94%A8sql%E5%87%BD%E6%95%B0%E5%8F%AF%E8%83%BD%E4%BC%9A%E5%B8%A6%E6%9D%A5%E9%97%AE%E9%A2%98/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/0807%E4%B8%A8%E4%BB%80%E4%B9%88%E6%98%AFsql%E5%87%BD%E6%95%B0%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%BF%E7%94%A8sql%E5%87%BD%E6%95%B0%E5%8F%AF%E8%83%BD%E4%BC%9A%E5%B8%A6%E6%9D%A5%E9%97%AE%E9%A2%98/</guid>
      <description>&lt;p&gt;07丨什么是SQL函数？为什么使用SQL函数可能会带来问题？&lt;/p&gt;&#xA;&lt;p&gt;函数在计算机语言的使用中贯穿始终，在 SQL 中我们也可以使用函数对检索出来的数据进行函数操作，比如求某列数据的平均值，或者求字符串的长度等。从函数定义的角度出发，我们可以将函数分成内置函数和自定义函数。在 SQL 语言中，同样也包括了内置函数和自定义函数。内置函数是系统内置的通用函数，而自定义函数是我们根据自己的需要编写的，下面讲解的是 SQL 的内置函数。&lt;/p&gt;</description>
    </item>
    <item>
      <title>0908丨什么是SQL的聚集函数如何利用它们汇总表的数据</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/0908%E4%B8%A8%E4%BB%80%E4%B9%88%E6%98%AFsql%E7%9A%84%E8%81%9A%E9%9B%86%E5%87%BD%E6%95%B0%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8%E5%AE%83%E4%BB%AC%E6%B1%87%E6%80%BB%E8%A1%A8%E7%9A%84%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/0908%E4%B8%A8%E4%BB%80%E4%B9%88%E6%98%AFsql%E7%9A%84%E8%81%9A%E9%9B%86%E5%87%BD%E6%95%B0%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8%E5%AE%83%E4%BB%AC%E6%B1%87%E6%80%BB%E8%A1%A8%E7%9A%84%E6%95%B0%E6%8D%AE/</guid>
      <description>&lt;p&gt;08丨什么是SQL的聚集函数，如何利用它们汇总表的数据？&lt;/p&gt;&#xA;&lt;p&gt;我们上节课讲到了 SQL 函数，包括算术函数、字符串函数、日期函数和转换函数。实际上 SQL 函数还有一种，叫做聚集函数，它是对一组数据进行汇总的函数，输入的是一组数据的集合，输出的是单个值。通常我们可以利用聚集函数汇总表的数据，如果稍微复杂一些，我们还需要先对数据做筛选，然后再进行聚集，比如先按照某个条件进行分组，对分组条件进行筛选，然后得到筛选后的分组的汇总信息。&lt;/p&gt;</description>
    </item>
    <item>
      <title>1009丨子查询子查询的种类都有哪些如何提高子查询的性能</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/1009%E4%B8%A8%E5%AD%90%E6%9F%A5%E8%AF%A2%E5%AD%90%E6%9F%A5%E8%AF%A2%E7%9A%84%E7%A7%8D%E7%B1%BB%E9%83%BD%E6%9C%89%E5%93%AA%E4%BA%9B%E5%A6%82%E4%BD%95%E6%8F%90%E9%AB%98%E5%AD%90%E6%9F%A5%E8%AF%A2%E7%9A%84%E6%80%A7%E8%83%BD/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/1009%E4%B8%A8%E5%AD%90%E6%9F%A5%E8%AF%A2%E5%AD%90%E6%9F%A5%E8%AF%A2%E7%9A%84%E7%A7%8D%E7%B1%BB%E9%83%BD%E6%9C%89%E5%93%AA%E4%BA%9B%E5%A6%82%E4%BD%95%E6%8F%90%E9%AB%98%E5%AD%90%E6%9F%A5%E8%AF%A2%E7%9A%84%E6%80%A7%E8%83%BD/</guid>
      <description>&lt;p&gt;09丨子查询：子查询的种类都有哪些，如何提高子查询的性能？&lt;/p&gt;&#xA;&lt;p&gt;上节课我讲到了聚集函数，以及如何对数据进行分组统计，可以说我们之前讲的内容都是围绕单个表的 SELECT 查询展开的，实际上 SQL 还允许我们进行子查询，也就是嵌套在查询中的查询。这样做的好处是可以让我们进行更复杂的查询，同时更加容易理解查询的过程。因为很多时候，我们无法直接从数据表中得到查询结果，需要从查询结果集中再次进行查询，才能得到想要的结果。这个“查询结果集”就是今天我们要讲的子查询。&lt;/p&gt;</description>
    </item>
    <item>
      <title>1110丨常用的SQL标准有哪些在SQL92中是如何使用连接的</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/1110%E4%B8%A8%E5%B8%B8%E7%94%A8%E7%9A%84sql%E6%A0%87%E5%87%86%E6%9C%89%E5%93%AA%E4%BA%9B%E5%9C%A8sql92%E4%B8%AD%E6%98%AF%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E8%BF%9E%E6%8E%A5%E7%9A%84/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/1110%E4%B8%A8%E5%B8%B8%E7%94%A8%E7%9A%84sql%E6%A0%87%E5%87%86%E6%9C%89%E5%93%AA%E4%BA%9B%E5%9C%A8sql92%E4%B8%AD%E6%98%AF%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E8%BF%9E%E6%8E%A5%E7%9A%84/</guid>
      <description>&lt;p&gt;10丨常用的SQL标准有哪些，在SQL92中是如何使用连接的？&lt;/p&gt;&#xA;&lt;p&gt;今天我主要讲解连接表的操作。在讲解之前，我想先给你介绍下连接（JOIN）在 SQL 中的重要性。&lt;/p&gt;</description>
    </item>
    <item>
      <title>1211丨SQL99是如何使用连接的与SQL92的区别是什么</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/1211%E4%B8%A8sql99%E6%98%AF%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E8%BF%9E%E6%8E%A5%E7%9A%84%E4%B8%8Esql92%E7%9A%84%E5%8C%BA%E5%88%AB%E6%98%AF%E4%BB%80%E4%B9%88/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/1211%E4%B8%A8sql99%E6%98%AF%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E8%BF%9E%E6%8E%A5%E7%9A%84%E4%B8%8Esql92%E7%9A%84%E5%8C%BA%E5%88%AB%E6%98%AF%E4%BB%80%E4%B9%88/</guid>
      <description>&lt;p&gt;11丨SQL99是如何使用连接的，与SQL92的区别是什么？&lt;/p&gt;&#xA;&lt;p&gt;上节课我们讲解了 SQL92 标准，在它之后又提出了 SQL99 标准。现在各大 DBMS 中对 SQL99 标准的支持度更好。你一定听说过 LEFT JOIN、RIGHT JOIN 这样的操作符，这实际上就是 SQL99 的标准，在 SQL92 中它们是用（+）代替的。SQL92 和 SQL99 标准原理类似，只是 SQL99 标准的可读性更强。&lt;/p&gt;</description>
    </item>
    <item>
      <title>1312丨视图在SQL中的作用是什么它是怎样工作的</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/1312%E4%B8%A8%E8%A7%86%E5%9B%BE%E5%9C%A8sql%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8%E6%98%AF%E4%BB%80%E4%B9%88%E5%AE%83%E6%98%AF%E6%80%8E%E6%A0%B7%E5%B7%A5%E4%BD%9C%E7%9A%84/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/1312%E4%B8%A8%E8%A7%86%E5%9B%BE%E5%9C%A8sql%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8%E6%98%AF%E4%BB%80%E4%B9%88%E5%AE%83%E6%98%AF%E6%80%8E%E6%A0%B7%E5%B7%A5%E4%BD%9C%E7%9A%84/</guid>
      <description>&lt;p&gt;12丨视图在SQL中的作用是什么，它是怎样工作的？&lt;/p&gt;&#xA;&lt;p&gt;我们之前对 SQL 中的数据表查询进行了讲解，今天我们来看下如何对视图进行查询。视图，也就是我们今天要讲的虚拟表，本身是不具有数据的，它是 SQL 中的一个重要概念。从下面这张图中，你能看到，虚拟表的创建连接了一个或多个数据表，不同的查询应用都可以建立在虚拟表之上。&lt;/p&gt;</description>
    </item>
    <item>
      <title>1413丨什么是存储过程在实际项目中用得多么</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/1413%E4%B8%A8%E4%BB%80%E4%B9%88%E6%98%AF%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%9C%A8%E5%AE%9E%E9%99%85%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%94%A8%E5%BE%97%E5%A4%9A%E4%B9%88/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/1413%E4%B8%A8%E4%BB%80%E4%B9%88%E6%98%AF%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%9C%A8%E5%AE%9E%E9%99%85%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%94%A8%E5%BE%97%E5%A4%9A%E4%B9%88/</guid>
      <description>&lt;p&gt;13丨什么是存储过程，在实际项目中用得多么？&lt;/p&gt;&#xA;&lt;p&gt;上一节我介绍了视图，它是 SQL 中的一个重要应用，使用视图对 SQL 查询进行封装，可以让 SQL 的代码结构更清晰，让用户权限管理更安全。&lt;/p&gt;</description>
    </item>
    <item>
      <title>1514丨什么是事务处理如何使用COMMIT和ROLLBACK进行操作</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/1514%E4%B8%A8%E4%BB%80%E4%B9%88%E6%98%AF%E4%BA%8B%E5%8A%A1%E5%A4%84%E7%90%86%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8commit%E5%92%8Crollback%E8%BF%9B%E8%A1%8C%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/1514%E4%B8%A8%E4%BB%80%E4%B9%88%E6%98%AF%E4%BA%8B%E5%8A%A1%E5%A4%84%E7%90%86%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8commit%E5%92%8Crollback%E8%BF%9B%E8%A1%8C%E6%93%8D%E4%BD%9C/</guid>
      <description>&lt;p&gt;14丨什么是事务处理，如何使用COMMIT和ROLLBACK进行操作？&lt;/p&gt;&#xA;&lt;p&gt;我们知道在 MySQL 5.5 版本之前，默认的存储引擎是 MyISAM，在 5.5 版本之后默认存储引擎是 InnoDB。InnoDB 和 MyISAM 区别之一就是 InnoDB 支持事务，也可以说这是 InnoDB 取代 MyISAM 的重要原因。那么什么是事务呢？事务的英文是 transaction，从英文中你也能看出来它是进行一次处理的基本单元，要么完全执行，要么都不执行。&lt;/p&gt;</description>
    </item>
    <item>
      <title>1615丨初识事务隔离隔离的级别有哪些它们都解决了哪些异常问题</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/1615%E4%B8%A8%E5%88%9D%E8%AF%86%E4%BA%8B%E5%8A%A1%E9%9A%94%E7%A6%BB%E9%9A%94%E7%A6%BB%E7%9A%84%E7%BA%A7%E5%88%AB%E6%9C%89%E5%93%AA%E4%BA%9B%E5%AE%83%E4%BB%AC%E9%83%BD%E8%A7%A3%E5%86%B3%E4%BA%86%E5%93%AA%E4%BA%9B%E5%BC%82%E5%B8%B8%E9%97%AE%E9%A2%98/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/1615%E4%B8%A8%E5%88%9D%E8%AF%86%E4%BA%8B%E5%8A%A1%E9%9A%94%E7%A6%BB%E9%9A%94%E7%A6%BB%E7%9A%84%E7%BA%A7%E5%88%AB%E6%9C%89%E5%93%AA%E4%BA%9B%E5%AE%83%E4%BB%AC%E9%83%BD%E8%A7%A3%E5%86%B3%E4%BA%86%E5%93%AA%E4%BA%9B%E5%BC%82%E5%B8%B8%E9%97%AE%E9%A2%98/</guid>
      <description>&lt;p&gt;15丨初识事务隔离：隔离的级别有哪些，它们都解决了哪些异常问题？&lt;/p&gt;&#xA;&lt;p&gt;上一篇文章中，我们讲到了事务的四大特性 ACID，分别是原子性、一致性、隔离性和持久性，其中隔离性是事务的基本特性之一，它可以防止数据库在并发处理时出现数据不一致的情况。最严格的情况下，我们可以采用串行化的方式来执行每一个事务，这就意味着事务之间是相互独立的，不存在并发的情况。然而在实际生产环境下，考虑到随着用户量的增多，会存在大规模并发访问的情况，这就要求数据库有更高的吞吐能力，这个时候串行化的方式就无法满足数据库高并发访问的需求，我们还需要降低数据库的隔离标准，来换取事务之间的并发能力。&lt;/p&gt;</description>
    </item>
    <item>
      <title>1716丨游标当我们需要逐条处理数据时该怎么做</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/1716%E4%B8%A8%E6%B8%B8%E6%A0%87%E5%BD%93%E6%88%91%E4%BB%AC%E9%9C%80%E8%A6%81%E9%80%90%E6%9D%A1%E5%A4%84%E7%90%86%E6%95%B0%E6%8D%AE%E6%97%B6%E8%AF%A5%E6%80%8E%E4%B9%88%E5%81%9A/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/1716%E4%B8%A8%E6%B8%B8%E6%A0%87%E5%BD%93%E6%88%91%E4%BB%AC%E9%9C%80%E8%A6%81%E9%80%90%E6%9D%A1%E5%A4%84%E7%90%86%E6%95%B0%E6%8D%AE%E6%97%B6%E8%AF%A5%E6%80%8E%E4%B9%88%E5%81%9A/</guid>
      <description>&lt;p&gt;16丨游标：当我们需要逐条处理数据时，该怎么做？&lt;/p&gt;&#xA;&lt;p&gt;我们在编写 SQL 语句的时候通常是面向集合进行思考，这种思考方式更让我们关注结果集的特征，而不是具体的实现过程。面向集合的思考方式与面向过程的思考方式各有特点，我们该如何理解它们呢？&lt;/p&gt;</description>
    </item>
    <item>
      <title>1817丨如何使用Python操作MySQL</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/1817%E4%B8%A8%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8python%E6%93%8D%E4%BD%9Cmysql/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/1817%E4%B8%A8%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8python%E6%93%8D%E4%BD%9Cmysql/</guid>
      <description>&lt;p&gt;17丨如何使用Python操作MySQL？&lt;/p&gt;&#xA;&lt;p&gt;我们之前都是直接在 DBMS 里面进行 SQL 的操作，实际上我们还可以通过后端语言对 DBMS 进行访问以及进行相应的操作，这样更具有灵活性，可以实现一些较为复杂的操作。作为一个后端开发人员，掌握一些 SQL 技术是必须的；作为一个数据库管理人员，了解后端语言如何开发和管理数据库也是很有必要的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>1918丨SQLAlchemy如何使用PythonORM框架来操作MySQL</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/1918%E4%B8%A8sqlalchemy%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8pythonorm%E6%A1%86%E6%9E%B6%E6%9D%A5%E6%93%8D%E4%BD%9Cmysql/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/1918%E4%B8%A8sqlalchemy%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8pythonorm%E6%A1%86%E6%9E%B6%E6%9D%A5%E6%93%8D%E4%BD%9Cmysql/</guid>
      <description>&lt;p&gt;18丨SQLAlchemy：如何使用Python ORM框架来操作MySQL？&lt;/p&gt;&#xA;&lt;p&gt;上节课，我介绍了 Python DB API 规范的作用，以及如何使用 MySQL 官方的 mysql-connector 驱动来完成数据库的连接和使用。在项目比较小的时候，我们可以直接使用 SQL 语句，通过 mysql-connector 完成与 MySQL 的交互，但是任何事物都有两面性，随着项目规模的增加，代码会越来越复杂，维护的成本也越来越高，这时 mysql-connector 就不够用了，我们需要更好的设计模式。&lt;/p&gt;</description>
    </item>
    <item>
      <title>2019丨基础篇总结如何理解查询优化通配符以及存储过程</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/2019%E4%B8%A8%E5%9F%BA%E7%A1%80%E7%AF%87%E6%80%BB%E7%BB%93%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96%E9%80%9A%E9%85%8D%E7%AC%A6%E4%BB%A5%E5%8F%8A%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/2019%E4%B8%A8%E5%9F%BA%E7%A1%80%E7%AF%87%E6%80%BB%E7%BB%93%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96%E9%80%9A%E9%85%8D%E7%AC%A6%E4%BB%A5%E5%8F%8A%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/</guid>
      <description>&lt;p&gt;19丨基础篇总结：如何理解查询优化、通配符以及存储过程？&lt;/p&gt;&#xA;&lt;p&gt;到这一篇的时候，意味着 SQL 专栏的基础部分正式更新完毕。在文章更新的时候，谢谢大家积极地评论和提问，让专栏增色不少。我总结了一些基础篇的常见问题，希望能对你有所帮助。答疑篇主要包括了 DBMS、查询优化、存储过程、事务处理等一些问题。&lt;/p&gt;</description>
    </item>
    <item>
      <title>2120丨当我们思考数据库调优的时候都有哪些维度可以选择</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/2120%E4%B8%A8%E5%BD%93%E6%88%91%E4%BB%AC%E6%80%9D%E8%80%83%E6%95%B0%E6%8D%AE%E5%BA%93%E8%B0%83%E4%BC%98%E7%9A%84%E6%97%B6%E5%80%99%E9%83%BD%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%B4%E5%BA%A6%E5%8F%AF%E4%BB%A5%E9%80%89%E6%8B%A9/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/2120%E4%B8%A8%E5%BD%93%E6%88%91%E4%BB%AC%E6%80%9D%E8%80%83%E6%95%B0%E6%8D%AE%E5%BA%93%E8%B0%83%E4%BC%98%E7%9A%84%E6%97%B6%E5%80%99%E9%83%BD%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%B4%E5%BA%A6%E5%8F%AF%E4%BB%A5%E9%80%89%E6%8B%A9/</guid>
      <description>&lt;p&gt;20丨当我们思考数据库调优的时候，都有哪些维度可以选择？&lt;/p&gt;&#xA;&lt;p&gt;从这一篇开始，我们正式进入了 SQL 性能优化篇。在这一模块中，我们会关注如何提升 SQL 查询的效率。你可以思考一下，如何你是一名 DBA 或者开发人员，都有哪些维度可以进行数据库调优？&lt;/p&gt;</description>
    </item>
    <item>
      <title>2221丨范式设计数据表的范式有哪些3NF指的是什么</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/2221%E4%B8%A8%E8%8C%83%E5%BC%8F%E8%AE%BE%E8%AE%A1%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%9A%84%E8%8C%83%E5%BC%8F%E6%9C%89%E5%93%AA%E4%BA%9B3nf%E6%8C%87%E7%9A%84%E6%98%AF%E4%BB%80%E4%B9%88/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/2221%E4%B8%A8%E8%8C%83%E5%BC%8F%E8%AE%BE%E8%AE%A1%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%9A%84%E8%8C%83%E5%BC%8F%E6%9C%89%E5%93%AA%E4%BA%9B3nf%E6%8C%87%E7%9A%84%E6%98%AF%E4%BB%80%E4%B9%88/</guid>
      <description>&lt;p&gt;21丨范式设计：数据表的范式有哪些，3NF指的是什么？&lt;/p&gt;&#xA;&lt;p&gt;在日常工作中，我们都需要遵守一定的规范，比如签到打卡、审批流程等，这些规范虽然有一定的约束感，却是非常有必要的，这样可以保证正确性和严谨性，但有些情况下，约束反而会带来效率的下降，比如一个可以直接操作的任务，却需要通过重重审批才能执行。&lt;/p&gt;</description>
    </item>
    <item>
      <title>2322丨反范式设计3NF有什么不足为什么有时候需要反范式设计</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/2322%E4%B8%A8%E5%8F%8D%E8%8C%83%E5%BC%8F%E8%AE%BE%E8%AE%A13nf%E6%9C%89%E4%BB%80%E4%B9%88%E4%B8%8D%E8%B6%B3%E4%B8%BA%E4%BB%80%E4%B9%88%E6%9C%89%E6%97%B6%E5%80%99%E9%9C%80%E8%A6%81%E5%8F%8D%E8%8C%83%E5%BC%8F%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/2322%E4%B8%A8%E5%8F%8D%E8%8C%83%E5%BC%8F%E8%AE%BE%E8%AE%A13nf%E6%9C%89%E4%BB%80%E4%B9%88%E4%B8%8D%E8%B6%B3%E4%B8%BA%E4%BB%80%E4%B9%88%E6%9C%89%E6%97%B6%E5%80%99%E9%9C%80%E8%A6%81%E5%8F%8D%E8%8C%83%E5%BC%8F%E8%AE%BE%E8%AE%A1/</guid>
      <description>&lt;p&gt;22丨反范式设计：3NF有什么不足，为什么有时候需要反范式设计？&lt;/p&gt;&#xA;&lt;p&gt;上一篇文章中，我们介绍了数据表设计的三种范式。作为数据库的设计人员，理解范式的设计以及反范式优化是非常有必要的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>2423丨索引的概览用还是不用索引这是一个问题</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/2423%E4%B8%A8%E7%B4%A2%E5%BC%95%E7%9A%84%E6%A6%82%E8%A7%88%E7%94%A8%E8%BF%98%E6%98%AF%E4%B8%8D%E7%94%A8%E7%B4%A2%E5%BC%95%E8%BF%99%E6%98%AF%E4%B8%80%E4%B8%AA%E9%97%AE%E9%A2%98/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/2423%E4%B8%A8%E7%B4%A2%E5%BC%95%E7%9A%84%E6%A6%82%E8%A7%88%E7%94%A8%E8%BF%98%E6%98%AF%E4%B8%8D%E7%94%A8%E7%B4%A2%E5%BC%95%E8%BF%99%E6%98%AF%E4%B8%80%E4%B8%AA%E9%97%AE%E9%A2%98/</guid>
      <description>&lt;p&gt;23丨索引的概览：用还是不用索引，这是一个问题&lt;/p&gt;&#xA;&lt;p&gt;提起优化 SQL，你可能会把它理解为优化索引。简单来说这也不算错，索引在 SQL 优化中占了很大的比重。索引用得好，可以将 SQL 查询的效率提升 10 倍甚至更多。但索引是万能的吗？既然索引可以提升效率，只要创建索引不就好了吗？实际上，在有些情况下，创建索引反而会降低效率。&lt;/p&gt;</description>
    </item>
    <item>
      <title>2524丨索引的原理我们为什么用B树来做索引</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/2524%E4%B8%A8%E7%B4%A2%E5%BC%95%E7%9A%84%E5%8E%9F%E7%90%86%E6%88%91%E4%BB%AC%E4%B8%BA%E4%BB%80%E4%B9%88%E7%94%A8b%E6%A0%91%E6%9D%A5%E5%81%9A%E7%B4%A2%E5%BC%95/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/2524%E4%B8%A8%E7%B4%A2%E5%BC%95%E7%9A%84%E5%8E%9F%E7%90%86%E6%88%91%E4%BB%AC%E4%B8%BA%E4%BB%80%E4%B9%88%E7%94%A8b%E6%A0%91%E6%9D%A5%E5%81%9A%E7%B4%A2%E5%BC%95/</guid>
      <description>&lt;p&gt;24丨索引的原理：我们为什么用B+树来做索引？&lt;/p&gt;&#xA;&lt;p&gt;上节课我讲到了索引的作用，是否需要建立索引，以及建立什么样的索引，需要我们根据实际情况进行选择。我之前说过，索引其实就是一种数据结构，那么今天我们就来看下，索引的数据结构究竟是怎样的？对索引底层的数据结构有了更深入的了解后，就会更了解索引的使用原则。&lt;/p&gt;</description>
    </item>
    <item>
      <title>2625丨Hash索引的底层原理是什么</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/2625%E4%B8%A8hash%E7%B4%A2%E5%BC%95%E7%9A%84%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86%E6%98%AF%E4%BB%80%E4%B9%88/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/2625%E4%B8%A8hash%E7%B4%A2%E5%BC%95%E7%9A%84%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86%E6%98%AF%E4%BB%80%E4%B9%88/</guid>
      <description>&lt;p&gt;25丨Hash索引的底层原理是什么？&lt;/p&gt;&#xA;&lt;p&gt;我们上节课讲解了 B+ 树的原理，今天我们来学习下 Hash 的原理和使用。Hash 本身是一个函数，又被称为散列函数，它可以帮助我们大幅提升检索数据的效率。打个比方，Hash 就好像一个智能前台，你只要告诉它想要查找的人的姓名，它就会告诉你那个人坐在哪个位置，只需要一次交互就可以完成查找，效率非常高。大名鼎鼎的 MD5 就是 Hash 函数的一种。&lt;/p&gt;</description>
    </item>
    <item>
      <title>2726丨索引的使用原则如何通过索引让SQL查询效率最大化</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/2726%E4%B8%A8%E7%B4%A2%E5%BC%95%E7%9A%84%E4%BD%BF%E7%94%A8%E5%8E%9F%E5%88%99%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E7%B4%A2%E5%BC%95%E8%AE%A9sql%E6%9F%A5%E8%AF%A2%E6%95%88%E7%8E%87%E6%9C%80%E5%A4%A7%E5%8C%96/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/2726%E4%B8%A8%E7%B4%A2%E5%BC%95%E7%9A%84%E4%BD%BF%E7%94%A8%E5%8E%9F%E5%88%99%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E7%B4%A2%E5%BC%95%E8%AE%A9sql%E6%9F%A5%E8%AF%A2%E6%95%88%E7%8E%87%E6%9C%80%E5%A4%A7%E5%8C%96/</guid>
      <description>&lt;p&gt;26丨索引的使用原则：如何通过索引让SQL查询效率最大化？&lt;/p&gt;&#xA;&lt;p&gt;我之前讲了索引的使用和它的底层原理，今天我来讲一讲索引的使用原则。既然我们的目标是提升 SQL 的查询效率，那么该如何通过索引让效率最大化呢？&lt;/p&gt;</description>
    </item>
    <item>
      <title>2827丨从数据页的角度理解B树查询</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/2827%E4%B8%A8%E4%BB%8E%E6%95%B0%E6%8D%AE%E9%A1%B5%E7%9A%84%E8%A7%92%E5%BA%A6%E7%90%86%E8%A7%A3b%E6%A0%91%E6%9F%A5%E8%AF%A2/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/2827%E4%B8%A8%E4%BB%8E%E6%95%B0%E6%8D%AE%E9%A1%B5%E7%9A%84%E8%A7%92%E5%BA%A6%E7%90%86%E8%A7%A3b%E6%A0%91%E6%9F%A5%E8%AF%A2/</guid>
      <description>&lt;p&gt;27丨从数据页的角度理解B+树查询&lt;/p&gt;&#xA;&lt;p&gt;我们之前已经了解了 B+ 树和 Hash 索引的原理，这些索引结构给我们提供了高效的索引方式，不过这些索引信息以及数据记录都是保存在文件上的，确切说是存储在页结构中。&lt;/p&gt;</description>
    </item>
    <item>
      <title>2928丨从磁盘IO的角度理解SQL查询的成本</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/2928%E4%B8%A8%E4%BB%8E%E7%A3%81%E7%9B%98io%E7%9A%84%E8%A7%92%E5%BA%A6%E7%90%86%E8%A7%A3sql%E6%9F%A5%E8%AF%A2%E7%9A%84%E6%88%90%E6%9C%AC/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/2928%E4%B8%A8%E4%BB%8E%E7%A3%81%E7%9B%98io%E7%9A%84%E8%A7%92%E5%BA%A6%E7%90%86%E8%A7%A3sql%E6%9F%A5%E8%AF%A2%E7%9A%84%E6%88%90%E6%9C%AC/</guid>
      <description>&lt;p&gt;28丨从磁盘I/O的角度理解SQL查询的成本&lt;/p&gt;&#xA;&lt;p&gt;在开始今天的内容前，我们先来回忆一下之前的内容。&lt;/p&gt;&#xA;&lt;p&gt;数据库存储的基本单位是页，对于一棵 B+ 树的索引来说，是先从根节点找到叶子节点，也就是先查找数据行所在的页，再将页读入到内存中，在内存中对页的记录进行查找，从而得到想要数据。你看，虽然我们想要查找的，只是一行记录，但是对于磁盘 I/O 来说却需要加载一页的信息，因为页是最小的存储单位。&lt;/p&gt;</description>
    </item>
    <item>
      <title>3029丨为什么没有理想的索引</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/3029%E4%B8%A8%E4%B8%BA%E4%BB%80%E4%B9%88%E6%B2%A1%E6%9C%89%E7%90%86%E6%83%B3%E7%9A%84%E7%B4%A2%E5%BC%95/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/3029%E4%B8%A8%E4%B8%BA%E4%BB%80%E4%B9%88%E6%B2%A1%E6%9C%89%E7%90%86%E6%83%B3%E7%9A%84%E7%B4%A2%E5%BC%95/</guid>
      <description>&lt;p&gt;29丨为什么没有理想的索引？&lt;/p&gt;&#xA;&lt;p&gt;我之前讲过页这个结构，表和索引都会存储在页中，不同的 DBMS 默认的页的大小是不同的，同时我们也了解到 DBMS 会有缓冲池的机制，在缓冲池里需要有足够多的空间，存储经常被使用到的页，尽可能减少直接的磁盘 I/O 操作。这种策略对 SQL 查询的底层执行来说非常重要，可以从物理层面上最大程度提升 SQL 的查询效率。&lt;/p&gt;</description>
    </item>
    <item>
      <title>3130丨锁悲观锁和乐观锁是什么</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/3130%E4%B8%A8%E9%94%81%E6%82%B2%E8%A7%82%E9%94%81%E5%92%8C%E4%B9%90%E8%A7%82%E9%94%81%E6%98%AF%E4%BB%80%E4%B9%88/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/3130%E4%B8%A8%E9%94%81%E6%82%B2%E8%A7%82%E9%94%81%E5%92%8C%E4%B9%90%E8%A7%82%E9%94%81%E6%98%AF%E4%BB%80%E4%B9%88/</guid>
      <description>&lt;p&gt;30丨锁：悲观锁和乐观锁是什么？&lt;/p&gt;&#xA;&lt;p&gt;索引和锁是数据库中的两个核心知识点，不论在工作中，还是在面试中，我们都会经常跟它们打交道。之前我们已经从不同维度对索引进行了了解，比如 B+ 树、Hash 索引、页结构、缓冲池和索引原则等，了解它们的工作原理可以加深我们对索引的理解。同时在基础篇的部分中，我也讲解了事务的 4 大原则以及不同的隔离级别。这些隔离级别的实现都是通过锁来完成的，你可以思考下为什么我们需要给数据加锁呢？&lt;/p&gt;</description>
    </item>
    <item>
      <title>3231丨为什么大部分RDBMS都会支持MVCC</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/3231%E4%B8%A8%E4%B8%BA%E4%BB%80%E4%B9%88%E5%A4%A7%E9%83%A8%E5%88%86rdbms%E9%83%BD%E4%BC%9A%E6%94%AF%E6%8C%81mvcc/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/3231%E4%B8%A8%E4%B8%BA%E4%BB%80%E4%B9%88%E5%A4%A7%E9%83%A8%E5%88%86rdbms%E9%83%BD%E4%BC%9A%E6%94%AF%E6%8C%81mvcc/</guid>
      <description>&lt;p&gt;31丨为什么大部分RDBMS都会支持MVCC？&lt;/p&gt;&#xA;&lt;p&gt;上一篇文章中，我们讲到了锁的划分，以及乐观锁和悲观锁的思想。今天我们就来看下 MVCC，它就是采用乐观锁思想的一种方式。那么它到底有什么用呢？&lt;/p&gt;</description>
    </item>
    <item>
      <title>3332丨查询优化器是如何工作的</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/3332%E4%B8%A8%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96%E5%99%A8%E6%98%AF%E5%A6%82%E4%BD%95%E5%B7%A5%E4%BD%9C%E7%9A%84/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/3332%E4%B8%A8%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96%E5%99%A8%E6%98%AF%E5%A6%82%E4%BD%95%E5%B7%A5%E4%BD%9C%E7%9A%84/</guid>
      <description>&lt;p&gt;32丨查询优化器是如何工作的？&lt;/p&gt;&#xA;&lt;p&gt;我们总是希望数据库可以运行得更快，也就是响应时间更快，吞吐量更大。想要达到这样的目的，我们一方面需要高并发的事务处理能力，另一方面需要创建合适的索引，让数据的查找效率最大化。事务和索引的使用是数据库中的两个重要核心，事务可以让数据库在增删查改的过程中，保证数据的正确性和安全性，而索引可以帮数据库提升数据的查找效率。&lt;/p&gt;</description>
    </item>
    <item>
      <title>3433丨如何使用性能分析工具定位SQL执行慢的原因</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/3433%E4%B8%A8%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7%E5%AE%9A%E4%BD%8Dsql%E6%89%A7%E8%A1%8C%E6%85%A2%E7%9A%84%E5%8E%9F%E5%9B%A0/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/3433%E4%B8%A8%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7%E5%AE%9A%E4%BD%8Dsql%E6%89%A7%E8%A1%8C%E6%85%A2%E7%9A%84%E5%8E%9F%E5%9B%A0/</guid>
      <description>&lt;p&gt;33丨如何使用性能分析工具定位SQL执行慢的原因？&lt;/p&gt;&#xA;&lt;p&gt;在上一篇文章中，我们了解了查询优化器，知道在查询优化器中会经历逻辑查询优化和物理查询优化。需要注意的是，查询优化器只能在已经确定的情况下（SQL 语句、索引设计、缓冲池大小、查询优化器参数等）决定最优的查询执行计划。&lt;/p&gt;</description>
    </item>
    <item>
      <title>3534丨答疑篇关于索引以及缓冲池的一些解惑</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/3534%E4%B8%A8%E7%AD%94%E7%96%91%E7%AF%87%E5%85%B3%E4%BA%8E%E7%B4%A2%E5%BC%95%E4%BB%A5%E5%8F%8A%E7%BC%93%E5%86%B2%E6%B1%A0%E7%9A%84%E4%B8%80%E4%BA%9B%E8%A7%A3%E6%83%91/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/3534%E4%B8%A8%E7%AD%94%E7%96%91%E7%AF%87%E5%85%B3%E4%BA%8E%E7%B4%A2%E5%BC%95%E4%BB%A5%E5%8F%8A%E7%BC%93%E5%86%B2%E6%B1%A0%E7%9A%84%E4%B8%80%E4%BA%9B%E8%A7%A3%E6%83%91/</guid>
      <description>&lt;p&gt;34丨答疑篇：关于索引以及缓冲池的一些解惑&lt;/p&gt;&#xA;&lt;p&gt;这篇文章是进阶篇的最后一篇，在这一模块中，我主要针对 SQL 运行的底层原理进行了讲解，其中还有很多问题没有回答，我总结了进阶篇中常见的一些问题，希望能对你有所帮助。下面的内容主要包括了索引原则、自适应 Hash、缓冲池机制和存储引擎等。&lt;/p&gt;</description>
    </item>
    <item>
      <title>3635丨数据库主从同步的作用是什么如何解决数据不一致问题</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/3635%E4%B8%A8%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%BB%8E%E5%90%8C%E6%AD%A5%E7%9A%84%E4%BD%9C%E7%94%A8%E6%98%AF%E4%BB%80%E4%B9%88%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E6%95%B0%E6%8D%AE%E4%B8%8D%E4%B8%80%E8%87%B4%E9%97%AE%E9%A2%98/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/3635%E4%B8%A8%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E4%BB%8E%E5%90%8C%E6%AD%A5%E7%9A%84%E4%BD%9C%E7%94%A8%E6%98%AF%E4%BB%80%E4%B9%88%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E6%95%B0%E6%8D%AE%E4%B8%8D%E4%B8%80%E8%87%B4%E9%97%AE%E9%A2%98/</guid>
      <description>&lt;p&gt;35丨数据库主从同步的作用是什么，如何解决数据不一致问题？&lt;/p&gt;&#xA;&lt;p&gt;我们之前讲解了 Redis，它是一种高性能的内存数据库；而 MySQL 是基于磁盘文件的关系型数据库，相比于 Redis 来说，读取速度会慢一些，但是功能强大，可以用于存储持久化的数据。在实际工作中，我们常常将 Redis 作为缓存与 MySQL 配合来使用，当有数据访问请求的时候，首先会从缓存中进行查找，如果存在就直接取出，如果不存在再访问数据库，这样就提升了读取的效率，也减少了对后端数据库的访问压力。可以说使用 Redis 这种缓存架构是高并发架构中非常重要的一环。&lt;/p&gt;</description>
    </item>
    <item>
      <title>3736丨数据库没有备份没有使用Binlog的情况下如何恢复数据</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/3736%E4%B8%A8%E6%95%B0%E6%8D%AE%E5%BA%93%E6%B2%A1%E6%9C%89%E5%A4%87%E4%BB%BD%E6%B2%A1%E6%9C%89%E4%BD%BF%E7%94%A8binlog%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%E5%A6%82%E4%BD%95%E6%81%A2%E5%A4%8D%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/3736%E4%B8%A8%E6%95%B0%E6%8D%AE%E5%BA%93%E6%B2%A1%E6%9C%89%E5%A4%87%E4%BB%BD%E6%B2%A1%E6%9C%89%E4%BD%BF%E7%94%A8binlog%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%E5%A6%82%E4%BD%95%E6%81%A2%E5%A4%8D%E6%95%B0%E6%8D%AE/</guid>
      <description>&lt;p&gt;36丨数据库没有备份，没有使用Binlog的情况下，如何恢复数据？&lt;/p&gt;&#xA;&lt;p&gt;我们上节课讲解了 MySQL 的复制技术，通过主从同步可以实现读写分离，热备份，让服务器更加高可用。MySQL 的复制主要是通过 Binlog 来完成的，Binlog 记录了数据库更新的事件，从库 I/O 线程会向主库发送 Binlog 更新的请求，同时主库二进制转储线程会发送 Binlog 给从库作为中继日志进行保存，然后从库会通过中继日志重放，完成数据库的同步更新。这种同步操作是近乎实时的同步，然而也有人为误操作情况的发生，比如 DBA 人员为了方便直接在生产环境中对数据进行操作，或者忘记了当前是在开发环境，还是在生产环境中，就直接对数据库进行操作，这样很有可能会造成数据的丢失，情况严重时，误操作还有可能同步给从库实时更新。不过我们依然有一些策略可以防止这种误操作，比如利用延迟备份的机制。延迟备份最大的作用就是避免这种“手抖”的情况，让我们在延迟从库进行误操作前停止下来，进行数据库的恢复。&#xA;当然如果我们对数据库做过时间点备份，也可以直接恢复到该时间点。不过我们今天要讨论的是一个特殊的情况，也就是在没做数据库备份，没有开启使用 Binlog 的情况下，尽可能地找回数据。&#xA;今天的内容主要包括以下几个部分：&lt;/p&gt;</description>
    </item>
    <item>
      <title>3837丨SQL注入你的SQL是如何被注入的</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/3837%E4%B8%A8sql%E6%B3%A8%E5%85%A5%E4%BD%A0%E7%9A%84sql%E6%98%AF%E5%A6%82%E4%BD%95%E8%A2%AB%E6%B3%A8%E5%85%A5%E7%9A%84/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/3837%E4%B8%A8sql%E6%B3%A8%E5%85%A5%E4%BD%A0%E7%9A%84sql%E6%98%AF%E5%A6%82%E4%BD%95%E8%A2%AB%E6%B3%A8%E5%85%A5%E7%9A%84/</guid>
      <description>&lt;p&gt;37丨SQL注入：你的SQL是如何被注入的？&lt;/p&gt;&#xA;&lt;p&gt;我们之前已经讲解了 SQL 的使用及优化，正常的 SQL 调用可以帮我们从数据库中获取想要的数据，然而我们构建的 Web 应用是个应用程序，本身也可能存在安全漏洞，如果不加以注意，就会出现 Web 安全的隐患，比如通过非正常的方式注入 SQL。&#xA;在过去的几年中，我们也能经常看到用户信息被泄露，出现这种情况，很大程度上和 SQL 注入有关。所以了解 SQL 注入的原理以及防范还是非常有必要的。&#xA;今天我们就通过一个简单的练习看下 SQL 注入的过程是怎样的，内容主要包括以下几个部分：&lt;/p&gt;</description>
    </item>
    <item>
      <title>3935丨如何在Excel中使用SQL语言</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/3935%E4%B8%A8%E5%A6%82%E4%BD%95%E5%9C%A8excel%E4%B8%AD%E4%BD%BF%E7%94%A8sql%E8%AF%AD%E8%A8%80/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/3935%E4%B8%A8%E5%A6%82%E4%BD%95%E5%9C%A8excel%E4%B8%AD%E4%BD%BF%E7%94%A8sql%E8%AF%AD%E8%A8%80/</guid>
      <description>&lt;p&gt;35丨如何在Excel中使用SQL语言？&lt;/p&gt;&#xA;&lt;p&gt;在进阶篇中，我们对设计范式、索引、页结构、事务以及查询优化器的原理进行了学习，了解这些可以让我们更好地使用 SQL 来操作 RDBMS。实际上 SQL 的影响力远不止于此，在数据的世界里，SQL 更像是一门通用的语言，虽然每种工具都会有一些自己的“方言”，但是掌握 SQL 可以让我们接触其它以数据为核心的工具时，更加游刃有余。&lt;/p&gt;</description>
    </item>
    <item>
      <title>4036丨WebSQL如何在H5中存储一个本地数据库</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/4036%E4%B8%A8websql%E5%A6%82%E4%BD%95%E5%9C%A8h5%E4%B8%AD%E5%AD%98%E5%82%A8%E4%B8%80%E4%B8%AA%E6%9C%AC%E5%9C%B0%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/4036%E4%B8%A8websql%E5%A6%82%E4%BD%95%E5%9C%A8h5%E4%B8%AD%E5%AD%98%E5%82%A8%E4%B8%80%E4%B8%AA%E6%9C%AC%E5%9C%B0%E6%95%B0%E6%8D%AE%E5%BA%93/</guid>
      <description>&lt;p&gt;36丨WebSQL：如何在H5中存储一个本地数据库？&lt;/p&gt;&#xA;&lt;p&gt;上一篇文章中，我们讲到了如何在 Excel 中使用 SQL 进行查询。在 Web 应用中，即使不通过后端语言与数据库进行操作，在 Web 前端中也可以使用 WebSQL。WebSQL 是一种操作本地数据库的网页 API 接口，通过它，我们就可以操作客户端的本地存储。&lt;/p&gt;</description>
    </item>
    <item>
      <title>4137丨SQLite为什么微信用SQLite存储聊天记录</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/4137%E4%B8%A8sqlite%E4%B8%BA%E4%BB%80%E4%B9%88%E5%BE%AE%E4%BF%A1%E7%94%A8sqlite%E5%AD%98%E5%82%A8%E8%81%8A%E5%A4%A9%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/4137%E4%B8%A8sqlite%E4%B8%BA%E4%BB%80%E4%B9%88%E5%BE%AE%E4%BF%A1%E7%94%A8sqlite%E5%AD%98%E5%82%A8%E8%81%8A%E5%A4%A9%E8%AE%B0%E5%BD%95/</guid>
      <description>&lt;p&gt;37丨SQLite：为什么微信用SQLite存储聊天记录？&lt;/p&gt;&#xA;&lt;p&gt;我在上一篇文章中讲了 WebSQL，当我们在 Chrome、Safari 和 Firefox 等浏览器客户端中使用 WebSQL 时，会直接操作 SQLite。实际上 SQLite 本身是一个嵌入式的开源数据库引擎，大小只有 3M 左右，可以将整个 SQLite 嵌入到应用中，而不用采用传统的客户端／服务器（Client/Server）的架构。这样做的好处就是非常轻便，在许多智能设备和应用中都可以使用 SQLite，比如微信就采用了 SQLite 作为本地聊天记录的存储。&lt;/p&gt;</description>
    </item>
    <item>
      <title>4240丨初识RedisRedis为什么会这么快</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/4240%E4%B8%A8%E5%88%9D%E8%AF%86redisredis%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%BF%99%E4%B9%88%E5%BF%AB/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/4240%E4%B8%A8%E5%88%9D%E8%AF%86redisredis%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E8%BF%99%E4%B9%88%E5%BF%AB/</guid>
      <description>&lt;p&gt;40丨初识Redis：Redis为什么会这么快？&lt;/p&gt;&#xA;&lt;p&gt;之前我们讲解了一些 RDBMS 的使用，比如 MySQL、Oracle、SQL Server 和 SQLite 等，实际上在日常工作中，我们还会接触到一些 NoSQL 类型的数据库。如果对比 RDBMS 和 NoSQL 数据库，你会发现 RDBMS 建立在关系模型基础上，强调数据的一致性和各种约束条件，而 NoSQL 的规则是“只提供你想要的”，数据模型灵活，查询效率高，成本低。但同时，相比 RDBMS，NoSQL 数据库没有统一的架构和标准语言，每种数据库之间差异较大，各有所长。&lt;/p&gt;</description>
    </item>
    <item>
      <title>4341丨如何使用Redis来实现多用户抢票问题</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/4341%E4%B8%A8%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8redis%E6%9D%A5%E5%AE%9E%E7%8E%B0%E5%A4%9A%E7%94%A8%E6%88%B7%E6%8A%A2%E7%A5%A8%E9%97%AE%E9%A2%98/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/4341%E4%B8%A8%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8redis%E6%9D%A5%E5%AE%9E%E7%8E%B0%E5%A4%9A%E7%94%A8%E6%88%B7%E6%8A%A2%E7%A5%A8%E9%97%AE%E9%A2%98/</guid>
      <description>&lt;p&gt;41丨如何使用Redis来实现多用户抢票问题&lt;/p&gt;&#xA;&lt;p&gt;在上一篇文章中，我们已经对 Redis 有了初步的认识，了解到 Redis 采用 Key-Value 的方式进行存储，在 Redis 内部，使用的是 redisObject 对象来表示所有的 key 和 value。同时我们还了解到 Redis 本身用的是单线程的机制，采用了多路 I/O 复用的技术，在处理多个 I/O 请求的时候效率很高。&lt;/p&gt;</description>
    </item>
    <item>
      <title>4443丨如何使用Redis搭建玩家排行榜</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/4443%E4%B8%A8%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8redis%E6%90%AD%E5%BB%BA%E7%8E%A9%E5%AE%B6%E6%8E%92%E8%A1%8C%E6%A6%9C/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/4443%E4%B8%A8%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8redis%E6%90%AD%E5%BB%BA%E7%8E%A9%E5%AE%B6%E6%8E%92%E8%A1%8C%E6%A6%9C/</guid>
      <description>&lt;p&gt;43丨如何使用Redis搭建玩家排行榜？&lt;/p&gt;&#xA;&lt;p&gt;上一篇文章中，我们使用 Redis 模拟了多用户抢票的问题，这里再回顾一下原理。我们通过使用 WATCH+MULTI 的方式实现乐观锁机制，对 ticket_count 这个键进行监视，当这个键发生变化的时候事务就会被打断，重新请求，这样做的好处就是可以保证事务对键进行操作的原子性，当然我们也可以使用 Redis 的 incr 和 decr 来实现键的原子性递增或递减。&lt;/p&gt;</description>
    </item>
    <item>
      <title>4544丨DBMS篇总结和答疑用SQLite做词云</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/4544%E4%B8%A8dbms%E7%AF%87%E6%80%BB%E7%BB%93%E5%92%8C%E7%AD%94%E7%96%91%E7%94%A8sqlite%E5%81%9A%E8%AF%8D%E4%BA%91/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/4544%E4%B8%A8dbms%E7%AF%87%E6%80%BB%E7%BB%93%E5%92%8C%E7%AD%94%E7%96%91%E7%94%A8sqlite%E5%81%9A%E8%AF%8D%E4%BA%91/</guid>
      <description>&lt;p&gt;44丨DBMS篇总结和答疑：用SQLite做词云&lt;/p&gt;&#xA;&lt;p&gt;在认识 DBMS 篇中，我们讲解了 Excel+SQL、WebSQL、SQLite 以及 Redis 的使用，这些 DBMS 有自己适用的领域，我们可以根据需求选择适合的 DBMS。我总结了一些大家常见的问题，希望能对你有所帮助。&lt;/p&gt;</description>
    </item>
    <item>
      <title>4645丨数据清洗如何使用SQL对数据进行清洗</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/4645%E4%B8%A8%E6%95%B0%E6%8D%AE%E6%B8%85%E6%B4%97%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8sql%E5%AF%B9%E6%95%B0%E6%8D%AE%E8%BF%9B%E8%A1%8C%E6%B8%85%E6%B4%97/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/4645%E4%B8%A8%E6%95%B0%E6%8D%AE%E6%B8%85%E6%B4%97%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8sql%E5%AF%B9%E6%95%B0%E6%8D%AE%E8%BF%9B%E8%A1%8C%E6%B8%85%E6%B4%97/</guid>
      <description>&lt;p&gt;45丨数据清洗：如何使用SQL对数据进行清洗？&lt;/p&gt;&#xA;&lt;p&gt;SQL 可以帮我们进行数据处理，总的来说可以分成 OLTP 和 OLAP 两种方式。&lt;/p&gt;&#xA;&lt;p&gt;OLTP 称之为联机事务处理，我们之前讲解的对数据进行增删改查，SQL 查询优化，事务处理等就属于 OLTP 的范畴。它对实时性要求高，需要将用户的数据有效地存储到数据库中，同时有时候针对互联网应用的需求，我们还需要设置数据库的主从架构保证数据库的高并发和高可用性。&lt;/p&gt;</description>
    </item>
    <item>
      <title>4747丨如何利用SQL对零售数据进行分析</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/4747%E4%B8%A8%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8sql%E5%AF%B9%E9%9B%B6%E5%94%AE%E6%95%B0%E6%8D%AE%E8%BF%9B%E8%A1%8C%E5%88%86%E6%9E%90/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/4747%E4%B8%A8%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8sql%E5%AF%B9%E9%9B%B6%E5%94%AE%E6%95%B0%E6%8D%AE%E8%BF%9B%E8%A1%8C%E5%88%86%E6%9E%90/</guid>
      <description>&lt;p&gt;47丨如何利用SQL对零售数据进行分析？&lt;/p&gt;&#xA;&lt;p&gt;我们通过 OLTP 系统实时捕捉到了用户的数据，还需要在 OLAP 系统中对它们进行分析。之前我们讲解了如何对数据进行清洗，以及如何对分散在不同地方的数据进行集成，今天我们来看下如何使用 SQL 分析这些数据。&lt;/p&gt;</description>
    </item>
    <item>
      <title>48互联网的下半场是数据驱动的时代</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/48%E4%BA%92%E8%81%94%E7%BD%91%E7%9A%84%E4%B8%8B%E5%8D%8A%E5%9C%BA%E6%98%AF%E6%95%B0%E6%8D%AE%E9%A9%B1%E5%8A%A8%E7%9A%84%E6%97%B6%E4%BB%A3/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/sql%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/48%E4%BA%92%E8%81%94%E7%BD%91%E7%9A%84%E4%B8%8B%E5%8D%8A%E5%9C%BA%E6%98%AF%E6%95%B0%E6%8D%AE%E9%A9%B1%E5%8A%A8%E7%9A%84%E6%97%B6%E4%BB%A3/</guid>
      <description>&lt;p&gt;结束语 | 互联网的下半场是数据驱动的时代&lt;/p&gt;&#xA;&lt;p&gt;你好，我是陈旸。&lt;/p&gt;&#xA;&lt;p&gt;看到结束语的时候，就意味着 SQL 专栏已经结束了。我希望这个专栏可以帮你打开数据的大门，从而通过数据发现更多的宝藏。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
