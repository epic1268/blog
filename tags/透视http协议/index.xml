<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>透视HTTP协议 on Docs</title>
    <link>https://politcloud.org/tags/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/</link>
    <description>Recent content in 透视HTTP协议 on Docs</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 10 Jan 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://politcloud.org/tags/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>01__时势与英雄：HTTP的前世今生</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/01__%E6%97%B6%E5%8A%BF%E4%B8%8E%E8%8B%B1%E9%9B%84http%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/01__%E6%97%B6%E5%8A%BF%E4%B8%8E%E8%8B%B1%E9%9B%84http%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F/</guid>
      <description>&lt;p&gt;HTTP 协议在我们的生活中随处可见，打开手机或者电脑，只要你上网，不论是用 iPhone、Android、Windows 还是 Mac，不论是用浏览器还是 App，不论是看新闻、短视频还是听音乐、玩游戏，后面总会有 HTTP 在默默为你服务。&lt;/p&gt;</description>
    </item>
    <item>
      <title>02__HTTP是什么？HTTP又不是什么？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/02__http%E6%98%AF%E4%BB%80%E4%B9%88http%E5%8F%88%E4%B8%8D%E6%98%AF%E4%BB%80%E4%B9%88/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/02__http%E6%98%AF%E4%BB%80%E4%B9%88http%E5%8F%88%E4%B8%8D%E6%98%AF%E4%BB%80%E4%B9%88/</guid>
      <description>&lt;p&gt;首先我来问出这个问题：“你觉得 HTTP 是什么呢？”&lt;/p&gt;&#xA;&lt;p&gt;你可能会不假思索、脱口而出：“HTTP 就是超文本传输协议，也就是&lt;strong&gt;H&lt;/strong&gt;yper&lt;strong&gt;T&lt;/strong&gt;ext &lt;strong&gt;T&lt;/strong&gt;ransfer &lt;strong&gt;P&lt;/strong&gt;rotocol。”&lt;/p&gt;</description>
    </item>
    <item>
      <title>03__HTTP世界全览（上）：与HTTP相关的各种概念</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/03__http%E4%B8%96%E7%95%8C%E5%85%A8%E8%A7%88%E4%B8%8A%E4%B8%8Ehttp%E7%9B%B8%E5%85%B3%E7%9A%84%E5%90%84%E7%A7%8D%E6%A6%82%E5%BF%B5/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/03__http%E4%B8%96%E7%95%8C%E5%85%A8%E8%A7%88%E4%B8%8A%E4%B8%8Ehttp%E7%9B%B8%E5%85%B3%E7%9A%84%E5%90%84%E7%A7%8D%E6%A6%82%E5%BF%B5/</guid>
      <description>&lt;p&gt;在上一讲的末尾，我画了一张图，里面是与 HTTP 关联的各种技术和知识点，也可以说是这个专栏的总索引，不知道你有没有认真看过呢？&lt;/p&gt;&#xA;&lt;p&gt;那张图左边的部分是与 HTTP 有关系的各种协议，比较偏向于理论；而右边的部分是与 HTTP 有关系的各种应用技术，偏向于实际应用。&lt;/p&gt;</description>
    </item>
    <item>
      <title>04__HTTP世界全览（下）：与HTTP相关的各种协议</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/04__http%E4%B8%96%E7%95%8C%E5%85%A8%E8%A7%88%E4%B8%8B%E4%B8%8Ehttp%E7%9B%B8%E5%85%B3%E7%9A%84%E5%90%84%E7%A7%8D%E5%8D%8F%E8%AE%AE/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/04__http%E4%B8%96%E7%95%8C%E5%85%A8%E8%A7%88%E4%B8%8B%E4%B8%8Ehttp%E7%9B%B8%E5%85%B3%E7%9A%84%E5%90%84%E7%A7%8D%E5%8D%8F%E8%AE%AE/</guid>
      <description>&lt;p&gt;在上一讲中，我介绍了与 HTTP 相关的浏览器、服务器、CDN、网络爬虫等应用技术。&lt;/p&gt;&#xA;&lt;p&gt;今天要讲的则是比较偏向于理论的各种 HTTP 相关协议，重点是 TCP/IP、DNS、URI、HTTPS 等，希望能够帮你理清楚它们与 HTTP 的关系。&lt;/p&gt;</description>
    </item>
    <item>
      <title>05__常说的“四层”和“七层”到底是什么？“五层”“六层”哪去了？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/05__%E5%B8%B8%E8%AF%B4%E7%9A%84%E5%9B%9B%E5%B1%82%E5%92%8C%E4%B8%83%E5%B1%82%E5%88%B0%E5%BA%95%E6%98%AF%E4%BB%80%E4%B9%88%E4%BA%94%E5%B1%82%E5%85%AD%E5%B1%82%E5%93%AA%E5%8E%BB%E4%BA%86/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/05__%E5%B8%B8%E8%AF%B4%E7%9A%84%E5%9B%9B%E5%B1%82%E5%92%8C%E4%B8%83%E5%B1%82%E5%88%B0%E5%BA%95%E6%98%AF%E4%BB%80%E4%B9%88%E4%BA%94%E5%B1%82%E5%85%AD%E5%B1%82%E5%93%AA%E5%8E%BB%E4%BA%86/</guid>
      <description>&lt;p&gt;在上一讲中，我简单提到了 TCP/IP 协议，它是 HTTP 协议的下层协议，负责具体的数据传输工作。并且还特别说了，TCP/IP 协议是一个“&lt;strong&gt;有层次的协议栈&lt;/strong&gt;”。&lt;/p&gt;&#xA;&lt;p&gt;在工作中你一定经常听别人谈起什么“四层负载均衡”“七层负载均衡”，什么“二层转发”“三层路由”，那么你真正理解这些层次的含义吗？&lt;/p&gt;</description>
    </item>
    <item>
      <title>06__域名里有哪些门道？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/06__%E5%9F%9F%E5%90%8D%E9%87%8C%E6%9C%89%E5%93%AA%E4%BA%9B%E9%97%A8%E9%81%93/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/06__%E5%9F%9F%E5%90%8D%E9%87%8C%E6%9C%89%E5%93%AA%E4%BA%9B%E9%97%A8%E9%81%93/</guid>
      <description>&lt;p&gt;在上一讲里，我们学习了 HTTP 协议使用的 TCP/IP 协议栈，知道了 HTTP 协议是运行在 TCP/IP 上的。&lt;/p&gt;&#xA;&lt;p&gt;IP 协议的职责是“网际互连”，它在 MAC 层之上，使用 IP 地址把 MAC 编号转换成了四位数字，这就对物理网卡的 MAC 地址做了一层抽象，发展出了许多的“新玩法”。&lt;/p&gt;</description>
    </item>
    <item>
      <title>07__自己动手，搭建HTTP实验环境</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/07__%E8%87%AA%E5%B7%B1%E5%8A%A8%E6%89%8B%E6%90%AD%E5%BB%BAhttp%E5%AE%9E%E9%AA%8C%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/07__%E8%87%AA%E5%B7%B1%E5%8A%A8%E6%89%8B%E6%90%AD%E5%BB%BAhttp%E5%AE%9E%E9%AA%8C%E7%8E%AF%E5%A2%83/</guid>
      <description>&lt;p&gt;这一讲是“破冰篇”的最后一讲，我会先简单地回顾一下之前的内容，然后在 Windows 系统上实际操作，用几个应用软件搭建出一个“最小化”的 HTTP 实验环境，方便后续的“基础篇”“进阶篇”“安全篇”的学习。&lt;/p&gt;</description>
    </item>
    <item>
      <title>08__键入网址再按下回车，后面究竟发生了什么？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/08__%E9%94%AE%E5%85%A5%E7%BD%91%E5%9D%80%E5%86%8D%E6%8C%89%E4%B8%8B%E5%9B%9E%E8%BD%A6%E5%90%8E%E9%9D%A2%E7%A9%B6%E7%AB%9F%E5%8F%91%E7%94%9F%E4%BA%86%E4%BB%80%E4%B9%88/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/08__%E9%94%AE%E5%85%A5%E7%BD%91%E5%9D%80%E5%86%8D%E6%8C%89%E4%B8%8B%E5%9B%9E%E8%BD%A6%E5%90%8E%E9%9D%A2%E7%A9%B6%E7%AB%9F%E5%8F%91%E7%94%9F%E4%BA%86%E4%BB%80%E4%B9%88/</guid>
      <description>&lt;p&gt;经过上一讲的学习，你是否已经在自己的电脑上搭建好了“最小化”的 HTTP 实验环境呢？&lt;/p&gt;&#xA;&lt;p&gt;我相信你的答案一定是“Yes”，那么，让我们立刻开始“螺蛳壳里做道场”，在这个实验环境里看一下 HTTP 协议工作的全过程。&lt;/p&gt;</description>
    </item>
    <item>
      <title>09__HTTP报文是什么样子的？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/09__http%E6%8A%A5%E6%96%87%E6%98%AF%E4%BB%80%E4%B9%88%E6%A0%B7%E5%AD%90%E7%9A%84/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/09__http%E6%8A%A5%E6%96%87%E6%98%AF%E4%BB%80%E4%B9%88%E6%A0%B7%E5%AD%90%E7%9A%84/</guid>
      <description>&lt;p&gt;在上一讲里，我们在本机的最小化环境了做了两个 HTTP 协议的实验，使用 Wireshark 抓包，弄清楚了 HTTP 协议基本工作流程，也就是“请求 - 应答”“一发一收”的模式。&lt;/p&gt;&#xA;&lt;p&gt;可以看到，HTTP 的工作模式是非常简单的，由于 TCP/IP 协议负责底层的具体传输工作，HTTP 协议基本上不用在这方面操心太多。单从这一点上来看，所谓的“超文本传输协议”其实并不怎么管“传输”的事情，有点“名不副实”。&lt;/p&gt;</description>
    </item>
    <item>
      <title>10__应该如何理解请求方法？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/10__%E5%BA%94%E8%AF%A5%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3%E8%AF%B7%E6%B1%82%E6%96%B9%E6%B3%95/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/10__%E5%BA%94%E8%AF%A5%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3%E8%AF%B7%E6%B1%82%E6%96%B9%E6%B3%95/</guid>
      <description>&lt;p&gt;上一讲我介绍了 HTTP 的报文结构，它是由 header+body 构成，请求头里有请求方法和请求目标，响应头里有状态码和原因短语，今天要说的就是请求头里的请求方法。&lt;/p&gt;&#xA;&lt;h2 id=&#34;标准请求方法&#34;&gt;标准请求方法&lt;/h2&gt;&#xA;&lt;p&gt;HTTP 协议里为什么要有“请求方法”这个东西呢？&lt;/p&gt;</description>
    </item>
    <item>
      <title>11__你能写出正确的网址吗？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/11__%E4%BD%A0%E8%83%BD%E5%86%99%E5%87%BA%E6%AD%A3%E7%A1%AE%E7%9A%84%E7%BD%91%E5%9D%80%E5%90%97/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/11__%E4%BD%A0%E8%83%BD%E5%86%99%E5%87%BA%E6%AD%A3%E7%A1%AE%E7%9A%84%E7%BD%91%E5%9D%80%E5%90%97/</guid>
      <description>&lt;p&gt;上一讲里我们一起学习了 HTTP 协议里的请求方法，其中最常用的一个是 GET，它用来从服务器上某个资源获取数据，另一个是 POST，向某个资源提交数据。&lt;/p&gt;&#xA;&lt;p&gt;那么，应该用什么来标记服务器上的资源呢？怎么区分“这个”资源和“那个”资源呢？&lt;/p&gt;</description>
    </item>
    <item>
      <title>12__响应状态码该怎么用？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/12__%E5%93%8D%E5%BA%94%E7%8A%B6%E6%80%81%E7%A0%81%E8%AF%A5%E6%80%8E%E4%B9%88%E7%94%A8/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/12__%E5%93%8D%E5%BA%94%E7%8A%B6%E6%80%81%E7%A0%81%E8%AF%A5%E6%80%8E%E4%B9%88%E7%94%A8/</guid>
      <description>&lt;p&gt;前两讲中，我们学习了 HTTP 报文里请求行的组成部分，包括请求方法和 URI。有了请求行，加上后面的头字段就形成了请求头，可以通过 TCP/IP 协议发送给服务器。&lt;/p&gt;&#xA;&lt;p&gt;服务器收到请求报文，解析后需要进行处理，具体的业务逻辑多种多样，但最后必定是拼出一个响应报文发回客户端。&lt;/p&gt;</description>
    </item>
    <item>
      <title>13__HTTP有哪些特点？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/13__http%E6%9C%89%E5%93%AA%E4%BA%9B%E7%89%B9%E7%82%B9/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/13__http%E6%9C%89%E5%93%AA%E4%BA%9B%E7%89%B9%E7%82%B9/</guid>
      <description>&lt;p&gt;通过“基础篇”前几讲的学习，你应该已经知道了 HTTP 协议的基本知识，了解它的报文结构，请求头、响应头以及内部的请求方法、URI 和状态码等细节。&lt;/p&gt;&#xA;&lt;p&gt;你会不会有种疑惑：“HTTP 协议好像也挺简单的啊，凭什么它就能统治互联网这么多年呢？”&lt;/p&gt;</description>
    </item>
    <item>
      <title>14__HTTP有哪些优点？又有哪些缺点？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/14__http%E6%9C%89%E5%93%AA%E4%BA%9B%E4%BC%98%E7%82%B9%E5%8F%88%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BC%BA%E7%82%B9/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/14__http%E6%9C%89%E5%93%AA%E4%BA%9B%E4%BC%98%E7%82%B9%E5%8F%88%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BC%BA%E7%82%B9/</guid>
      <description>&lt;p&gt;上一讲我介绍了 HTTP 的五个基本特点，这一讲要说的则是它的优点和缺点。其实这些也应该算是 HTTP 的特点，但这一讲会更侧重于评价它们的优劣和好坏。&lt;/p&gt;&#xA;&lt;p&gt;上一讲我也留了两道课下作业，不知道你有没有认真思考过，今天可以一起来看看你的答案与我的观点想法是否相符，共同探讨。&lt;/p&gt;</description>
    </item>
    <item>
      <title>15__海纳百川：HTTP的实体数据</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/15__%E6%B5%B7%E7%BA%B3%E7%99%BE%E5%B7%9Dhttp%E7%9A%84%E5%AE%9E%E4%BD%93%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/15__%E6%B5%B7%E7%BA%B3%E7%99%BE%E5%B7%9Dhttp%E7%9A%84%E5%AE%9E%E4%BD%93%E6%95%B0%E6%8D%AE/</guid>
      <description>&lt;p&gt;你好，我是 Chrono。&lt;/p&gt;&#xA;&lt;p&gt;今天我要与你分享的话题是“海纳百川：HTTP 的实体数据”。&lt;/p&gt;&#xA;&lt;p&gt;这一讲是“进阶篇”的第一讲，从今天开始，我会用连续的 8 讲的篇幅来详细解析 HTTP 协议里的各种头字段，包括定义、功能、使用方式、注意事项等等。学完了这些课程，你就可以完全掌握 HTTP 协议。&lt;/p&gt;</description>
    </item>
    <item>
      <title>16__把大象装进冰箱：HTTP传输大文件的方法</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/16__%E6%8A%8A%E5%A4%A7%E8%B1%A1%E8%A3%85%E8%BF%9B%E5%86%B0%E7%AE%B1http%E4%BC%A0%E8%BE%93%E5%A4%A7%E6%96%87%E4%BB%B6%E7%9A%84%E6%96%B9%E6%B3%95/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/16__%E6%8A%8A%E5%A4%A7%E8%B1%A1%E8%A3%85%E8%BF%9B%E5%86%B0%E7%AE%B1http%E4%BC%A0%E8%BE%93%E5%A4%A7%E6%96%87%E4%BB%B6%E7%9A%84%E6%96%B9%E6%B3%95/</guid>
      <description>&lt;p&gt;上次我们谈到了 HTTP 报文里的 body，知道了 HTTP 可以传输很多种类的数据，不仅是文本，也能传输图片、音频和视频。&lt;/p&gt;&#xA;&lt;p&gt;早期互联网上传输的基本上都是只有几 K 大小的文本和小图片，现在的情况则大有不同。网页里包含的信息实在是太多了，随随便便一个主页 HTML 就有可能上百 K，高质量的图片都以 M 论，更不要说那些电影、电视剧了，几 G、几十 G 都有可能。&lt;/p&gt;</description>
    </item>
    <item>
      <title>17__排队也要讲效率：HTTP的连接管理</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/17__%E6%8E%92%E9%98%9F%E4%B9%9F%E8%A6%81%E8%AE%B2%E6%95%88%E7%8E%87http%E7%9A%84%E8%BF%9E%E6%8E%A5%E7%AE%A1%E7%90%86/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/17__%E6%8E%92%E9%98%9F%E4%B9%9F%E8%A6%81%E8%AE%B2%E6%95%88%E7%8E%87http%E7%9A%84%E8%BF%9E%E6%8E%A5%E7%AE%A1%E7%90%86/</guid>
      <description>&lt;p&gt;在&lt;a href=&#34;./103746.md&#34;&gt;第 14 讲&lt;/a&gt;里，我曾经提到过 HTTP 的性能问题，用了六个字来概括：“&lt;strong&gt;不算差，不够好&lt;/strong&gt;”。同时，我也谈到了“队头阻塞”，但由于时间的限制没有展开来细讲，这次就来好好地看看 HTTP 在连接这方面的表现。&lt;/p&gt;</description>
    </item>
    <item>
      <title>18__四通八达：HTTP的重定向和跳转</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/18__%E5%9B%9B%E9%80%9A%E5%85%AB%E8%BE%BEhttp%E7%9A%84%E9%87%8D%E5%AE%9A%E5%90%91%E5%92%8C%E8%B7%B3%E8%BD%AC/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/18__%E5%9B%9B%E9%80%9A%E5%85%AB%E8%BE%BEhttp%E7%9A%84%E9%87%8D%E5%AE%9A%E5%90%91%E5%92%8C%E8%B7%B3%E8%BD%AC/</guid>
      <description>&lt;p&gt;在专栏&lt;a href=&#34;./97837.md&#34;&gt;第 1 讲&lt;/a&gt;时我曾经说过，为了实现在互联网上构建超链接文档系统的设想，蒂姆·伯纳斯 - 李发明了万维网，使用 HTTP 协议传输“超文本”，让全世界的人都能够自由地共享信息。&lt;/p&gt;</description>
    </item>
    <item>
      <title>19__让我知道你是谁：HTTP的Cookie机制</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/19__%E8%AE%A9%E6%88%91%E7%9F%A5%E9%81%93%E4%BD%A0%E6%98%AF%E8%B0%81http%E7%9A%84cookie%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/19__%E8%AE%A9%E6%88%91%E7%9F%A5%E9%81%93%E4%BD%A0%E6%98%AF%E8%B0%81http%E7%9A%84cookie%E6%9C%BA%E5%88%B6/</guid>
      <description>&lt;p&gt;在之前的第 13、14 讲中，我曾经说过，HTTP 是“无状态”的，这既是优点也是缺点。优点是服务器没有状态差异，可以很容易地组成集群，而缺点就是无法支持需要记录状态的事务操作。&lt;/p&gt;</description>
    </item>
    <item>
      <title>20__生鲜速递：HTTP的缓存控制</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/20__%E7%94%9F%E9%B2%9C%E9%80%9F%E9%80%92http%E7%9A%84%E7%BC%93%E5%AD%98%E6%8E%A7%E5%88%B6/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/20__%E7%94%9F%E9%B2%9C%E9%80%9F%E9%80%92http%E7%9A%84%E7%BC%93%E5%AD%98%E6%8E%A7%E5%88%B6/</guid>
      <description>&lt;p&gt;缓存（Cache）是计算机领域里的一个重要概念，是优化系统性能的利器。&lt;/p&gt;&#xA;&lt;p&gt;由于链路漫长，网络时延不可控，浏览器使用 HTTP 获取资源的成本较高。所以，非常有必要把“来之不易”的数据缓存起来，下次再请求的时候尽可能地复用。这样，就可以避免多次请求 - 应答的通信成本，节约网络带宽，也可以加快响应速度。&lt;/p&gt;</description>
    </item>
    <item>
      <title>21__良心中间商：HTTP的代理服务</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/21__%E8%89%AF%E5%BF%83%E4%B8%AD%E9%97%B4%E5%95%86http%E7%9A%84%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/21__%E8%89%AF%E5%BF%83%E4%B8%AD%E9%97%B4%E5%95%86http%E7%9A%84%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1/</guid>
      <description>&lt;p&gt;在前面讲 HTTP 协议的时候，我们严格遵循了 HTTP 的“请求 - 应答”模型，协议中只有两个互相通信的角色，分别是“请求方”浏览器（客户端）和“应答方”服务器。&lt;/p&gt;</description>
    </item>
    <item>
      <title>22__冷链周转：HTTP的缓存代理</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/22__%E5%86%B7%E9%93%BE%E5%91%A8%E8%BD%AChttp%E7%9A%84%E7%BC%93%E5%AD%98%E4%BB%A3%E7%90%86/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/22__%E5%86%B7%E9%93%BE%E5%91%A8%E8%BD%AChttp%E7%9A%84%E7%BC%93%E5%AD%98%E4%BB%A3%E7%90%86/</guid>
      <description>&lt;p&gt;在&lt;a href=&#34;./106804.md&#34;&gt;第 20 讲&lt;/a&gt;中，我介绍了 HTTP 的缓存控制，&lt;a href=&#34;./107577.md&#34;&gt;第 21 讲&lt;/a&gt;我介绍了 HTTP 的代理服务。那么，把这两者结合起来就是这节课所要说的“&lt;strong&gt;缓存代理&lt;/strong&gt;”，也就是支持缓存控制的代理服务。&lt;/p&gt;</description>
    </item>
    <item>
      <title>23__HTTPS是什么？SSL_TLS又是什么？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/23__https%E6%98%AF%E4%BB%80%E4%B9%88ssl_tls%E5%8F%88%E6%98%AF%E4%BB%80%E4%B9%88/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/23__https%E6%98%AF%E4%BB%80%E4%B9%88ssl_tls%E5%8F%88%E6%98%AF%E4%BB%80%E4%B9%88/</guid>
      <description>&lt;p&gt;从今天开始，我们开始进入全新的“安全篇”，聊聊与安全相关的 HTTPS、SSL、TLS。&lt;/p&gt;&#xA;&lt;p&gt;在&lt;a href=&#34;./103746.md&#34;&gt;第 14 讲&lt;/a&gt;中，我曾经谈到过 HTTP 的一些缺点，其中的“无状态”在加入 Cookie 后得到了解决，而另两个缺点——“明文”和“不安全”仅凭 HTTP 自身是无力解决的，需要引入新的 HTTPS 协议。&lt;/p&gt;</description>
    </item>
    <item>
      <title>24__固若金汤的根本（上）：对称加密与非对称加密</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/24__%E5%9B%BA%E8%8B%A5%E9%87%91%E6%B1%A4%E7%9A%84%E6%A0%B9%E6%9C%AC%E4%B8%8A%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86%E4%B8%8E%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/24__%E5%9B%BA%E8%8B%A5%E9%87%91%E6%B1%A4%E7%9A%84%E6%A0%B9%E6%9C%AC%E4%B8%8A%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86%E4%B8%8E%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86/</guid>
      <description>&lt;p&gt;在上一讲中，我们初步学习了 HTTPS，知道 HTTPS 的安全性是由 TLS 来保证的。&lt;/p&gt;&#xA;&lt;p&gt;你一定很好奇，它是怎么为 HTTP 增加了机密性、完整性，身份认证和不可否认等特性的呢？&lt;/p&gt;</description>
    </item>
    <item>
      <title>25__固若金汤的根本（下）：数字签名与证书</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/25__%E5%9B%BA%E8%8B%A5%E9%87%91%E6%B1%A4%E7%9A%84%E6%A0%B9%E6%9C%AC%E4%B8%8B%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D%E4%B8%8E%E8%AF%81%E4%B9%A6/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/25__%E5%9B%BA%E8%8B%A5%E9%87%91%E6%B1%A4%E7%9A%84%E6%A0%B9%E6%9C%AC%E4%B8%8B%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D%E4%B8%8E%E8%AF%81%E4%B9%A6/</guid>
      <description>&lt;p&gt;上一讲中我们学习了对称加密和非对称加密，以及两者结合起来的混合加密，实现了机密性。&lt;/p&gt;&#xA;&lt;p&gt;但仅有机密性，离安全还差的很远。&lt;/p&gt;&#xA;&lt;p&gt;黑客虽然拿不到会话密钥，无法破解密文，但可以通过窃听收集到足够多的密文，再尝试着修改、重组后发给网站。因为没有完整性保证，服务器只能“照单全收”，然后他就可以通过服务器的响应获取进一步的线索，最终就会破解出明文。&lt;/p&gt;</description>
    </item>
    <item>
      <title>26__信任始于握手：TLS1.2连接过程解析</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/26__%E4%BF%A1%E4%BB%BB%E5%A7%8B%E4%BA%8E%E6%8F%A1%E6%89%8Btls1.2%E8%BF%9E%E6%8E%A5%E8%BF%87%E7%A8%8B%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/26__%E4%BF%A1%E4%BB%BB%E5%A7%8B%E4%BA%8E%E6%8F%A1%E6%89%8Btls1.2%E8%BF%9E%E6%8E%A5%E8%BF%87%E7%A8%8B%E8%A7%A3%E6%9E%90/</guid>
      <description>&lt;p&gt;经过前几讲的介绍，你应该已经熟悉了对称加密与非对称加密、数字签名与证书等密码学知识。&lt;/p&gt;&#xA;&lt;p&gt;有了这些知识“打底”，现在我们就可以正式开始研究 HTTPS 和 TLS 协议了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>27__更好更快的握手：TLS1.3特性解析</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/27__%E6%9B%B4%E5%A5%BD%E6%9B%B4%E5%BF%AB%E7%9A%84%E6%8F%A1%E6%89%8Btls1.3%E7%89%B9%E6%80%A7%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/27__%E6%9B%B4%E5%A5%BD%E6%9B%B4%E5%BF%AB%E7%9A%84%E6%8F%A1%E6%89%8Btls1.3%E7%89%B9%E6%80%A7%E8%A7%A3%E6%9E%90/</guid>
      <description>&lt;p&gt;上一讲中我讲了 TLS1.2 的握手过程，你是不是已经完全掌握了呢？&lt;/p&gt;&#xA;&lt;p&gt;不过 TLS1.2 已经是 10 年前（2008 年）的“老”协议了，虽然历经考验，但毕竟“岁月不饶人”，在安全、性能等方面已经跟不上如今的互联网了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>28__连接太慢该怎么办：HTTPS的优化</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/28__%E8%BF%9E%E6%8E%A5%E5%A4%AA%E6%85%A2%E8%AF%A5%E6%80%8E%E4%B9%88%E5%8A%9Ehttps%E7%9A%84%E4%BC%98%E5%8C%96/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/28__%E8%BF%9E%E6%8E%A5%E5%A4%AA%E6%85%A2%E8%AF%A5%E6%80%8E%E4%B9%88%E5%8A%9Ehttps%E7%9A%84%E4%BC%98%E5%8C%96/</guid>
      <description>&lt;p&gt;你可能或多或少听别人说过，“HTTPS 的连接很慢”。那么“慢”的原因是什么呢？&lt;/p&gt;&#xA;&lt;p&gt;通过前两讲的学习，你可以看到，HTTPS 连接大致上可以划分为两个部分，第一个是建立连接时的&lt;strong&gt;非对称加密握手&lt;/strong&gt;，第二个是握手后的&lt;strong&gt;对称加密报文传输&lt;/strong&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>29__我应该迁移到HTTPS吗？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/29__%E6%88%91%E5%BA%94%E8%AF%A5%E8%BF%81%E7%A7%BB%E5%88%B0https%E5%90%97/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/29__%E6%88%91%E5%BA%94%E8%AF%A5%E8%BF%81%E7%A7%BB%E5%88%B0https%E5%90%97/</guid>
      <description>&lt;p&gt;今天是“安全篇”的最后一讲，我们已经学完了 HTTPS、TLS 相关的大部分知识。不过，或许你心里还会有一些困惑：&lt;/p&gt;&#xA;&lt;p&gt;“HTTPS 这么复杂，我是否应该迁移到 HTTPS 呢？它能带来哪些好处呢？具体又应该怎么实施迁移呢？”&lt;/p&gt;</description>
    </item>
    <item>
      <title>30__时代之风（上）：HTTP_2特性概览</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/30__%E6%97%B6%E4%BB%A3%E4%B9%8B%E9%A3%8E%E4%B8%8Ahttp_2%E7%89%B9%E6%80%A7%E6%A6%82%E8%A7%88/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/30__%E6%97%B6%E4%BB%A3%E4%B9%8B%E9%A3%8E%E4%B8%8Ahttp_2%E7%89%B9%E6%80%A7%E6%A6%82%E8%A7%88/</guid>
      <description>&lt;p&gt;在&lt;a href=&#34;./103746.md&#34;&gt;第 14 讲&lt;/a&gt;里，我们看到 HTTP 有两个主要的缺点：安全不足和性能不高。&lt;/p&gt;&#xA;&lt;p&gt;刚结束的“安全篇”里的 HTTPS，通过引入 SSL/TLS 在安全上达到了“极致”，但在性能提升方面却是乏善可陈，只优化了握手加密的环节，对于整体的数据传输没有提出更好的改进方案，还只能依赖于“长连接”这种“落后”的技术（参见&lt;a href=&#34;./104949.md&#34;&gt;第 17 讲&lt;/a&gt;）。&lt;/p&gt;</description>
    </item>
    <item>
      <title>31__时代之风（下）：HTTP_2内核剖析</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/31__%E6%97%B6%E4%BB%A3%E4%B9%8B%E9%A3%8E%E4%B8%8Bhttp_2%E5%86%85%E6%A0%B8%E5%89%96%E6%9E%90/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/31__%E6%97%B6%E4%BB%A3%E4%B9%8B%E9%A3%8E%E4%B8%8Bhttp_2%E5%86%85%E6%A0%B8%E5%89%96%E6%9E%90/</guid>
      <description>&lt;p&gt;今天我们继续上一讲的话题，深入 HTTP/2 协议的内部，看看它的实现细节。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/epic1268/images/master/%E9%80%8F%E8%A7%86HTTP%E5%8D%8F%E8%AE%AE/faa30d92f1fc2973ffff873fe488bdad.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;这次实验环境的 URI 是“/31-1”，我用 Wireshark 把请求响应的过程抓包存了下来，文件放在 GitHub 的“wireshark”目录。今天我们就对照着抓包来实地讲解 HTTP/2 的头部压缩、二进制帧等特性。&lt;/p&gt;</description>
    </item>
    <item>
      <title>32__未来之路：HTTP_3展望</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/32__%E6%9C%AA%E6%9D%A5%E4%B9%8B%E8%B7%AFhttp_3%E5%B1%95%E6%9C%9B/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/32__%E6%9C%AA%E6%9D%A5%E4%B9%8B%E8%B7%AFhttp_3%E5%B1%95%E6%9C%9B/</guid>
      <description>&lt;p&gt;在前面的两讲里，我们一起学习了 HTTP/2，你也应该看到了 HTTP/2 做出的许多努力，比如头部压缩、二进制分帧、虚拟的“流”与多路复用，性能方面比 HTTP/1 有了很大的提升，“基本上”解决了“队头阻塞”这个“老大难”问题。&lt;/p&gt;</description>
    </item>
    <item>
      <title>33__我应该迁移到HTTP_2吗？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/33__%E6%88%91%E5%BA%94%E8%AF%A5%E8%BF%81%E7%A7%BB%E5%88%B0http_2%E5%90%97/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/33__%E6%88%91%E5%BA%94%E8%AF%A5%E8%BF%81%E7%A7%BB%E5%88%B0http_2%E5%90%97/</guid>
      <description>&lt;p&gt;这一讲是“飞翔篇”的最后一讲，而 HTTP 的所有知识也差不多快学完了。&lt;/p&gt;&#xA;&lt;p&gt;前面你已经看到了新的 HTTP/2 和 HTTP/3 协议，了解了它们的特点和工作原理，如果再联系上前几天“安全篇”的 HTTPS，你可能又会发出疑问：&lt;/p&gt;</description>
    </item>
    <item>
      <title>34__Nginx：高性能的Web服务器</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/34__nginx%E9%AB%98%E6%80%A7%E8%83%BD%E7%9A%84web%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/34__nginx%E9%AB%98%E6%80%A7%E8%83%BD%E7%9A%84web%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      <description>&lt;p&gt;经过前面几大模块的学习，你已经完全掌握了 HTTP 的所有知识，那么接下来请收拾一下行囊，整理一下装备，跟我一起去探索 HTTP 之外的广阔天地。&lt;/p&gt;&#xA;&lt;p&gt;现在的互联网非常发达，用户越来越多，网速越来越快，HTTPS 的安全加密、HTTP/2 的多路复用等特性都对 Web 服务器提出了非常高的要求。一个好的 Web 服务器必须要具备稳定、快速、易扩展、易维护等特性，才能够让网站“立于不败之地”。&lt;/p&gt;</description>
    </item>
    <item>
      <title>35__OpenResty：更灵活的Web服务器</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/35__openresty%E6%9B%B4%E7%81%B5%E6%B4%BB%E7%9A%84web%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/35__openresty%E6%9B%B4%E7%81%B5%E6%B4%BB%E7%9A%84web%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      <description>&lt;p&gt;在上一讲里，我们看到了高性能的 Web 服务器 Nginx，它资源占用少，处理能力高，是搭建网站的首选。&lt;/p&gt;&#xA;&lt;p&gt;虽然 Nginx 成为了 Web 服务器领域无可争议的“王者”，但它也并不是没有缺点的，毕竟它已经 15 岁了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>36__WAF：保护我们的网络服务</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/36__waf%E4%BF%9D%E6%8A%A4%E6%88%91%E4%BB%AC%E7%9A%84%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/36__waf%E4%BF%9D%E6%8A%A4%E6%88%91%E4%BB%AC%E7%9A%84%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/</guid>
      <description>&lt;p&gt;在前些天的“安全篇”里，我谈到了 HTTPS，它使用了 SSL/TLS 协议，加密整个通信过程，能够防止恶意窃听和窜改，保护我们的数据安全。&lt;/p&gt;&#xA;&lt;p&gt;但 HTTPS 只是网络安全中很小的一部分，仅仅保证了“通信链路安全”，让第三方无法得知传输的内容。在通信链路的两端，也就是客户端和服务器，它是无法提供保护的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>37__CDN：加速我们的网络服务</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/37__cdn%E5%8A%A0%E9%80%9F%E6%88%91%E4%BB%AC%E7%9A%84%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/37__cdn%E5%8A%A0%E9%80%9F%E6%88%91%E4%BB%AC%E7%9A%84%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/</guid>
      <description>&lt;p&gt;在正式开讲前，我们先来看看到现在为止 HTTP 手头都有了哪些“武器”。&lt;/p&gt;&#xA;&lt;p&gt;协议方面，HTTPS 强化通信链路安全、HTTP/2 优化传输效率；应用方面，Nginx/OpenResty 提升网站服务能力，WAF 抵御网站入侵攻击，讲到这里，你是不是感觉还少了点什么？&lt;/p&gt;</description>
    </item>
    <item>
      <title>38__WebSocket：沙盒里的TCP</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/38__websocket%E6%B2%99%E7%9B%92%E9%87%8C%E7%9A%84tcp/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/38__websocket%E6%B2%99%E7%9B%92%E9%87%8C%E7%9A%84tcp/</guid>
      <description>&lt;p&gt;在之前讲 TCP/IP 协议栈的时候，我说过有“TCP Socket”，它实际上是一种功能接口，通过这些接口就可以使用 TCP/IP 协议栈在传输层收发数据。&lt;/p&gt;&#xA;&lt;p&gt;那么，你知道还有一种东西叫“WebSocket”吗？&lt;/p&gt;</description>
    </item>
    <item>
      <title>39__HTTP性能优化面面观（上）</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/39__http%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E9%9D%A2%E9%9D%A2%E8%A7%82%E4%B8%8A/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/39__http%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E9%9D%A2%E9%9D%A2%E8%A7%82%E4%B8%8A/</guid>
      <description>&lt;p&gt;“透视 HTTP 协议”这个专栏已经陪伴了你近三个月的时间，在最后的这两讲里，我将把散落在前面各个章节的零散知识点整合起来，做一个总结，和你一起聊聊 HTTP 的性能优化。&lt;/p&gt;</description>
    </item>
    <item>
      <title>40__HTTP性能优化面面观（下）</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/40__http%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E9%9D%A2%E9%9D%A2%E8%A7%82%E4%B8%8B/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/40__http%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E9%9D%A2%E9%9D%A2%E8%A7%82%E4%B8%8B/</guid>
      <description>&lt;p&gt;今天我们继续上次的话题，看看 HTTP 性能优化有哪些行之有效的手段。&lt;/p&gt;&#xA;&lt;p&gt;上一讲里我说到了，在整个 HTTP 系统里有三个可优化的环节，分别是&lt;strong&gt;服务器&lt;/strong&gt;、&lt;strong&gt;客户端&lt;/strong&gt;和&lt;strong&gt;传输链路&lt;/strong&gt;（“第一公里”和“中间一公里”）。但因为我们是无法完全控制客户端的，所以实际上的优化工作通常是在服务器端。这里又可以细分为后端和前端，后端是指网站的后台服务，而前端就是 HTML、CSS、图片等展现在客户端的代码和数据。&lt;/p&gt;</description>
    </item>
    <item>
      <title>52-透视HTTP协议</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/52-%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/52-%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/</guid>
      <description></description>
    </item>
    <item>
      <title>结束语__做兴趣使然的Hero</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/%E7%BB%93%E6%9D%9F%E8%AF%AD__%E5%81%9A%E5%85%B4%E8%B6%A3%E4%BD%BF%E7%84%B6%E7%9A%84hero/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/%E7%BB%93%E6%9D%9F%E8%AF%AD__%E5%81%9A%E5%85%B4%E8%B6%A3%E4%BD%BF%E7%84%B6%E7%9A%84hero/</guid>
      <description>&lt;p&gt;从今年年初与极客时间编辑的初次接触开始，到这个月底专栏的正式结束，经过了差不多 7 个月的时间。这段历程有痛苦也有欢乐，有迷惘也有清朗，有困惑也有顿悟，有挫折也有奋进，各种感受五味杂陈，一言难尽。&lt;/p&gt;</description>
    </item>
    <item>
      <title>开篇词｜To_Be_a_HTTP_Hero</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/%E5%BC%80%E7%AF%87%E8%AF%8Dto_be_a_http_hero/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E9%80%8F%E8%A7%86http%E5%8D%8F%E8%AE%AE/%E5%BC%80%E7%AF%87%E8%AF%8Dto_be_a_http_hero/</guid>
      <description>&lt;p&gt;你好，我是罗剑锋（Chrono（加微信：642945106 发送“赠送”领取赠送精品课程 发数字“2”获取众筹列表。）），一名埋头于前线，辛勤“耕耘”了十余载的资深“码农”。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
