<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>IOS开发高手课 on Docs</title>
    <link>https://politcloud.org/tags/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/</link>
    <description>Recent content in IOS开发高手课 on Docs</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 10 Jan 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://politcloud.org/tags/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>01__建立你自己的iOS开发知识体系</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/01__%E5%BB%BA%E7%AB%8B%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84ios%E5%BC%80%E5%8F%91%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/01__%E5%BB%BA%E7%AB%8B%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84ios%E5%BC%80%E5%8F%91%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/</guid>
      <description>&lt;p&gt;你好，我是戴铭。&lt;/p&gt;&#xA;&lt;p&gt;这是我们专栏的第一篇文章。所谓知己知彼，今天我们先来聊聊 iOS 开发需要掌握哪些知识，以及如何把这些知识融会贯通，进而形成一套成熟的知识体系。&lt;/p&gt;</description>
    </item>
    <item>
      <title>02__App_启动速度怎么做优化与监控？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/02__app_%E5%90%AF%E5%8A%A8%E9%80%9F%E5%BA%A6%E6%80%8E%E4%B9%88%E5%81%9A%E4%BC%98%E5%8C%96%E4%B8%8E%E7%9B%91%E6%8E%A7/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/02__app_%E5%90%AF%E5%8A%A8%E9%80%9F%E5%BA%A6%E6%80%8E%E4%B9%88%E5%81%9A%E4%BC%98%E5%8C%96%E4%B8%8E%E7%9B%91%E6%8E%A7/</guid>
      <description>&lt;p&gt;你好，我是戴铭。&lt;/p&gt;&#xA;&lt;p&gt;我已经在专栏的第一篇文章中，和你梳理了一份 iOS 开发的知识体系框架图。今天，我们就正式从基础出发，开始自己的 iOS 开发知识体系构建之路吧。接下来，我就先和你聊聊与 App 启动速度密切相关的那些事儿。希望你听我说完启动速度的事儿之后，在专栏里的学习状态也能够快速地启动起来。&lt;/p&gt;</description>
    </item>
    <item>
      <title>03__Auto_Layout_是怎么进行自动布局的，性能如何？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/03__auto_layout_%E6%98%AF%E6%80%8E%E4%B9%88%E8%BF%9B%E8%A1%8C%E8%87%AA%E5%8A%A8%E5%B8%83%E5%B1%80%E7%9A%84%E6%80%A7%E8%83%BD%E5%A6%82%E4%BD%95/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/03__auto_layout_%E6%98%AF%E6%80%8E%E4%B9%88%E8%BF%9B%E8%A1%8C%E8%87%AA%E5%8A%A8%E5%B8%83%E5%B1%80%E7%9A%84%E6%80%A7%E8%83%BD%E5%A6%82%E4%BD%95/</guid>
      <description>&lt;p&gt;你好，我是戴铭。今天我来跟你聊下 Auto Layout。&lt;/p&gt;&#xA;&lt;p&gt;Auto Layout，是苹果公司提供的一个基于约束布局，动态计算视图大小和位置的库，并且已经集成到了 Xcode 开发环境里。&lt;/p&gt;</description>
    </item>
    <item>
      <title>04__项目大了人员多了，架构怎么设计更合理？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/04__%E9%A1%B9%E7%9B%AE%E5%A4%A7%E4%BA%86%E4%BA%BA%E5%91%98%E5%A4%9A%E4%BA%86%E6%9E%B6%E6%9E%84%E6%80%8E%E4%B9%88%E8%AE%BE%E8%AE%A1%E6%9B%B4%E5%90%88%E7%90%86/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/04__%E9%A1%B9%E7%9B%AE%E5%A4%A7%E4%BA%86%E4%BA%BA%E5%91%98%E5%A4%9A%E4%BA%86%E6%9E%B6%E6%9E%84%E6%80%8E%E4%B9%88%E8%AE%BE%E8%AE%A1%E6%9B%B4%E5%90%88%E7%90%86/</guid>
      <description>&lt;p&gt;你好，我是戴铭。今天，我要跟你说说怎么设计一个能够支持大型 iOS 工程的架构。&lt;/p&gt;&#xA;&lt;p&gt;记得以前所在的团队，规模大了以后，客户端团队也被按照不同业务拆分到了不同的地方。当时，所有的代码都集中在一个仓库，团队里面一百多号人，只要有一个人提交错了，那么所有要更新代码的人都得等到修复后提交。这样一天下来，整个团队的沟通和互相等待都浪费了大量时间。同时，开发完成要进行测试时，由于代码相互耦合、归属不清，也影响到了问题排查的效率，并增加了沟通时间。&lt;/p&gt;</description>
    </item>
    <item>
      <title>05__链接器：符号是怎么绑定到地址上的？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/05__%E9%93%BE%E6%8E%A5%E5%99%A8%E7%AC%A6%E5%8F%B7%E6%98%AF%E6%80%8E%E4%B9%88%E7%BB%91%E5%AE%9A%E5%88%B0%E5%9C%B0%E5%9D%80%E4%B8%8A%E7%9A%84/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/05__%E9%93%BE%E6%8E%A5%E5%99%A8%E7%AC%A6%E5%8F%B7%E6%98%AF%E6%80%8E%E4%B9%88%E7%BB%91%E5%AE%9A%E5%88%B0%E5%9C%B0%E5%9D%80%E4%B8%8A%E7%9A%84/</guid>
      <description>&lt;p&gt;你好，我是戴铭。&lt;/p&gt;&#xA;&lt;p&gt;你是不是经常会好奇自己参与的这么些项目，为什么有的编译起来很快，有的却很慢；编译完成后，有的启动得很快，有的却很慢。其实，在理解了编译和启动时链接器所做的事儿之后，你就可以从根儿上找到这些问题的答案了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>06__App_如何通过注入动态库的方式实现极速编译调试？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/06__app_%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E6%B3%A8%E5%85%A5%E5%8A%A8%E6%80%81%E5%BA%93%E7%9A%84%E6%96%B9%E5%BC%8F%E5%AE%9E%E7%8E%B0%E6%9E%81%E9%80%9F%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/06__app_%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E6%B3%A8%E5%85%A5%E5%8A%A8%E6%80%81%E5%BA%93%E7%9A%84%E6%96%B9%E5%BC%8F%E5%AE%9E%E7%8E%B0%E6%9E%81%E9%80%9F%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95/</guid>
      <description>&lt;p&gt;你好，我是戴铭。&lt;/p&gt;&#xA;&lt;p&gt;在上一篇文章中，我和你分享了链接器的基础知识。今天我们再继续聊聊，动态库链接器的实际应用，也就是编译调试的提速问题。&lt;/p&gt;&#xA;&lt;p&gt;iOS 原生代码的编译调试，都是通过一遍又一遍地编译重启 App 来进行的。所以，项目代码量越大，编译时间就越长。虽然我们可以通过将部分代码先编译成二进制集成到工程里，来避免每次都全量编译来加快编译速度，但即使这样，每次编译都还是需要重启 App，需要再走一遍调试流程。&lt;/p&gt;</description>
    </item>
    <item>
      <title>07__Clang、Infer_和_OCLint_，我们应该使用谁来做静态分析？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/07__clanginfer_%E5%92%8C_oclint_%E6%88%91%E4%BB%AC%E5%BA%94%E8%AF%A5%E4%BD%BF%E7%94%A8%E8%B0%81%E6%9D%A5%E5%81%9A%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/07__clanginfer_%E5%92%8C_oclint_%E6%88%91%E4%BB%AC%E5%BA%94%E8%AF%A5%E4%BD%BF%E7%94%A8%E8%B0%81%E6%9D%A5%E5%81%9A%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/</guid>
      <description>&lt;p&gt;你好，我是戴铭。&lt;/p&gt;&#xA;&lt;p&gt;随着业务开发迭代速度越来越快，完全依赖人工保证工程质量也变得越来越不牢靠。所以，静态分析，这种可以帮助我们在编写代码的阶段就能及时发现代码错误，从而在根儿上保证工程质量的技术，就成为了 iOS 开发者最常用到的一种代码调试技术。&lt;/p&gt;</description>
    </item>
    <item>
      <title>08__如何利用_Clang_为_App_提质？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/08__%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8_clang_%E4%B8%BA_app_%E6%8F%90%E8%B4%A8/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/08__%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8_clang_%E4%B8%BA_app_%E6%8F%90%E8%B4%A8/</guid>
      <description>&lt;p&gt;你好，我是戴铭。&lt;/p&gt;&#xA;&lt;p&gt;以前在工作中，有段时间连续发生了多次线上事故，在复盘时大家都提出是因为代码不规范、代码规范执行不到位，从而导致代码质量过差，无法监管，我们才被动处理线上事故。会上牢骚发完，会后应该怎么执行呢？&lt;/p&gt;</description>
    </item>
    <item>
      <title>09__无侵入的埋点方案如何实现？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/09__%E6%97%A0%E4%BE%B5%E5%85%A5%E7%9A%84%E5%9F%8B%E7%82%B9%E6%96%B9%E6%A1%88%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/09__%E6%97%A0%E4%BE%B5%E5%85%A5%E7%9A%84%E5%9F%8B%E7%82%B9%E6%96%B9%E6%A1%88%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0/</guid>
      <description>&lt;p&gt;你好，我是戴铭。&lt;/p&gt;&#xA;&lt;p&gt;在 iOS 开发中，埋点可以解决两大类问题：一是了解用户使用 App 的行为，二是降低分析线上问题的难度。目前，iOS 开发中常见的埋点方式，主要包括代码埋点、可视化埋点和无埋点这三种。&lt;/p&gt;</description>
    </item>
    <item>
      <title>10__包大小：如何从资源和代码层面实现全方位瘦身？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/10__%E5%8C%85%E5%A4%A7%E5%B0%8F%E5%A6%82%E4%BD%95%E4%BB%8E%E8%B5%84%E6%BA%90%E5%92%8C%E4%BB%A3%E7%A0%81%E5%B1%82%E9%9D%A2%E5%AE%9E%E7%8E%B0%E5%85%A8%E6%96%B9%E4%BD%8D%E7%98%A6%E8%BA%AB/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/10__%E5%8C%85%E5%A4%A7%E5%B0%8F%E5%A6%82%E4%BD%95%E4%BB%8E%E8%B5%84%E6%BA%90%E5%92%8C%E4%BB%A3%E7%A0%81%E5%B1%82%E9%9D%A2%E5%AE%9E%E7%8E%B0%E5%85%A8%E6%96%B9%E4%BD%8D%E7%98%A6%E8%BA%AB/</guid>
      <description>&lt;p&gt;你好，我是戴铭。今天我来跟你说下如何对 App 包大小做优化。&lt;/p&gt;&#xA;&lt;p&gt;对 App 包大小做优化的目的，就是节省用户流量，提高用户下载速度。当初，我在主持滴滴客户端的瘦身时，就是奔着对包大小进行最大化优化的目标，3 个月内将包大小从 106MB 降到了最低 64MB，半年内稳定在了 70MB。当时业务还没有停，从 106MB 降到 64MB 的这 3 个月里如履薄冰，不同团队各显神威，几乎用到了所有手段，也做了很多创新，最终达成了目标。&lt;/p&gt;</description>
    </item>
    <item>
      <title>11__热点问题答疑（一）：基础模块问题答疑</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/11__%E7%83%AD%E7%82%B9%E9%97%AE%E9%A2%98%E7%AD%94%E7%96%91%E4%B8%80%E5%9F%BA%E7%A1%80%E6%A8%A1%E5%9D%97%E9%97%AE%E9%A2%98%E7%AD%94%E7%96%91/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/11__%E7%83%AD%E7%82%B9%E9%97%AE%E9%A2%98%E7%AD%94%E7%96%91%E4%B8%80%E5%9F%BA%E7%A1%80%E6%A8%A1%E5%9D%97%E9%97%AE%E9%A2%98%E7%AD%94%E7%96%91/</guid>
      <description>&lt;p&gt;你好，我是戴铭。&lt;/p&gt;&#xA;&lt;p&gt;专栏上线以来，我通过评论区收到了很多同学提出的问题、建议、心得和经验，当然提的问题居多。虽然我未在评论区对每条留言做出回复，但是我对大家提出的问题却都一一记录了下来，等待这次答疑文章的到来。其实，不光是在留言区，也有一些朋友通过私信跟我反馈了学习专栏遇到的问题。&lt;/p&gt;</description>
    </item>
    <item>
      <title>12__iOS_崩溃千奇百怪，如何全面监控？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/12__ios_%E5%B4%A9%E6%BA%83%E5%8D%83%E5%A5%87%E7%99%BE%E6%80%AA%E5%A6%82%E4%BD%95%E5%85%A8%E9%9D%A2%E7%9B%91%E6%8E%A7/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/12__ios_%E5%B4%A9%E6%BA%83%E5%8D%83%E5%A5%87%E7%99%BE%E6%80%AA%E5%A6%82%E4%BD%95%E5%85%A8%E9%9D%A2%E7%9B%91%E6%8E%A7/</guid>
      <description>&lt;p&gt;你好，我是戴铭。今天我要跟你说的是崩溃监控。&lt;/p&gt;&#xA;&lt;p&gt;App 上线后，我们最怕出现的情况就是应用崩溃了。但是，我们线下测试好好的 App，为什么上线后就发生崩溃了呢？这些崩溃日志信息是怎么采集的？能够采集的全吗？采集后又要怎么分析、解决呢？&lt;/p&gt;</description>
    </item>
    <item>
      <title>13__如何利用_RunLoop_原理去监控卡顿？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/13__%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8_runloop_%E5%8E%9F%E7%90%86%E5%8E%BB%E7%9B%91%E6%8E%A7%E5%8D%A1%E9%A1%BF/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/13__%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8_runloop_%E5%8E%9F%E7%90%86%E5%8E%BB%E7%9B%91%E6%8E%A7%E5%8D%A1%E9%A1%BF/</guid>
      <description>&lt;p&gt;你好，我是戴铭。今天，我来和你说说如何监控卡顿。&lt;/p&gt;&#xA;&lt;p&gt;卡顿问题，就是在主线程上无法响应用户交互的问题。如果一个 App 时不时地就给你卡一下，有时还长时间无响应，这时你还愿意继续用它吗？所以说，卡顿问题对 App 的伤害是巨大的，也是我们必须要重点解决的一个问题。&lt;/p&gt;</description>
    </item>
    <item>
      <title>14__临近_OOM，如何获取详细内存分配信息，分析内存问题？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/14__%E4%B8%B4%E8%BF%91_oom%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E8%AF%A6%E7%BB%86%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E4%BF%A1%E6%81%AF%E5%88%86%E6%9E%90%E5%86%85%E5%AD%98%E9%97%AE%E9%A2%98/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/14__%E4%B8%B4%E8%BF%91_oom%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E8%AF%A6%E7%BB%86%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E4%BF%A1%E6%81%AF%E5%88%86%E6%9E%90%E5%86%85%E5%AD%98%E9%97%AE%E9%A2%98/</guid>
      <description>&lt;p&gt;你好，我是戴铭。今天我们来聊聊，临近 OOM，如何获取详细的内存分配信息，分析内存问题的话题。&lt;/p&gt;&#xA;&lt;p&gt;OOM，是 Out of Memory 的缩写，指的是 App 占用的内存达到了 iOS 系统对单个 App 占用内存上限后，而被系统强杀掉的现象。这么说的话，OOM 其实也属于我们在第 12 篇文章“&lt;a href=&#34;./88600.md&#34;&gt;iOS 崩溃千奇百怪，如何全面监控？&lt;/a&gt;”中提到的应用“崩溃”中的一种，是由 iOS 的 Jetsam 机制导致的一种“另类”崩溃，并且日志无法通过信号捕捉到。&lt;/p&gt;</description>
    </item>
    <item>
      <title>15__日志监控：怎样获取_App_中的全量日志？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/15__%E6%97%A5%E5%BF%97%E7%9B%91%E6%8E%A7%E6%80%8E%E6%A0%B7%E8%8E%B7%E5%8F%96_app_%E4%B8%AD%E7%9A%84%E5%85%A8%E9%87%8F%E6%97%A5%E5%BF%97/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/15__%E6%97%A5%E5%BF%97%E7%9B%91%E6%8E%A7%E6%80%8E%E6%A0%B7%E8%8E%B7%E5%8F%96_app_%E4%B8%AD%E7%9A%84%E5%85%A8%E9%87%8F%E6%97%A5%E5%BF%97/</guid>
      <description>&lt;p&gt;你好，我是戴铭。&lt;/p&gt;&#xA;&lt;p&gt;我在前面的第 12、13 和 14 三篇文章中，和你分享了崩溃、卡顿、内存问题的监控。一旦监控到问题，我们还需要记录下问题的详细信息，形成日志告知开发者，这样开发者才能够从这些日志中定位问题。&lt;/p&gt;</description>
    </item>
    <item>
      <title>16__性能监控：衡量_App_质量的那把尺</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/16__%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7%E8%A1%A1%E9%87%8F_app_%E8%B4%A8%E9%87%8F%E7%9A%84%E9%82%A3%E6%8A%8A%E5%B0%BA/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/16__%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7%E8%A1%A1%E9%87%8F_app_%E8%B4%A8%E9%87%8F%E7%9A%84%E9%82%A3%E6%8A%8A%E5%B0%BA/</guid>
      <description>&lt;p&gt;你好，我是戴铭。&lt;/p&gt;&#xA;&lt;p&gt;通常情况下，App 的性能问题虽然不会导致 App 不可用，但依然会影响到用户体验。如果这个性能问题不断累积，达到临界点以后，问题就会爆发出来。这时，影响到的就不仅仅是用户了，还有负责 App 开发的你。&lt;/p&gt;</description>
    </item>
    <item>
      <title>17__远超你想象的多线程的那些坑</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/17__%E8%BF%9C%E8%B6%85%E4%BD%A0%E6%83%B3%E8%B1%A1%E7%9A%84%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%9A%84%E9%82%A3%E4%BA%9B%E5%9D%91/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/17__%E8%BF%9C%E8%B6%85%E4%BD%A0%E6%83%B3%E8%B1%A1%E7%9A%84%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%9A%84%E9%82%A3%E4%BA%9B%E5%9D%91/</guid>
      <description>&lt;p&gt;你好，我是戴铭。今天，我们一起来聊聊 iOS 开发中，使用多线程技术会带来的那些问题。&lt;/p&gt;&#xA;&lt;p&gt;我们可以先来试想这么一个场景，如果没有多线程技术，那么我们要对一张照片进行滤镜处理时，就只能由主线程来完成这个处理。可想而知，这时候主线程阻塞了，其他的任何操作都无法继续。&lt;/p&gt;</description>
    </item>
    <item>
      <title>18__怎么减少_App_电量消耗？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/18__%E6%80%8E%E4%B9%88%E5%87%8F%E5%B0%91_app_%E7%94%B5%E9%87%8F%E6%B6%88%E8%80%97/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/18__%E6%80%8E%E4%B9%88%E5%87%8F%E5%B0%91_app_%E7%94%B5%E9%87%8F%E6%B6%88%E8%80%97/</guid>
      <description>&lt;p&gt;你好，我是戴铭。&lt;/p&gt;&#xA;&lt;p&gt;手机设备电量有限，App 开发时如不注意电量的的消耗，当用户发现你的 App 是耗电大户时，就会毫不犹豫地将其抛弃。所以，每次开发完，我们都需要去检查自己的 App 有没有耗电的问题。&lt;/p&gt;</description>
    </item>
    <item>
      <title>19__热点问题答疑（二）：基础模块问题答疑</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/19__%E7%83%AD%E7%82%B9%E9%97%AE%E9%A2%98%E7%AD%94%E7%96%91%E4%BA%8C%E5%9F%BA%E7%A1%80%E6%A8%A1%E5%9D%97%E9%97%AE%E9%A2%98%E7%AD%94%E7%96%91/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/19__%E7%83%AD%E7%82%B9%E9%97%AE%E9%A2%98%E7%AD%94%E7%96%91%E4%BA%8C%E5%9F%BA%E7%A1%80%E6%A8%A1%E5%9D%97%E9%97%AE%E9%A2%98%E7%AD%94%E7%96%91/</guid>
      <description>&lt;p&gt;你好，我是戴铭。&lt;/p&gt;&#xA;&lt;p&gt;这是我们《iOS 开发高手课》专栏的第二期答疑文章，我将继续和你分享大家在学习前面文章时遇到的最普遍的问题。&lt;/p&gt;&#xA;&lt;p&gt;首先呢，我要感谢你这段时间对专栏的关注，让我感觉写专栏这件事儿格外有意义。通过这段时间对大家留言问题的观察，我也发现还有很多同学对 RunLoop 原理的一些基础概念不是很了解。这就导致在出现了比如卡顿或者线程问题时找不到好的解决方案，所以我今天就先和你分享一下学习 RunLoop 的方法和参考资料。&lt;/p&gt;</description>
    </item>
    <item>
      <title>20__iOS开发的最佳学习路径是什么？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/20__ios%E5%BC%80%E5%8F%91%E7%9A%84%E6%9C%80%E4%BD%B3%E5%AD%A6%E4%B9%A0%E8%B7%AF%E5%BE%84%E6%98%AF%E4%BB%80%E4%B9%88/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/20__ios%E5%BC%80%E5%8F%91%E7%9A%84%E6%9C%80%E4%BD%B3%E5%AD%A6%E4%B9%A0%E8%B7%AF%E5%BE%84%E6%98%AF%E4%BB%80%E4%B9%88/</guid>
      <description>&lt;p&gt;你好，我是戴铭。&lt;/p&gt;&#xA;&lt;p&gt;我在专栏的第一篇文章中，就和你分享了我的 iOS 知识体系。通过前面“基础篇”内容的学习，你有没有总结出一套高效地构建自己的知识体系的路径呢？&lt;/p&gt;</description>
    </item>
    <item>
      <title>21__除了_Cocoa，iOS还可以用哪些_GUI_框架开发？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/21__%E9%99%A4%E4%BA%86_cocoaios%E8%BF%98%E5%8F%AF%E4%BB%A5%E7%94%A8%E5%93%AA%E4%BA%9B_gui_%E6%A1%86%E6%9E%B6%E5%BC%80%E5%8F%91/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/21__%E9%99%A4%E4%BA%86_cocoaios%E8%BF%98%E5%8F%AF%E4%BB%A5%E7%94%A8%E5%93%AA%E4%BA%9B_gui_%E6%A1%86%E6%9E%B6%E5%BC%80%E5%8F%91/</guid>
      <description>&lt;p&gt;你好，我是戴铭。&lt;/p&gt;&#xA;&lt;p&gt;在专栏的第 2 篇文章“&lt;a href=&#34;./85331.md&#34;&gt;App 启动速度怎么做优化与监控？&lt;/a&gt;”中，我和你分享了如何实现方法级别的启动优化，从而实现整个 App 启动速度的优化。&lt;/p&gt;&#xA;&lt;p&gt;通过这篇文章的内容你会发现，把可以优化方法的工作都处理完之后，比如主线程上的大量计算、IO 操作、懒加载（也叫作延时加载，即当对象需要用到的时候再去加载），就只剩下了 GUI（Graphical User Interface 图形用户界面）相关的方法。&lt;/p&gt;</description>
    </item>
    <item>
      <title>22__细说_iOS_响应式框架变迁，哪些思想可以为我所用？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/22__%E7%BB%86%E8%AF%B4_ios_%E5%93%8D%E5%BA%94%E5%BC%8F%E6%A1%86%E6%9E%B6%E5%8F%98%E8%BF%81%E5%93%AA%E4%BA%9B%E6%80%9D%E6%83%B3%E5%8F%AF%E4%BB%A5%E4%B8%BA%E6%88%91%E6%89%80%E7%94%A8/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/22__%E7%BB%86%E8%AF%B4_ios_%E5%93%8D%E5%BA%94%E5%BC%8F%E6%A1%86%E6%9E%B6%E5%8F%98%E8%BF%81%E5%93%AA%E4%BA%9B%E6%80%9D%E6%83%B3%E5%8F%AF%E4%BB%A5%E4%B8%BA%E6%88%91%E6%89%80%E7%94%A8/</guid>
      <description>&lt;p&gt;你好，我是戴铭。&lt;/p&gt;&#xA;&lt;p&gt;说到 iOS 响应式框架，最开始被大家知道的是 ReactiveCocoa（简称 RAC），后来比较流行的是 RxSwift。但据我了解，iOS 原生开发使用 ReactiveCocoa 框架的团队并不多，而前端在推出 React.js 后，响应式思路遍地开花。&lt;/p&gt;</description>
    </item>
    <item>
      <title>23__如何构造酷炫的物理效果和过场动画效果？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/23__%E5%A6%82%E4%BD%95%E6%9E%84%E9%80%A0%E9%85%B7%E7%82%AB%E7%9A%84%E7%89%A9%E7%90%86%E6%95%88%E6%9E%9C%E5%92%8C%E8%BF%87%E5%9C%BA%E5%8A%A8%E7%94%BB%E6%95%88%E6%9E%9C/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/23__%E5%A6%82%E4%BD%95%E6%9E%84%E9%80%A0%E9%85%B7%E7%82%AB%E7%9A%84%E7%89%A9%E7%90%86%E6%95%88%E6%9E%9C%E5%92%8C%E8%BF%87%E5%9C%BA%E5%8A%A8%E7%94%BB%E6%95%88%E6%9E%9C/</guid>
      <description>&lt;p&gt;你好，我是戴铭。今天，我要和你分享的是如何为你 App 添加酷炫的动画效果。&lt;/p&gt;&#xA;&lt;p&gt;不论是 iOS 开发，还是 Android 开发，现在的动画库差不多都需要手动去编写动画代码。这样的话，iOS 和 Android 开发者就需要分别去编写适合自己系统的代码。而且，手动编写动画的代码也非常复杂，不容易维护，很多动画细节的调整还需要和动画设计师不断沟通打磨，尤其是千行以上的动画代码编写、维护、沟通的成本巨大。&lt;/p&gt;</description>
    </item>
    <item>
      <title>24__A_B_测试：验证决策效果的利器</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/24__a_b_%E6%B5%8B%E8%AF%95%E9%AA%8C%E8%AF%81%E5%86%B3%E7%AD%96%E6%95%88%E6%9E%9C%E7%9A%84%E5%88%A9%E5%99%A8/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/24__a_b_%E6%B5%8B%E8%AF%95%E9%AA%8C%E8%AF%81%E5%86%B3%E7%AD%96%E6%95%88%E6%9E%9C%E7%9A%84%E5%88%A9%E5%99%A8/</guid>
      <description>&lt;p&gt;你好，我是戴铭。今天，我来跟你聊聊验证决策的利器 A/B 测试。&lt;/p&gt;&#xA;&lt;p&gt;现在 App Store 中的应用，就像商场中的商品一样琳琅满目，可以解决用户各个方面的需求。这时，你要想创新，或者做出比竞品更优秀的功能，是越来越不容易。所以，很多公司都必须去做一些实验，看看有哪些功能可以增强自己 App 的竞争力，又有哪些功能可以废弃掉。而进行这样的实验的主要方法，就是 A/B 测试。&lt;/p&gt;</description>
    </item>
    <item>
      <title>25__怎样构建底层的发布和订阅事件总线？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/25__%E6%80%8E%E6%A0%B7%E6%9E%84%E5%BB%BA%E5%BA%95%E5%B1%82%E7%9A%84%E5%8F%91%E5%B8%83%E5%92%8C%E8%AE%A2%E9%98%85%E4%BA%8B%E4%BB%B6%E6%80%BB%E7%BA%BF/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/25__%E6%80%8E%E6%A0%B7%E6%9E%84%E5%BB%BA%E5%BA%95%E5%B1%82%E7%9A%84%E5%8F%91%E5%B8%83%E5%92%8C%E8%AE%A2%E9%98%85%E4%BA%8B%E4%BB%B6%E6%80%BB%E7%BA%BF/</guid>
      <description>&lt;p&gt;你好，我是戴铭。今天，我来跟你聊聊怎么构建事件总线。&lt;/p&gt;&#xA;&lt;p&gt;事件总线是对发布和订阅设计模式的一种实现，通过发布、订阅可以将组件间一对一和一对多的耦合关系解开。这种设计模式，特别适合数据层通过异步发布数据的方式告知 UI 层订阅者，使得 UI 层和数据层可以不用耦合在一起，在重构数据层或者 UI 层时不影响业务层。&lt;/p&gt;</description>
    </item>
    <item>
      <title>26__如何提高_JSON_解析的性能？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/26__%E5%A6%82%E4%BD%95%E6%8F%90%E9%AB%98_json_%E8%A7%A3%E6%9E%90%E7%9A%84%E6%80%A7%E8%83%BD/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/26__%E5%A6%82%E4%BD%95%E6%8F%90%E9%AB%98_json_%E8%A7%A3%E6%9E%90%E7%9A%84%E6%80%A7%E8%83%BD/</guid>
      <description>&lt;p&gt;你好，我是戴铭。&lt;/p&gt;&#xA;&lt;p&gt;在 iOS 开发中，我们都会碰到这样的问题：不同团队开发的库需要进行数据通信，而通信数据规范通常很难确定。今天，我们就来聊聊如何高效地解决这个问题吧。&lt;/p&gt;</description>
    </item>
    <item>
      <title>27__如何用_Flexbox_思路开发？跟自动布局比，Flexbox_好在哪？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/27__%E5%A6%82%E4%BD%95%E7%94%A8_flexbox_%E6%80%9D%E8%B7%AF%E5%BC%80%E5%8F%91%E8%B7%9F%E8%87%AA%E5%8A%A8%E5%B8%83%E5%B1%80%E6%AF%94flexbox_%E5%A5%BD%E5%9C%A8%E5%93%AA/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/27__%E5%A6%82%E4%BD%95%E7%94%A8_flexbox_%E6%80%9D%E8%B7%AF%E5%BC%80%E5%8F%91%E8%B7%9F%E8%87%AA%E5%8A%A8%E5%B8%83%E5%B1%80%E6%AF%94flexbox_%E5%A5%BD%E5%9C%A8%E5%93%AA/</guid>
      <description>&lt;p&gt;你好，我是戴铭。今天，我要和你跟你聊聊 Flexbox。&lt;/p&gt;&#xA;&lt;p&gt;你很有可能不知道 Flexbox 是啥，但一定不会对 React Native、Weex 和 Texture（AsyncDisplayKit）感到陌生，而 Flexbox 就是这些知名布局库采用的布局思路。不可小觑的是，苹果公司官方的 UIStackView，也是采用 Flexbox 思路来实现布局的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>28__怎么应对各种富文本表现需求？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/28__%E6%80%8E%E4%B9%88%E5%BA%94%E5%AF%B9%E5%90%84%E7%A7%8D%E5%AF%8C%E6%96%87%E6%9C%AC%E8%A1%A8%E7%8E%B0%E9%9C%80%E6%B1%82/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/28__%E6%80%8E%E4%B9%88%E5%BA%94%E5%AF%B9%E5%90%84%E7%A7%8D%E5%AF%8C%E6%96%87%E6%9C%AC%E8%A1%A8%E7%8E%B0%E9%9C%80%E6%B1%82/</guid>
      <description>&lt;p&gt;你好，我是戴铭。今天，我要和你分享的主题是，在 iOS 开发中，如何展示富文本的内容。&lt;/p&gt;&#xA;&lt;p&gt;在 iOS 开发中，富文本的展示是一个非常常见的需求。为了帮助你更好地了解如何展示富文本，我在今天这篇文章中，会结合一个项目来跟你说说面对富文本展示需求时，要怎么考虑和实现。这样，你在自己的项目中，也可以借鉴今天这样的实现思路和方法。&lt;/p&gt;</description>
    </item>
    <item>
      <title>28-iOS开发高手课</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/28-ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/28-ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/</guid>
      <description></description>
    </item>
    <item>
      <title>29__如何在_iOS_中进行面向测试驱动开发和面向行为驱动开发？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/29__%E5%A6%82%E4%BD%95%E5%9C%A8_ios_%E4%B8%AD%E8%BF%9B%E8%A1%8C%E9%9D%A2%E5%90%91%E6%B5%8B%E8%AF%95%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91%E5%92%8C%E9%9D%A2%E5%90%91%E8%A1%8C%E4%B8%BA%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/29__%E5%A6%82%E4%BD%95%E5%9C%A8_ios_%E4%B8%AD%E8%BF%9B%E8%A1%8C%E9%9D%A2%E5%90%91%E6%B5%8B%E8%AF%95%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91%E5%92%8C%E9%9D%A2%E5%90%91%E8%A1%8C%E4%B8%BA%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91/</guid>
      <description>&lt;p&gt;你好，我是戴铭。今天，我要和你分享的话题是，如何在 iOS 中进行面向测试驱动开发和面向行为驱动开发。&lt;/p&gt;&#xA;&lt;p&gt;每当你编写完代码后，都会编译看看运行结果是否符合预期。如果这段代码的影响范围小，你很容易就能看出结果是否符合预期，而如果验证的结果是不符合预期，那么你就会检查刚才编写的代码是否有问题。&lt;/p&gt;</description>
    </item>
    <item>
      <title>30__如何制定一套适合自己团队的_iOS_编码规范？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/30__%E5%A6%82%E4%BD%95%E5%88%B6%E5%AE%9A%E4%B8%80%E5%A5%97%E9%80%82%E5%90%88%E8%87%AA%E5%B7%B1%E5%9B%A2%E9%98%9F%E7%9A%84_ios_%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/30__%E5%A6%82%E4%BD%95%E5%88%B6%E5%AE%9A%E4%B8%80%E5%A5%97%E9%80%82%E5%90%88%E8%87%AA%E5%B7%B1%E5%9B%A2%E9%98%9F%E7%9A%84_ios_%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/</guid>
      <description>&lt;p&gt;你好，我是戴铭。&lt;/p&gt;&#xA;&lt;p&gt;如果团队成员的编码规范各不相同，那么你在接收其他人的代码时是不是总会因为无法认同他的代码风格，而想着去重写呢。但是，重写这个事儿不只会增加梳理逻辑和开发成本，而且重写后出现问题的风险也会相应增加。那么，这个问题应该如何解决呢？&lt;/p&gt;</description>
    </item>
    <item>
      <title>31__iOS_开发学习资料和书单推荐</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/31__ios_%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E5%92%8C%E4%B9%A6%E5%8D%95%E6%8E%A8%E8%8D%90/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/31__ios_%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E5%92%8C%E4%B9%A6%E5%8D%95%E6%8E%A8%E8%8D%90/</guid>
      <description>&lt;p&gt;你好，我是戴铭。&lt;/p&gt;&#xA;&lt;p&gt;在更新专栏的这段时间里，我收到很多同学的反馈，希望我能推荐些 iOS 开发的优秀学习资料和图书，来帮助自己高效学习。确实，现在各种学习资料非常丰富，但这些资料一方面质量参差不齐，另一方面搜索出适合自己的内容也需要花费不少时间。&lt;/p&gt;</description>
    </item>
    <item>
      <title>32__热点问题答疑（三）</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/32__%E7%83%AD%E7%82%B9%E9%97%AE%E9%A2%98%E7%AD%94%E7%96%91%E4%B8%89/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/32__%E7%83%AD%E7%82%B9%E9%97%AE%E9%A2%98%E7%AD%94%E7%96%91%E4%B8%89/</guid>
      <description>&lt;p&gt;你好，我是戴铭。&lt;/p&gt;&#xA;&lt;p&gt;这是我们《iOS 开发高手课》专栏的第三期答疑文章，我将继续和你分享大家在学习前面文章时遇到的最普遍的问题。&lt;/p&gt;&#xA;&lt;p&gt;今天，我在这段时间的留言问题中，挑选了几个 iOS 开发者普遍关注的问题，在这篇答疑文章里来做一个统一回复。&lt;/p&gt;</description>
    </item>
    <item>
      <title>33__iOS_系统内核_XNU：App_如何加载？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/33__ios_%E7%B3%BB%E7%BB%9F%E5%86%85%E6%A0%B8_xnuapp_%E5%A6%82%E4%BD%95%E5%8A%A0%E8%BD%BD/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/33__ios_%E7%B3%BB%E7%BB%9F%E5%86%85%E6%A0%B8_xnuapp_%E5%A6%82%E4%BD%95%E5%8A%A0%E8%BD%BD/</guid>
      <description>&lt;p&gt;你好，我是戴铭。&lt;/p&gt;&#xA;&lt;p&gt;在专栏的第 2 篇文章&lt;a href=&#34;./85331.md&#34;&gt;《App 启动速度怎么做优化与监控？》&lt;/a&gt;更新完之后，我看到很多同学对启动加载 App 的底层原理表示出了浓厚兴趣。所谓工欲善其事，必先利其器，相信有着好奇心的你，一定也会对支撑着 App 运行的操作系统有着各种各样的疑问。&lt;/p&gt;</description>
    </item>
    <item>
      <title>34__iOS_黑魔法_Runtime_Method_Swizzling_背后的原理</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/34__ios_%E9%BB%91%E9%AD%94%E6%B3%95_runtime_method_swizzling_%E8%83%8C%E5%90%8E%E7%9A%84%E5%8E%9F%E7%90%86/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/34__ios_%E9%BB%91%E9%AD%94%E6%B3%95_runtime_method_swizzling_%E8%83%8C%E5%90%8E%E7%9A%84%E5%8E%9F%E7%90%86/</guid>
      <description>&lt;p&gt;你好，我是戴铭。&lt;/p&gt;&#xA;&lt;p&gt;提到 Object-C 中的 Runtime，你可能一下就想到了 iOS 的黑魔法 Method Swizzling。毕竟，这个黑魔法可以帮助我们在运行时进行方法交换，或者在原方法执行之前插入自定义方法，以保证在业务面向对象编程方式不被改变的情况下，进行切面功能的开发。但是，运行时进行方法交换同时也会带来一定的风险。所以，今天我就来和你详细聊聊 Runtime Method Swizzling 的原理。&lt;/p&gt;</description>
    </item>
    <item>
      <title>35__libffi：动态调用和定义_C_函数</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/35__libffi%E5%8A%A8%E6%80%81%E8%B0%83%E7%94%A8%E5%92%8C%E5%AE%9A%E4%B9%89_c_%E5%87%BD%E6%95%B0/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/35__libffi%E5%8A%A8%E6%80%81%E8%B0%83%E7%94%A8%E5%92%8C%E5%AE%9A%E4%B9%89_c_%E5%87%BD%E6%95%B0/</guid>
      <description>&lt;p&gt;你好，我是戴铭。&lt;/p&gt;&#xA;&lt;p&gt;在 iOS 开发中，我们可以使用 Runtime 接口动态地调用 Objective-C 方法，但是却无法动态调用 C 的函数。那么，我们怎么才能动态地调用 C 语言函数呢？&lt;/p&gt;&#xA;&lt;p&gt;C 语言编译后，在可执行文件里会有原函数名信息，我们可以通过函数名字符串来找到函数的地址。现在，我们只要能够通过函数名找到函数地址，就能够实现动态地去调用 C 语言函数。&lt;/p&gt;</description>
    </item>
    <item>
      <title>36__iOS_是怎么管理内存的？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/36__ios_%E6%98%AF%E6%80%8E%E4%B9%88%E7%AE%A1%E7%90%86%E5%86%85%E5%AD%98%E7%9A%84/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/36__ios_%E6%98%AF%E6%80%8E%E4%B9%88%E7%AE%A1%E7%90%86%E5%86%85%E5%AD%98%E7%9A%84/</guid>
      <description>&lt;p&gt;你好，我是戴铭。今天，我来和你聊聊 iOS 是怎么管理内存的。&lt;/p&gt;&#xA;&lt;p&gt;不同的系统版本对 App 运行时占用内存的限制不同，你可以利用我在第 14 篇文章中提到的方法，去查看不同版本系统对 App 占用内存的具体限制是多少。另外，系统版本的升级也会增加占用的内存，同时 App 功能的增多也会要求越来越多的内存。&lt;/p&gt;</description>
    </item>
    <item>
      <title>37__如何编写_Clang_插件？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/37__%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99_clang_%E6%8F%92%E4%BB%B6/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/37__%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99_clang_%E6%8F%92%E4%BB%B6/</guid>
      <description>&lt;p&gt;你好，我是戴铭。今天，我和你分享的主题是，如何编写 Clang 插件。&lt;/p&gt;&#xA;&lt;p&gt;Clang 使用的是模块化设计，可以将自身功能以库的方式来供上层应用来调用。比如，编码规范检查、IDE 中的语法高亮、语法检查等上层应用，都是使用 Clang 库的接口开发出来的。Clang 库对接上层应用有三个接口库，分别是 LibClang、Clang 插件、LibTooling。关于这三个接口库的介绍，我已经在&lt;a href=&#34;./87844.md&#34;&gt;第 8 篇文章&lt;/a&gt;中和你详细分享过。&lt;/p&gt;</description>
    </item>
    <item>
      <title>38__热点问题答疑（四）</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/38__%E7%83%AD%E7%82%B9%E9%97%AE%E9%A2%98%E7%AD%94%E7%96%91%E5%9B%9B/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/38__%E7%83%AD%E7%82%B9%E9%97%AE%E9%A2%98%E7%AD%94%E7%96%91%E5%9B%9B/</guid>
      <description>&lt;p&gt;你好，我是戴铭。今天这篇答疑文章，我要针对近期留言中的热点问题，进行一次集中解答。&lt;/p&gt;&#xA;&lt;p&gt;目前，我们专栏已经更新完了基础篇、应用开发篇和原理篇 3 大模块的内容。其中，原理篇的内容，因为涉及到的都是底层原理，比如系统内核 XNU、AOP、内存管理和编译等，学习起来会很辛苦。但所谓良药苦口，你只有搞明白了这些最最底层的原理，才可以帮你抓住开发知识的规律，达到融会贯通的效果，进而提升自己造轮子、解决问题的能力。&lt;/p&gt;</description>
    </item>
    <item>
      <title>39__打通前端与原生的桥梁：JavaScriptCore_能干哪些事情？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/39__%E6%89%93%E9%80%9A%E5%89%8D%E7%AB%AF%E4%B8%8E%E5%8E%9F%E7%94%9F%E7%9A%84%E6%A1%A5%E6%A2%81javascriptcore_%E8%83%BD%E5%B9%B2%E5%93%AA%E4%BA%9B%E4%BA%8B%E6%83%85/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/39__%E6%89%93%E9%80%9A%E5%89%8D%E7%AB%AF%E4%B8%8E%E5%8E%9F%E7%94%9F%E7%9A%84%E6%A1%A5%E6%A2%81javascriptcore_%E8%83%BD%E5%B9%B2%E5%93%AA%E4%BA%9B%E4%BA%8B%E6%83%85/</guid>
      <description>&lt;p&gt;你好，我是戴铭。&lt;/p&gt;&#xA;&lt;p&gt;今天这篇文章是原生与前端共舞模块的第一篇，我来跟你聊聊前端和原生之间的桥梁 JavaScriptCore，看看它是什么、能做哪些事儿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>40__React_Native、Flutter_等，这些跨端方案怎么选？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/40__react_nativeflutter_%E7%AD%89%E8%BF%99%E4%BA%9B%E8%B7%A8%E7%AB%AF%E6%96%B9%E6%A1%88%E6%80%8E%E4%B9%88%E9%80%89/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/40__react_nativeflutter_%E7%AD%89%E8%BF%99%E4%BA%9B%E8%B7%A8%E7%AB%AF%E6%96%B9%E6%A1%88%E6%80%8E%E4%B9%88%E9%80%89/</guid>
      <description>&lt;p&gt;你好，我是戴铭。&lt;/p&gt;&#xA;&lt;p&gt;为了一份代码能够运行在多个平台，从而节省开发和沟通成本，各公司都开始关注和使用跨端方案。目前，主流的跨端方案，主要分为两种：一种是，将 JavaScriptCore 引擎当作虚拟机的方案，代表框架是 React Native；另一种是，使用非 JavaScriptCore 虚拟机的方案，代表框架是 Flutter。&lt;/p&gt;</description>
    </item>
    <item>
      <title>41__原生布局转到前端布局，开发思路有哪些转变？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/41__%E5%8E%9F%E7%94%9F%E5%B8%83%E5%B1%80%E8%BD%AC%E5%88%B0%E5%89%8D%E7%AB%AF%E5%B8%83%E5%B1%80%E5%BC%80%E5%8F%91%E6%80%9D%E8%B7%AF%E6%9C%89%E5%93%AA%E4%BA%9B%E8%BD%AC%E5%8F%98/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/41__%E5%8E%9F%E7%94%9F%E5%B8%83%E5%B1%80%E8%BD%AC%E5%88%B0%E5%89%8D%E7%AB%AF%E5%B8%83%E5%B1%80%E5%BC%80%E5%8F%91%E6%80%9D%E8%B7%AF%E6%9C%89%E5%93%AA%E4%BA%9B%E8%BD%AC%E5%8F%98/</guid>
      <description>&lt;p&gt;你好，我是戴铭。今天，我来跟你聊聊原生布局转到前端布局的过程中，开发思路会有哪些转变。&lt;/p&gt;&#xA;&lt;p&gt;最开始的时候，iOS 原生布局只支持通过横纵坐标和宽高确定布局的方式，后来引入了 Auto Layout 来优化布局。但，Auto Layout 的写法繁琐，开发者需要编写大量的代码，无法将精力集中在界面布局本身。再后来，苹果公司意识到 Auto Layout 的这个问题，于是推出了 VFL（Visual Format Language，可视化格式语言）来简化 Auto Layout 的写法。&lt;/p&gt;</description>
    </item>
    <item>
      <title>42__iOS原生、大前端和Flutter分别是怎么渲染的？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/42__ios%E5%8E%9F%E7%94%9F%E5%A4%A7%E5%89%8D%E7%AB%AF%E5%92%8Cflutter%E5%88%86%E5%88%AB%E6%98%AF%E6%80%8E%E4%B9%88%E6%B8%B2%E6%9F%93%E7%9A%84/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/42__ios%E5%8E%9F%E7%94%9F%E5%A4%A7%E5%89%8D%E7%AB%AF%E5%92%8Cflutter%E5%88%86%E5%88%AB%E6%98%AF%E6%80%8E%E4%B9%88%E6%B8%B2%E6%9F%93%E7%9A%84/</guid>
      <description>&lt;p&gt;你好，我是戴铭。今天，我来和你聊聊 iOS 原生、大前端和 Flutter 分别是怎么渲染的。&lt;/p&gt;&#xA;&lt;p&gt;用户在使用 App 时，界面的设计、流畅程度是最直接的体验。为此，苹果公司提供了各个层级的库，比如 SwiftUI、UIKit、Core Animation、Core Graphic、OpenGL，以方便 App 界面的开发。&lt;/p&gt;</description>
    </item>
    <item>
      <title>43__剖析使_App_具有动态化和热更新能力的方案</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/43__%E5%89%96%E6%9E%90%E4%BD%BF_app_%E5%85%B7%E6%9C%89%E5%8A%A8%E6%80%81%E5%8C%96%E5%92%8C%E7%83%AD%E6%9B%B4%E6%96%B0%E8%83%BD%E5%8A%9B%E7%9A%84%E6%96%B9%E6%A1%88/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/43__%E5%89%96%E6%9E%90%E4%BD%BF_app_%E5%85%B7%E6%9C%89%E5%8A%A8%E6%80%81%E5%8C%96%E5%92%8C%E7%83%AD%E6%9B%B4%E6%96%B0%E8%83%BD%E5%8A%9B%E7%9A%84%E6%96%B9%E6%A1%88/</guid>
      <description>&lt;p&gt;你好，我是戴铭。今天，我来和你聊聊 iOS 开发中的动态化和热更新方案。&lt;/p&gt;&#xA;&lt;p&gt;热更新能力的初衷是，能够及时修复线上问题，减少 Bug 对用户的伤害。而动态化的目的，除了修复线上问题外，还要能够灵活更新 App 版本。&lt;/p&gt;</description>
    </item>
    <item>
      <title>结束语__慢几步，深几度</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/%E7%BB%93%E6%9D%9F%E8%AF%AD__%E6%85%A2%E5%87%A0%E6%AD%A5%E6%B7%B1%E5%87%A0%E5%BA%A6/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/%E7%BB%93%E6%9D%9F%E8%AF%AD__%E6%85%A2%E5%87%A0%E6%AD%A5%E6%B7%B1%E5%87%A0%E5%BA%A6/</guid>
      <description>&lt;p&gt;我觉得，每个 iOS 开发者，都是喜欢苹果公司的产品、喜欢好的产品设计的人。&lt;/p&gt;&#xA;&lt;p&gt;苹果公司一年一度的全球开发者大会（WWDC），不仅会推出新技术，还会向我们展示被筛选出的、年度最优秀的 App。现在，WWDC 就像是开发者的节日，总会在不经意间给我们惊喜。当年 Swift 的横空出世，让喜爱编程语言的我激动不已；如今，SwiftUI、Combine、Project Catalyst 的推出，更是让我无法入眠。每年，我都会熬夜看 WWDC；每次看完，我总是忍不住想快点儿试试新推出的功能。这些新功能，意味着新的灵感、新的创意。&lt;/p&gt;</description>
    </item>
    <item>
      <title>开篇词__锚定一个点，然后在这个点上深耕</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/%E5%BC%80%E7%AF%87%E8%AF%8D__%E9%94%9A%E5%AE%9A%E4%B8%80%E4%B8%AA%E7%82%B9%E7%84%B6%E5%90%8E%E5%9C%A8%E8%BF%99%E4%B8%AA%E7%82%B9%E4%B8%8A%E6%B7%B1%E8%80%95/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/%E5%BC%80%E7%AF%87%E8%AF%8D__%E9%94%9A%E5%AE%9A%E4%B8%80%E4%B8%AA%E7%82%B9%E7%84%B6%E5%90%8E%E5%9C%A8%E8%BF%99%E4%B8%AA%E7%82%B9%E4%B8%8A%E6%B7%B1%E8%80%95/</guid>
      <description>&lt;p&gt;你好，我是戴铭，欢迎你加入我的 iOS 开发专栏。&lt;/p&gt;&#xA;&lt;p&gt;说起 iOS 开发，自然是绕不开 iPhone 和 App Store 这两个词。多少年过去了，我依然记得 2007 年乔布斯发布第一代 iPhone 时的场景，可以说，那款 iPhone 重新定义了很多人对于手机的认知。那一天，也是移动互联网时代的开端。紧接着，在 2008 年 7 月的 WWDC 苹果全球开发者大会上，苹果宣布 App Store 正式对外开放，这也意味着属于开发者的移动互联网时代真正开始了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>用户故事__我是如何学习这个专栏的？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/%E7%94%A8%E6%88%B7%E6%95%85%E4%BA%8B__%E6%88%91%E6%98%AF%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0%E8%BF%99%E4%B8%AA%E4%B8%93%E6%A0%8F%E7%9A%84/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/ios%E5%BC%80%E5%8F%91%E9%AB%98%E6%89%8B%E8%AF%BE/%E7%94%A8%E6%88%B7%E6%95%85%E4%BA%8B__%E6%88%91%E6%98%AF%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0%E8%BF%99%E4%B8%AA%E4%B8%93%E6%A0%8F%E7%9A%84/</guid>
      <description>&lt;p&gt;你好，我是戴铭。&lt;/p&gt;&#xA;&lt;p&gt;专栏上线后，有些同学觉得学起来太吃力，也有些同学觉得学起来很顺利，那么这中间是因为学习方法的问题吗？有道是，方法比努力更重要，只有找到适合自己的学习方法，才能达到事半功倍的效果。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
