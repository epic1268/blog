<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>系统性能调优必知必会 on Docs</title>
    <link>https://politcloud.org/tags/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/</link>
    <description>Recent content in 系统性能调优必知必会 on Docs</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 10 Jan 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://politcloud.org/tags/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>01__CPU缓存：怎样写代码能够让CPU执行得更快？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/01__cpu%E7%BC%93%E5%AD%98%E6%80%8E%E6%A0%B7%E5%86%99%E4%BB%A3%E7%A0%81%E8%83%BD%E5%A4%9F%E8%AE%A9cpu%E6%89%A7%E8%A1%8C%E5%BE%97%E6%9B%B4%E5%BF%AB/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/01__cpu%E7%BC%93%E5%AD%98%E6%80%8E%E6%A0%B7%E5%86%99%E4%BB%A3%E7%A0%81%E8%83%BD%E5%A4%9F%E8%AE%A9cpu%E6%89%A7%E8%A1%8C%E5%BE%97%E6%9B%B4%E5%BF%AB/</guid>
      <description>&lt;p&gt;你好，我是陶辉。&lt;/p&gt;&#xA;&lt;p&gt;这是课程的第一讲，我们先从主机最重要的部件 CPU 开始，聊聊如何通过提升 CPU 缓存的命中率来优化程序的性能。&lt;/p&gt;&#xA;&lt;p&gt;任何代码的执行都依赖 CPU，通常，使用好 CPU 是操作系统内核的工作。然而，当我们编写计算密集型的程序时，CPU 的执行效率就开始变得至关重要。由于 CPU 缓存由更快的 SRAM 构成（内存是由 DRAM 构成的），而且离 CPU 核心更近，如果运算时需要的输入数据是从 CPU 缓存，而不是内存中读取时，运算速度就会快很多。所以，了解 CPU 缓存对性能的影响，便能够更有效地编写我们的代码，优化程序性能。&lt;/p&gt;</description>
    </item>
    <item>
      <title>02__内存池：如何提升内存分配的效率？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/02__%E5%86%85%E5%AD%98%E6%B1%A0%E5%A6%82%E4%BD%95%E6%8F%90%E5%8D%87%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E7%9A%84%E6%95%88%E7%8E%87/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/02__%E5%86%85%E5%AD%98%E6%B1%A0%E5%A6%82%E4%BD%95%E6%8F%90%E5%8D%87%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E7%9A%84%E6%95%88%E7%8E%87/</guid>
      <description>&lt;p&gt;你好，我是陶辉。&lt;/p&gt;&#xA;&lt;p&gt;上一讲我们提到，高频地命中 CPU 缓存可以提升性能。这一讲我们把关注点从 CPU 转移到内存，看看如何提升内存分配的效率。&lt;/p&gt;&#xA;&lt;p&gt;或许有同学会认为，我又不写底层框架，内存分配也依赖虚拟机，并不需要应用开发者了解。如果你也这么认为，我们不妨看看这个例子：在 Linux 系统中，用 Xmx 设置 JVM 的最大堆内存为 8GB，但在近百个并发线程下，观察到 Java 进程占用了 14GB 的内存。为什么会这样呢？&lt;/p&gt;</description>
    </item>
    <item>
      <title>03__索引：如何用哈希表管理亿级对象？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/03__%E7%B4%A2%E5%BC%95%E5%A6%82%E4%BD%95%E7%94%A8%E5%93%88%E5%B8%8C%E8%A1%A8%E7%AE%A1%E7%90%86%E4%BA%BF%E7%BA%A7%E5%AF%B9%E8%B1%A1/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/03__%E7%B4%A2%E5%BC%95%E5%A6%82%E4%BD%95%E7%94%A8%E5%93%88%E5%B8%8C%E8%A1%A8%E7%AE%A1%E7%90%86%E4%BA%BF%E7%BA%A7%E5%AF%B9%E8%B1%A1/</guid>
      <description>&lt;p&gt;你好，我是陶辉。&lt;/p&gt;&#xA;&lt;p&gt;上一讲我们谈到，Ptmalloc2 为子线程预分配了 64MB 内存池，虽然增大了内存消耗，但却加快了分配速度，这就是&lt;strong&gt;以空间换时间&lt;/strong&gt;的思想。&lt;/p&gt;&#xA;&lt;p&gt;在内存有限的单片机上运行嵌入式程序时，我们会压缩数据的空间占用，&lt;strong&gt;以时间换空间&lt;/strong&gt;；但在面向海量用户的分布式服务中，&lt;strong&gt;使用更多的空间建立索引，换取更短的查询时间&lt;/strong&gt;，则是我们管理大数据的常用手段。&lt;/p&gt;</description>
    </item>
    <item>
      <title>04__零拷贝：如何高效地传输文件？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/04__%E9%9B%B6%E6%8B%B7%E8%B4%9D%E5%A6%82%E4%BD%95%E9%AB%98%E6%95%88%E5%9C%B0%E4%BC%A0%E8%BE%93%E6%96%87%E4%BB%B6/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/04__%E9%9B%B6%E6%8B%B7%E8%B4%9D%E5%A6%82%E4%BD%95%E9%AB%98%E6%95%88%E5%9C%B0%E4%BC%A0%E8%BE%93%E6%96%87%E4%BB%B6/</guid>
      <description>&lt;p&gt;你好，我是陶辉。&lt;/p&gt;&#xA;&lt;p&gt;上一讲我们谈到，当索引的大小超过内存时，就会用磁盘存放索引。磁盘的读写速度远慢于内存，所以才针对磁盘设计了减少读写次数的 B 树索引。&lt;/p&gt;</description>
    </item>
    <item>
      <title>05__协程：如何快速地实现高并发服务？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/05__%E5%8D%8F%E7%A8%8B%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E5%9C%B0%E5%AE%9E%E7%8E%B0%E9%AB%98%E5%B9%B6%E5%8F%91%E6%9C%8D%E5%8A%A1/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/05__%E5%8D%8F%E7%A8%8B%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E5%9C%B0%E5%AE%9E%E7%8E%B0%E9%AB%98%E5%B9%B6%E5%8F%91%E6%9C%8D%E5%8A%A1/</guid>
      <description>&lt;p&gt;你好，我是陶辉。&lt;/p&gt;&#xA;&lt;p&gt;上一讲谈到，零拷贝通过减少上下文切换次数，提升了文件传输的性能。事实上高并发服务也是通过降低切换成本实现的，这一讲我们来看看它是如何做到的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>06__锁：如何根据业务场景选择合适的锁？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/06__%E9%94%81%E5%A6%82%E4%BD%95%E6%A0%B9%E6%8D%AE%E4%B8%9A%E5%8A%A1%E5%9C%BA%E6%99%AF%E9%80%89%E6%8B%A9%E5%90%88%E9%80%82%E7%9A%84%E9%94%81/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/06__%E9%94%81%E5%A6%82%E4%BD%95%E6%A0%B9%E6%8D%AE%E4%B8%9A%E5%8A%A1%E5%9C%BA%E6%99%AF%E9%80%89%E6%8B%A9%E5%90%88%E9%80%82%E7%9A%84%E9%94%81/</guid>
      <description>&lt;p&gt;你好，我是陶辉。&lt;/p&gt;&#xA;&lt;p&gt;上一讲我们谈到了实现高并发的不同方案，这一讲我们来谈谈如何根据业务场景选择合适的锁。&lt;/p&gt;&#xA;&lt;p&gt;我们知道，多线程下为了确保数据不会出错，必须加锁后才能访问共享资源。我们最常用的是互斥锁，然而，还有很多种不同的锁，比如自旋锁、读写锁等等，它们分别适用于不同的场景。&lt;/p&gt;</description>
    </item>
    <item>
      <title>07__性能好，效率高的一对多通讯该如何实现？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/07__%E6%80%A7%E8%83%BD%E5%A5%BD%E6%95%88%E7%8E%87%E9%AB%98%E7%9A%84%E4%B8%80%E5%AF%B9%E5%A4%9A%E9%80%9A%E8%AE%AF%E8%AF%A5%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/07__%E6%80%A7%E8%83%BD%E5%A5%BD%E6%95%88%E7%8E%87%E9%AB%98%E7%9A%84%E4%B8%80%E5%AF%B9%E5%A4%9A%E9%80%9A%E8%AE%AF%E8%AF%A5%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0/</guid>
      <description>&lt;p&gt;你好，我是陶辉。从这一讲开始，我们将从单机进入网络层面的性能优化。&lt;/p&gt;&#xA;&lt;p&gt;我们接触过的绝大多数通讯方式，无论是面向连接的 HTTP 协议，还是无连接的 DNS 协议，都是一对一收发消息的。其实，除了一对一，还有一对多的通讯方式，它在网络资源的利用上效率要比一对一高得多。这种一对多的通讯方式，在局域网中有很广泛的应用，常见的 ARP 欺骗、泛洪攻击等，都是通过一对多通讯进行的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>08__事件驱动：C10M是如何实现的？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/08__%E4%BA%8B%E4%BB%B6%E9%A9%B1%E5%8A%A8c10m%E6%98%AF%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E7%9A%84/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/08__%E4%BA%8B%E4%BB%B6%E9%A9%B1%E5%8A%A8c10m%E6%98%AF%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E7%9A%84/</guid>
      <description>&lt;p&gt;你好，我是陶辉。&lt;/p&gt;&#xA;&lt;p&gt;上一讲介绍了广播与组播这种一对多通讯方式，从这一讲开始，我们回到主流的一对一通讯方式。&lt;/p&gt;&#xA;&lt;p&gt;早些年我们谈到高并发，总是会提到 C10K，这是指服务器同时处理 1 万个 TCP 连接。随着服务器性能的提升，近来我们更希望单台服务器的并发能力可以达到 C10M，也就是同时可以处理 1 千万个 TCP 连接。从 C10K 到 C10M，实现技术并没有本质变化，都是用事件驱动和异步开发实现的。[第 5 讲] 介绍过的协程，也是依赖这二者实现高并发的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>09__如何提升TCP三次握手的性能？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/09__%E5%A6%82%E4%BD%95%E6%8F%90%E5%8D%87tcp%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E7%9A%84%E6%80%A7%E8%83%BD/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/09__%E5%A6%82%E4%BD%95%E6%8F%90%E5%8D%87tcp%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E7%9A%84%E6%80%A7%E8%83%BD/</guid>
      <description>&lt;p&gt;你好，我是陶辉。&lt;/p&gt;&#xA;&lt;p&gt;上一讲我们提到 TCP 在三次握手建立连接、四次握手关闭连接时是怎样产生事件的，这两个过程中 TCP 连接经历了复杂的状态变化，既容易导致编程出错，也有很大的优化空间。这一讲我们看看在 Linux 操作系统下，如何优化 TCP 的三次握手流程，提升握手速度。&lt;/p&gt;</description>
    </item>
    <item>
      <title>10__如何提升TCP四次挥手的性能？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/10__%E5%A6%82%E4%BD%95%E6%8F%90%E5%8D%87tcp%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B%E7%9A%84%E6%80%A7%E8%83%BD/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/10__%E5%A6%82%E4%BD%95%E6%8F%90%E5%8D%87tcp%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B%E7%9A%84%E6%80%A7%E8%83%BD/</guid>
      <description>&lt;p&gt;你好，我是陶辉。&lt;/p&gt;&#xA;&lt;p&gt;上一节课，我们介绍了建立连接时的优化方法，这一节课再来看四次挥手关闭连接时，如何优化性能。&lt;/p&gt;&#xA;&lt;p&gt;close 和 shutdown 函数都可以关闭连接，但这两种方式关闭的连接，不只功能上有差异，控制它们的 Linux 参数也不相同。close 函数会让连接变为孤儿连接，shutdown 函数则允许在半关闭的连接上长时间传输数据。TCP 之所以具备这个功能，是因为它是全双工协议，但这也造成四次挥手非常复杂。&lt;/p&gt;</description>
    </item>
    <item>
      <title>11__如何修改TCP缓冲区才能兼顾并发数量与传输速度？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/11__%E5%A6%82%E4%BD%95%E4%BF%AE%E6%94%B9tcp%E7%BC%93%E5%86%B2%E5%8C%BA%E6%89%8D%E8%83%BD%E5%85%BC%E9%A1%BE%E5%B9%B6%E5%8F%91%E6%95%B0%E9%87%8F%E4%B8%8E%E4%BC%A0%E8%BE%93%E9%80%9F%E5%BA%A6/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/11__%E5%A6%82%E4%BD%95%E4%BF%AE%E6%94%B9tcp%E7%BC%93%E5%86%B2%E5%8C%BA%E6%89%8D%E8%83%BD%E5%85%BC%E9%A1%BE%E5%B9%B6%E5%8F%91%E6%95%B0%E9%87%8F%E4%B8%8E%E4%BC%A0%E8%BE%93%E9%80%9F%E5%BA%A6/</guid>
      <description>&lt;p&gt;你好，我是陶辉。&lt;/p&gt;&#xA;&lt;p&gt;我们在[第 8 课] 中讲了如何从 C10K 进一步到 C10M，不过，这也意味着 TCP 占用的内存翻了一千倍，服务器的内存资源会非常紧张。&lt;/p&gt;&#xA;&lt;p&gt;如果你在 Linux 系统中用 free 命令查看内存占用情况，会发现一栏叫做 buff/cache，它是系统内存，似乎与应用进程无关。但每当进程新建一个 TCP 连接，buff/cache 中的内存都会上升 4K 左右。而且，当连接传输数据时，就远不止增加 4K 内存了。这样，几十万并发连接，就在进程内存外又增加了 GB 级别的系统内存消耗。&lt;/p&gt;</description>
    </item>
    <item>
      <title>12__如何调整TCP拥塞控制的性能？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/12__%E5%A6%82%E4%BD%95%E8%B0%83%E6%95%B4tcp%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6%E7%9A%84%E6%80%A7%E8%83%BD/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/12__%E5%A6%82%E4%BD%95%E8%B0%83%E6%95%B4tcp%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6%E7%9A%84%E6%80%A7%E8%83%BD/</guid>
      <description>&lt;p&gt;你好，我是陶辉。&lt;/p&gt;&#xA;&lt;p&gt;上一讲我们谈到接收主机的处理能力不足时，是通过滑动窗口来减缓对方的发送速度。这一讲我们来看看，当网络处理能力不足时又该如何优化 TCP 的性能。&lt;/p&gt;</description>
    </item>
    <item>
      <title>129-系统性能调优必知必会</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/129-%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/129-%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/</guid>
      <description></description>
    </item>
    <item>
      <title>13__实战：单机如何实现管理百万主机的心跳服务？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/13__%E5%AE%9E%E6%88%98%E5%8D%95%E6%9C%BA%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E7%AE%A1%E7%90%86%E7%99%BE%E4%B8%87%E4%B8%BB%E6%9C%BA%E7%9A%84%E5%BF%83%E8%B7%B3%E6%9C%8D%E5%8A%A1/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/13__%E5%AE%9E%E6%88%98%E5%8D%95%E6%9C%BA%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E7%AE%A1%E7%90%86%E7%99%BE%E4%B8%87%E4%B8%BB%E6%9C%BA%E7%9A%84%E5%BF%83%E8%B7%B3%E6%9C%8D%E5%8A%A1/</guid>
      <description>&lt;p&gt;你好，我是陶辉。&lt;/p&gt;&#xA;&lt;p&gt;这一讲我们将结合前 12 讲，以一个可管理百万主机集群的心跳服务作为实战案例，看看所有高性能服务的设计思路。&lt;/p&gt;&#xA;&lt;p&gt;首先解释下什么是心跳服务。集群中的主机如果宕机，那么管理服务必须及时发现，并做相应的容灾处理，比如将宕机主机的业务迁移到新的虚拟机上等等。怎么做到及时发现呢？可以要求每台主机定时上报心跳包，考虑到网络报文的延迟，如果管理服务在几个上报周期内未收到心跳，则认为主机宕机。当新主机加入集群后，心跳服务也可以及时识别并告知管理服务。&lt;/p&gt;</description>
    </item>
    <item>
      <title>14__优化TLS_SSL性能该从何下手？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/14__%E4%BC%98%E5%8C%96tls_ssl%E6%80%A7%E8%83%BD%E8%AF%A5%E4%BB%8E%E4%BD%95%E4%B8%8B%E6%89%8B/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/14__%E4%BC%98%E5%8C%96tls_ssl%E6%80%A7%E8%83%BD%E8%AF%A5%E4%BB%8E%E4%BD%95%E4%B8%8B%E6%89%8B/</guid>
      <description>&lt;p&gt;你好，我是陶辉。&lt;/p&gt;&#xA;&lt;p&gt;从这一讲开始，我们进入应用层协议的处理。&lt;/p&gt;&#xA;&lt;p&gt;信息安全在当下越来越重要，绝大多数站点访问时都使用 https:// 替代了 http://，这就是在用 TLS/SSL 协议（下文简称为 TLS 协议）来保障应用层消息的安全。但另一方面，你会发现很多图片类门户网站，还在使用 http://，这是因为 TLS 协议在对信息加解密的同时，必然会降低性能和用户体验，这些站点在权衡后选择了性能优先。&lt;/p&gt;</description>
    </item>
    <item>
      <title>15__如何提升HTTP_1.1性能？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/15__%E5%A6%82%E4%BD%95%E6%8F%90%E5%8D%87http_1.1%E6%80%A7%E8%83%BD/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/15__%E5%A6%82%E4%BD%95%E6%8F%90%E5%8D%87http_1.1%E6%80%A7%E8%83%BD/</guid>
      <description>&lt;p&gt;你好，我是陶辉。&lt;/p&gt;&#xA;&lt;p&gt;上一讲介绍了为应用层信息安全保驾护航的 TLS/SSL 协议，这一讲我们来看看最常用的应用层协议 HTTP/1.1 该如何优化。&lt;/p&gt;&#xA;&lt;p&gt;由于门槛低、易监控、自表达等特点，HTTP/1.1 在互联网诞生之初就成为最广泛使用的应用层协议。然而它的性能却很差，最为人诟病的是 HTTP 头部的传输占用了大量带宽。由于 HTTP 头部使用 ASCII 编码方式，这造成它往往达到几 KB，而且滥用的 Cookie 头部进一步增大了体积。与此同时，REST 架构的无状态特性还要求每个请求都得重传 HTTP 头部，这就使消息的有效信息比重难以提高。&lt;/p&gt;</description>
    </item>
    <item>
      <title>16__HTTP_2是怎样提升性能的？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/16__http_2%E6%98%AF%E6%80%8E%E6%A0%B7%E6%8F%90%E5%8D%87%E6%80%A7%E8%83%BD%E7%9A%84/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/16__http_2%E6%98%AF%E6%80%8E%E6%A0%B7%E6%8F%90%E5%8D%87%E6%80%A7%E8%83%BD%E7%9A%84/</guid>
      <description>&lt;p&gt;你好，我是陶辉。&lt;/p&gt;&#xA;&lt;p&gt;上一讲我们从多个角度优化 HTTP/1 的性能，但获得的收益都较为有限，而直接将其升级到兼容 HTTP/1 的 HTTP/2 协议，性能会获得非常大的提升。&lt;/p&gt;&#xA;&lt;p&gt;HTTP/2 协议既降低了传输时延也提升了并发性，已经被主流站点广泛使用。多数 HTTP 头部都可以被压缩 90% 以上的体积，这节约了带宽也提升了用户体验，像 Google 的高性能协议 gRPC 也是基于 HTTP/2 协议实现的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>17__Protobuf是如何进一步提高编码效率的？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/17__protobuf%E6%98%AF%E5%A6%82%E4%BD%95%E8%BF%9B%E4%B8%80%E6%AD%A5%E6%8F%90%E9%AB%98%E7%BC%96%E7%A0%81%E6%95%88%E7%8E%87%E7%9A%84/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/17__protobuf%E6%98%AF%E5%A6%82%E4%BD%95%E8%BF%9B%E4%B8%80%E6%AD%A5%E6%8F%90%E9%AB%98%E7%BC%96%E7%A0%81%E6%95%88%E7%8E%87%E7%9A%84/</guid>
      <description>&lt;p&gt;你好，我是陶辉。&lt;/p&gt;&#xA;&lt;p&gt;上一讲介绍的 HTTP/2 协议在编码上拥有非常高的空间利用率，这一讲我们看看，相比其中的 HPACK 编码技术，Protobuf 又是通过哪些新招式进一步提升编码效率的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>18__如何通过gRPC实现高效远程过程调用？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/18__%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87grpc%E5%AE%9E%E7%8E%B0%E9%AB%98%E6%95%88%E8%BF%9C%E7%A8%8B%E8%BF%87%E7%A8%8B%E8%B0%83%E7%94%A8/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/18__%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87grpc%E5%AE%9E%E7%8E%B0%E9%AB%98%E6%95%88%E8%BF%9C%E7%A8%8B%E8%BF%87%E7%A8%8B%E8%B0%83%E7%94%A8/</guid>
      <description>&lt;p&gt;你好，我是陶辉。&lt;/p&gt;&#xA;&lt;p&gt;这一讲我们将以一个实战案例，基于前两讲提到的 HTTP/2 和 ProtoBuf 协议，看看 gRPC 如何将结构化消息编码为网络报文。&lt;/p&gt;&#xA;&lt;p&gt;直接操作网络协议编程，容易让业务开发过程陷入复杂的网络处理细节。RPC 框架以编程语言中的本地函数调用形式，向应用开发者提供网络访问能力，这既封装了消息的编解码，也通过线程模型封装了多路复用，对业务开发很友好。&lt;/p&gt;</description>
    </item>
    <item>
      <title>19__如何通过监控找到性能瓶颈？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/19__%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E7%9B%91%E6%8E%A7%E6%89%BE%E5%88%B0%E6%80%A7%E8%83%BD%E7%93%B6%E9%A2%88/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/19__%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E7%9B%91%E6%8E%A7%E6%89%BE%E5%88%B0%E6%80%A7%E8%83%BD%E7%93%B6%E9%A2%88/</guid>
      <description>&lt;p&gt;你好，我是陶辉。&lt;/p&gt;&#xA;&lt;p&gt;从这一讲开始，我们将进入分布式系统层面，站在更宏观的角度去探讨系统性能的优化。&lt;/p&gt;&#xA;&lt;p&gt;如果优化系统性能时，只是依据自己的经验，对感觉存在性能提升空间的代码，无一例外地做一遍优化，这既是一件事倍功半的事，也很容易遗漏下关键的优化点，无法大幅提升系统的性能。根据帕累托法则（也叫二八定律），&lt;strong&gt;只有优化处于性能瓶颈的那些少量代码，才能用最小的成本获得最大的收益。&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>20__CAP理论：怎样舍弃一致性去换取性能？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/20__cap%E7%90%86%E8%AE%BA%E6%80%8E%E6%A0%B7%E8%88%8D%E5%BC%83%E4%B8%80%E8%87%B4%E6%80%A7%E5%8E%BB%E6%8D%A2%E5%8F%96%E6%80%A7%E8%83%BD/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/20__cap%E7%90%86%E8%AE%BA%E6%80%8E%E6%A0%B7%E8%88%8D%E5%BC%83%E4%B8%80%E8%87%B4%E6%80%A7%E5%8E%BB%E6%8D%A2%E5%8F%96%E6%80%A7%E8%83%BD/</guid>
      <description>&lt;p&gt;你好，我是陶辉。&lt;/p&gt;&#xA;&lt;p&gt;上一讲我们介绍了如何通过监控找到性能瓶颈，从这一讲开始，我们将具体讨论如何通过分布式系统来提升性能。&lt;/p&gt;&#xA;&lt;p&gt;在第一部分课程中，我介绍了多种提升单机处理性能的途径，然而，进程的性能必然受制于一台服务器上各硬件的处理能力上限。如果需要进一步地提升服务性能，那只有整合多台主机组成分布式系统才能办到。&lt;/p&gt;</description>
    </item>
    <item>
      <title>21__AKF立方体：怎样通过可扩展性来提高性能？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/21__akf%E7%AB%8B%E6%96%B9%E4%BD%93%E6%80%8E%E6%A0%B7%E9%80%9A%E8%BF%87%E5%8F%AF%E6%89%A9%E5%B1%95%E6%80%A7%E6%9D%A5%E6%8F%90%E9%AB%98%E6%80%A7%E8%83%BD/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/21__akf%E7%AB%8B%E6%96%B9%E4%BD%93%E6%80%8E%E6%A0%B7%E9%80%9A%E8%BF%87%E5%8F%AF%E6%89%A9%E5%B1%95%E6%80%A7%E6%9D%A5%E6%8F%90%E9%AB%98%E6%80%A7%E8%83%BD/</guid>
      <description>&lt;p&gt;你好，我是陶辉。&lt;/p&gt;&#xA;&lt;p&gt;上一讲我们谈到，调低一致性可以提升有状态服务的性能。这一讲我们扩大范围，结合无状态服务，看看怎样提高分布式系统的整体性能。&lt;/p&gt;&#xA;&lt;p&gt;当你接收到运维系统的短信告警，得知系统性能即将达到瓶颈，或者会议上收到老板兴奋的通知，接下来市场开缰拓土，业务访问量将要上一个大台阶时，一定会马上拿起计算器，算算要加多少台机器，系统才能扛得住新增的流量。&lt;/p&gt;</description>
    </item>
    <item>
      <title>22__NWR算法：如何修改读写模型以提升性能？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/22__nwr%E7%AE%97%E6%B3%95%E5%A6%82%E4%BD%95%E4%BF%AE%E6%94%B9%E8%AF%BB%E5%86%99%E6%A8%A1%E5%9E%8B%E4%BB%A5%E6%8F%90%E5%8D%87%E6%80%A7%E8%83%BD/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/22__nwr%E7%AE%97%E6%B3%95%E5%A6%82%E4%BD%95%E4%BF%AE%E6%94%B9%E8%AF%BB%E5%86%99%E6%A8%A1%E5%9E%8B%E4%BB%A5%E6%8F%90%E5%8D%87%E6%80%A7%E8%83%BD/</guid>
      <description>&lt;p&gt;你好，我是陶辉。&lt;/p&gt;&#xA;&lt;p&gt;前两讲我们介绍数据库的扩展时，写请求仍然在操作中心化的 Master 单点，这在很多业务场景下都是不可接受的。这一讲我将介绍对于无单点的去中心化系统非常有用的 NWR 算法，它可以灵活地平衡一致性与性能。&lt;/p&gt;</description>
    </item>
    <item>
      <title>23__负载均衡：选择Nginx还是OpenResty？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/23__%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E9%80%89%E6%8B%A9nginx%E8%BF%98%E6%98%AFopenresty/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/23__%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E9%80%89%E6%8B%A9nginx%E8%BF%98%E6%98%AFopenresty/</guid>
      <description>&lt;p&gt;你好，我是陶辉。&lt;/p&gt;&#xA;&lt;p&gt;在[第 21 讲] 介绍 AKF 立方体时，我们讲过只有在下游添加负载均衡后，才能沿着 X、Y、Z 三个轴提升性能。这一讲，我们将介绍最流行的负载均衡 Nginx、OpenResty，看看它们是如何支持 AKF 扩展体系的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>24__一致性哈希：如何高效地均衡负载？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/24__%E4%B8%80%E8%87%B4%E6%80%A7%E5%93%88%E5%B8%8C%E5%A6%82%E4%BD%95%E9%AB%98%E6%95%88%E5%9C%B0%E5%9D%87%E8%A1%A1%E8%B4%9F%E8%BD%BD/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/24__%E4%B8%80%E8%87%B4%E6%80%A7%E5%93%88%E5%B8%8C%E5%A6%82%E4%BD%95%E9%AB%98%E6%95%88%E5%9C%B0%E5%9D%87%E8%A1%A1%E8%B4%9F%E8%BD%BD/</guid>
      <description>&lt;p&gt;你好，我是陶辉。&lt;/p&gt;&#xA;&lt;p&gt;还记得我们在[第 22 讲] 谈到的 Cassandra 数据库吗？它将服务器节点组成一个环来存储数据，所使用的就是一致性哈希算法。那这一讲，我们就来看看一致性哈希算法是怎样工作的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>25__过期缓存：如何防止缓存被流量打穿？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/25__%E8%BF%87%E6%9C%9F%E7%BC%93%E5%AD%98%E5%A6%82%E4%BD%95%E9%98%B2%E6%AD%A2%E7%BC%93%E5%AD%98%E8%A2%AB%E6%B5%81%E9%87%8F%E6%89%93%E7%A9%BF/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/25__%E8%BF%87%E6%9C%9F%E7%BC%93%E5%AD%98%E5%A6%82%E4%BD%95%E9%98%B2%E6%AD%A2%E7%BC%93%E5%AD%98%E8%A2%AB%E6%B5%81%E9%87%8F%E6%89%93%E7%A9%BF/</guid>
      <description>&lt;p&gt;你好，我是陶辉。&lt;/p&gt;&#xA;&lt;p&gt;这一讲我们将对一直零散介绍的缓存做个全面的总结，同时讨论如何解决缓存被流量打穿的场景。&lt;/p&gt;&#xA;&lt;p&gt;在分布式系统中，缓存无处不在。比如，浏览器会缓存用户 Cookie，CDN 会缓存图片，负载均衡会缓存 TLS 的握手信息，Redis 会缓存用户的 session，MySQL 会缓存 select 查询出的行数据，HTTP/2 会用动态表缓存传输过的 HTTP 头部，TCP Socket Buffer 会缓存 TCP 报文，Page Cache 会缓存磁盘 IO，CPU 会缓存主存上的数据，等等。&lt;/p&gt;</description>
    </item>
    <item>
      <title>26__应用层多播：如何快速地分发内容？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/26__%E5%BA%94%E7%94%A8%E5%B1%82%E5%A4%9A%E6%92%AD%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E5%9C%B0%E5%88%86%E5%8F%91%E5%86%85%E5%AE%B9/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/26__%E5%BA%94%E7%94%A8%E5%B1%82%E5%A4%9A%E6%92%AD%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E5%9C%B0%E5%88%86%E5%8F%91%E5%86%85%E5%AE%B9/</guid>
      <description>&lt;p&gt;你好，我是陶辉。&lt;/p&gt;&#xA;&lt;p&gt;[第 7 讲] 我们曾介绍了网络层的 IP 协议是如何支持多播的，这节课我们再来从应用层看看如何实现多播功能。&lt;/p&gt;&#xA;&lt;p&gt;当你的分布式集群只有十多个节点时，每次发布版本时，尽可以从发布服务器，将新版本的安装包通过 ftp、scp、wget 等工具分发到各个节点中。可是，一旦集群规模达到成千上万个节点时，再这么做就会带来很大的问题，文件分发的时长高达几个小时，甚至会打挂文件源终止分发流程。在微服务环境中这点尤为明显，毕竟每个 Docker 镜象的体积动辄就在数百兆字节以上。&lt;/p&gt;</description>
    </item>
    <item>
      <title>27__消息队列：如何基于异步消息提升性能？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/27__%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E5%A6%82%E4%BD%95%E5%9F%BA%E4%BA%8E%E5%BC%82%E6%AD%A5%E6%B6%88%E6%81%AF%E6%8F%90%E5%8D%87%E6%80%A7%E8%83%BD/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/27__%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E5%A6%82%E4%BD%95%E5%9F%BA%E4%BA%8E%E5%BC%82%E6%AD%A5%E6%B6%88%E6%81%AF%E6%8F%90%E5%8D%87%E6%80%A7%E8%83%BD/</guid>
      <description>&lt;p&gt;你好，我是陶辉。&lt;/p&gt;&#xA;&lt;p&gt;在前 26 讲中我们介绍了许多异步实现机制，这节课我们来看看如何通过消息队列提升分布式系统的性能。&lt;/p&gt;&#xA;&lt;p&gt;异步通讯是最常用的性能提升方式，比如 gRPC 提供的异步 API，或者基于 write-back 模式向缓存写入数据时，系统性能都可以提高。然而，对于复杂的大规模分布式系统，这些分散、孤立的异步实现机制，无法解决以下问题：&lt;/p&gt;</description>
    </item>
    <item>
      <title>28__MapReduce：如何通过集群实现离线计算？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/28__mapreduce%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E9%9B%86%E7%BE%A4%E5%AE%9E%E7%8E%B0%E7%A6%BB%E7%BA%BF%E8%AE%A1%E7%AE%97/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/28__mapreduce%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E9%9B%86%E7%BE%A4%E5%AE%9E%E7%8E%B0%E7%A6%BB%E7%BA%BF%E8%AE%A1%E7%AE%97/</guid>
      <description>&lt;p&gt;你好，我是陶辉。&lt;/p&gt;&#xA;&lt;p&gt;接下来的 2 节课我将介绍如何通过分布式集群优化计算任务。这一讲我们首先来看对于有边界静态数据的离线计算，下一讲再来看对无边界数据流的实时计算。&lt;/p&gt;</description>
    </item>
    <item>
      <title>29__流式计算：如何通过集群实现实时计算？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/29__%E6%B5%81%E5%BC%8F%E8%AE%A1%E7%AE%97%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E9%9B%86%E7%BE%A4%E5%AE%9E%E7%8E%B0%E5%AE%9E%E6%97%B6%E8%AE%A1%E7%AE%97/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/29__%E6%B5%81%E5%BC%8F%E8%AE%A1%E7%AE%97%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E9%9B%86%E7%BE%A4%E5%AE%9E%E7%8E%B0%E5%AE%9E%E6%97%B6%E8%AE%A1%E7%AE%97/</guid>
      <description>&lt;p&gt;你好，我是陶辉。&lt;/p&gt;&#xA;&lt;p&gt;上节课我们介绍了在有边界的存量数据上进行的 MapReduce 离线计算，这节课我们来看看对于无边界数据，怎样实时地完成流式计算。&lt;/p&gt;&#xA;&lt;p&gt;对于不再变化的存量数据，可以通过分而治之的 MapReduce 技术将数据划分到多台主机上并行计算，由于待处理的数据量很大，我们只能获得分钟级以上的时延。当面对持续实时产生动态数据的场景时，业务上通常需要在秒级时延中及时地拿到运算结果。&lt;/p&gt;</description>
    </item>
    <item>
      <title>30__如何权衡关系数据库与NoSQL数据库？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/30__%E5%A6%82%E4%BD%95%E6%9D%83%E8%A1%A1%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%8Enosql%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/30__%E5%A6%82%E4%BD%95%E6%9D%83%E8%A1%A1%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%8Enosql%E6%95%B0%E6%8D%AE%E5%BA%93/</guid>
      <description>&lt;p&gt;你好，我是陶辉。&lt;/p&gt;&#xA;&lt;p&gt;到了第 4 部分课程的最后一讲，我们来结合前面介绍过的知识点，看看面对 NoSQL、关系数据库时该如何选择。&lt;/p&gt;&#xA;&lt;p&gt;在分布式系统中，我们会同时使用多种数据库。比如，你可能会在 Redis 中存放用户 Session 会话，将业务数据拆解为由行、列构成的二维表存储在 MySQL 中，将需要全文检索的数据放在 ElasticSearch 中，将知识图谱放在 Neo4j 图数据库中，将数据量、访问量很大的数据放在 Cassandra 列式数据库或者 MongoDB 文档型数据库中，等等。&lt;/p&gt;</description>
    </item>
    <item>
      <title>大咖助场__李玥：高并发场景下如何优化微服务的性能_</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/%E5%A4%A7%E5%92%96%E5%8A%A9%E5%9C%BA__%E6%9D%8E%E7%8E%A5%E9%AB%98%E5%B9%B6%E5%8F%91%E5%9C%BA%E6%99%AF%E4%B8%8B%E5%A6%82%E4%BD%95%E4%BC%98%E5%8C%96%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E6%80%A7%E8%83%BD_/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/%E5%A4%A7%E5%92%96%E5%8A%A9%E5%9C%BA__%E6%9D%8E%E7%8E%A5%E9%AB%98%E5%B9%B6%E5%8F%91%E5%9C%BA%E6%99%AF%E4%B8%8B%E5%A6%82%E4%BD%95%E4%BC%98%E5%8C%96%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E6%80%A7%E8%83%BD_/</guid>
      <description>&lt;p&gt;你好，我是李玥。相信这里有部分同学对我是比较熟悉的，我在极客时间开了两门课，分别是《消息队列高手课》和《后端存储实战课》。今天很荣幸受邀来到陶辉老师的专栏做一期分享。&lt;/p&gt;</description>
    </item>
    <item>
      <title>大咖助场｜傅健：那些年，影响我们达到性能巅峰的常见绊脚石（上）</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/%E5%A4%A7%E5%92%96%E5%8A%A9%E5%9C%BA%E5%82%85%E5%81%A5%E9%82%A3%E4%BA%9B%E5%B9%B4%E5%BD%B1%E5%93%8D%E6%88%91%E4%BB%AC%E8%BE%BE%E5%88%B0%E6%80%A7%E8%83%BD%E5%B7%85%E5%B3%B0%E7%9A%84%E5%B8%B8%E8%A7%81%E7%BB%8A%E8%84%9A%E7%9F%B3%E4%B8%8A/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/%E5%A4%A7%E5%92%96%E5%8A%A9%E5%9C%BA%E5%82%85%E5%81%A5%E9%82%A3%E4%BA%9B%E5%B9%B4%E5%BD%B1%E5%93%8D%E6%88%91%E4%BB%AC%E8%BE%BE%E5%88%B0%E6%80%A7%E8%83%BD%E5%B7%85%E5%B3%B0%E7%9A%84%E5%B8%B8%E8%A7%81%E7%BB%8A%E8%84%9A%E7%9F%B3%E4%B8%8A/</guid>
      <description>&lt;p&gt;你好，我是傅健。这里有部分同学可能认识我，我在极客时间开设了一门视频课《Netty 源码剖析与实战》，很荣幸受邀来到陶辉老师的专栏做一些分享。今天我会围绕这门课程的主题——系统性能调优，结合我自身的工作经历补充一些内容，期待能给你一些新思路。&lt;/p&gt;</description>
    </item>
    <item>
      <title>大咖助场｜傅健：那些年，影响我们达到性能巅峰的常见绊脚石（下）</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/%E5%A4%A7%E5%92%96%E5%8A%A9%E5%9C%BA%E5%82%85%E5%81%A5%E9%82%A3%E4%BA%9B%E5%B9%B4%E5%BD%B1%E5%93%8D%E6%88%91%E4%BB%AC%E8%BE%BE%E5%88%B0%E6%80%A7%E8%83%BD%E5%B7%85%E5%B3%B0%E7%9A%84%E5%B8%B8%E8%A7%81%E7%BB%8A%E8%84%9A%E7%9F%B3%E4%B8%8B/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/%E5%A4%A7%E5%92%96%E5%8A%A9%E5%9C%BA%E5%82%85%E5%81%A5%E9%82%A3%E4%BA%9B%E5%B9%B4%E5%BD%B1%E5%93%8D%E6%88%91%E4%BB%AC%E8%BE%BE%E5%88%B0%E6%80%A7%E8%83%BD%E5%B7%85%E5%B3%B0%E7%9A%84%E5%B8%B8%E8%A7%81%E7%BB%8A%E8%84%9A%E7%9F%B3%E4%B8%8B/</guid>
      <description>&lt;p&gt;你好，我是傅健，又见面了。上一期分享我们总结了 3 个场景化的问题以及应对策略，这一期我们就接着“系统性能优化”这个主题继续总结。&lt;/p&gt;&#xA;&lt;h2 id=&#34;场景-1资源争用&#34;&gt;场景 1：资源争用&lt;/h2&gt;&#xA;&lt;h3 id=&#34;案例&#34;&gt;案例&lt;/h3&gt;&#xA;&lt;p&gt;一段时间，我们总是监控到一些性能“掉队”的请求，例如平时我们访问 Cassandra 数据库都在 10ms 以内，但是偶尔能达到 3s，你可以参考下面这个度量数据：&lt;/p&gt;</description>
    </item>
    <item>
      <title>大咖助场｜庄振运：与程序员相关的SSD性能知识</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/%E5%A4%A7%E5%92%96%E5%8A%A9%E5%9C%BA%E5%BA%84%E6%8C%AF%E8%BF%90%E4%B8%8E%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9B%B8%E5%85%B3%E7%9A%84ssd%E6%80%A7%E8%83%BD%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/%E5%A4%A7%E5%92%96%E5%8A%A9%E5%9C%BA%E5%BA%84%E6%8C%AF%E8%BF%90%E4%B8%8E%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9B%B8%E5%85%B3%E7%9A%84ssd%E6%80%A7%E8%83%BD%E7%9F%A5%E8%AF%86/</guid>
      <description>&lt;p&gt;你好，我是庄振运。我是《性能工程高手课》的专栏作者，很荣幸受邀来到陶辉老师的专栏做一期分享。今天我们来讲一点 SSD 相关的性能知识。SSD（Solid State Drive）是硬盘的一种，有时候也叫 Flash 或者固态硬盘。&lt;/p&gt;</description>
    </item>
    <item>
      <title>加餐1｜特别福利：陶辉视频课精选</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/%E5%8A%A0%E9%A4%901%E7%89%B9%E5%88%AB%E7%A6%8F%E5%88%A9%E9%99%B6%E8%BE%89%E8%A7%86%E9%A2%91%E8%AF%BE%E7%B2%BE%E9%80%89/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/%E5%8A%A0%E9%A4%901%E7%89%B9%E5%88%AB%E7%A6%8F%E5%88%A9%E9%99%B6%E8%BE%89%E8%A7%86%E9%A2%91%E8%AF%BE%E7%B2%BE%E9%80%89/</guid>
      <description>&lt;p&gt;你好，我是陶辉。&lt;/p&gt;&#xA;&lt;p&gt;不知道你的期中考试成绩如何呢？是否发现了一些新的问题？成绩好的同学请继续努力了，咱们还有一半的课程未学，希望你能一如既往地跟着我深挖系统性能，这门课的内容设计是由浅入深的，第三、四模块会重点往集群方向转了，内容相对会更加烧脑。成绩略差的同学也不要气馁，就像我上节课说的，问题驱动是一种很好的学习方式，查漏补缺才是这场期中考试的目的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>加餐2_｜答疑精选：这些问题你都清楚吗？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/%E5%8A%A0%E9%A4%902_%E7%AD%94%E7%96%91%E7%B2%BE%E9%80%89%E8%BF%99%E4%BA%9B%E9%97%AE%E9%A2%98%E4%BD%A0%E9%83%BD%E6%B8%85%E6%A5%9A%E5%90%97/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/%E5%8A%A0%E9%A4%902_%E7%AD%94%E7%96%91%E7%B2%BE%E9%80%89%E8%BF%99%E4%BA%9B%E9%97%AE%E9%A2%98%E4%BD%A0%E9%83%BD%E6%B8%85%E6%A5%9A%E5%90%97/</guid>
      <description>&lt;p&gt;你好，我是陶辉。今天是期中周的第 2 篇加餐，按照约定，这节课我从 1～15 课的留言区精选出了 15 个问题，这里一部分是与内容强相关的，还有一部分是属于拓展型的问题，选择标准就是是否存在增量信息以及问题价值，希望你能从别人的疑问中进行一次自检，引发更多的思考。&lt;/p&gt;</description>
    </item>
    <item>
      <title>加餐3｜百万并发下Nginx的优化之道</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/%E5%8A%A0%E9%A4%903%E7%99%BE%E4%B8%87%E5%B9%B6%E5%8F%91%E4%B8%8Bnginx%E7%9A%84%E4%BC%98%E5%8C%96%E4%B9%8B%E9%81%93/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/%E5%8A%A0%E9%A4%903%E7%99%BE%E4%B8%87%E5%B9%B6%E5%8F%91%E4%B8%8Bnginx%E7%9A%84%E4%BC%98%E5%8C%96%E4%B9%8B%E9%81%93/</guid>
      <description>&lt;p&gt;你好，我是专栏编辑冬青。今天的课程有点特别，作为一期加餐，我为你带来了陶辉老师在 GOPS 2018 · 上海站的分享，以文字讲解 + PPT 的形式向你呈现。今天的内容主要集中在 Nginx 的性能方面，希望能给你带来一些系统化的思考，帮助你更有效地去做 Nginx。&lt;/p&gt;</description>
    </item>
    <item>
      <title>加餐4__如何理解分布式系统？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/%E5%8A%A0%E9%A4%904__%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/%E5%8A%A0%E9%A4%904__%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F/</guid>
      <description>&lt;p&gt;你好，我是陶辉。课程到现在也已经接近尾声，我看到有的同学已经开始在掉队了。所以今天这讲，我准备来回答大家的一些高频问题。&lt;/p&gt;&#xA;&lt;p&gt;咱们目前正在学习的这一模块叫“分布式系统优化”，我给你讲了监控、CAP、负载均衡、一致性哈希，说实话，这些知识都不简单，你如果觉得有点难，那也别气馁，因为它确实得多琢磨，我自己一开始学习的时候也是这样。&lt;/p&gt;</description>
    </item>
    <item>
      <title>加餐5__如何理解分布式系统？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/%E5%8A%A0%E9%A4%905__%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/%E5%8A%A0%E9%A4%905__%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F/</guid>
      <description>&lt;p&gt;你好，我是陶辉。课程到现在也已经接近尾声，我看到有的同学已经开始在掉队了。所以今天这讲，我准备来回答大家的一些高频问题。&lt;/p&gt;&#xA;&lt;p&gt;咱们目前正在学习的这一模块叫“分布式系统优化”，我给你讲了监控、CAP、负载均衡、一致性哈希，说实话，这些知识都不简单，你如果觉得有点难，那也别气馁，因为它确实得多琢磨，我自己一开始学习的时候也是这样。&lt;/p&gt;</description>
    </item>
    <item>
      <title>加餐6｜分布式系统的本质是什么？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/%E5%8A%A0%E9%A4%906%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%9C%AC%E8%B4%A8%E6%98%AF%E4%BB%80%E4%B9%88/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/%E5%8A%A0%E9%A4%906%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%9C%AC%E8%B4%A8%E6%98%AF%E4%BB%80%E4%B9%88/</guid>
      <description>&lt;p&gt;你好，我是编辑冬青。上一期加餐我们分享了张帆老师的一篇文章，从总体上聊了聊分布式系统，那作为系列分享，这期加餐我还为你带来了张帆老师的另一篇文章，进一步聊聊分布式系统的本质。这里交付给你，期待能给你带来更多的收获！&lt;/p&gt;</description>
    </item>
    <item>
      <title>结束语__从业_IT_20年后，我将最看重什么？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/%E7%BB%93%E6%9D%9F%E8%AF%AD__%E4%BB%8E%E4%B8%9A_it_20%E5%B9%B4%E5%90%8E%E6%88%91%E5%B0%86%E6%9C%80%E7%9C%8B%E9%87%8D%E4%BB%80%E4%B9%88/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/%E7%BB%93%E6%9D%9F%E8%AF%AD__%E4%BB%8E%E4%B8%9A_it_20%E5%B9%B4%E5%90%8E%E6%88%91%E5%B0%86%E6%9C%80%E7%9C%8B%E9%87%8D%E4%BB%80%E4%B9%88/</guid>
      <description>&lt;p&gt;你好，我是陶辉。&lt;/p&gt;&#xA;&lt;p&gt;经过 3 个多月的更新，咱们这门课今天就正式结课了！很感谢你的一路相伴，我有收获很多的分享和故事，这份信任弥足珍贵。&lt;/p&gt;&#xA;&lt;p&gt;走到今天，我入行已经有 20 年了，那作为结束语，最后我特别想和你聊聊我的一些心得体会，就说说我最看重的两大能力吧，希望能给你的未来发展带来一些正反馈！&lt;/p&gt;</description>
    </item>
    <item>
      <title>开篇词__万变不离其宗，性能优化也有章可循</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/%E5%BC%80%E7%AF%87%E8%AF%8D__%E4%B8%87%E5%8F%98%E4%B8%8D%E7%A6%BB%E5%85%B6%E5%AE%97%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B9%9F%E6%9C%89%E7%AB%A0%E5%8F%AF%E5%BE%AA/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/%E5%BC%80%E7%AF%87%E8%AF%8D__%E4%B8%87%E5%8F%98%E4%B8%8D%E7%A6%BB%E5%85%B6%E5%AE%97%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B9%9F%E6%9C%89%E7%AB%A0%E5%8F%AF%E5%BE%AA/</guid>
      <description>&lt;p&gt;你好，我是陶辉。欢迎你和我一起学习“系统性能优化”。&lt;/p&gt;&#xA;&lt;p&gt;从 2004 年毕业到现在，无论我在华为、思科、腾讯、阿里巴巴等等哪家公司，我的工作总是与“性能”相伴，从底层、应用层到前端，我一直都很关心系统如何能够服务更多的用户，提供更快的体验。换句话说啊，&lt;strong&gt;性能优化最根本的目的，还是要跟上业务的发展脚步。&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>期中考试｜行至半程，你的收获如何呢？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/%E6%9C%9F%E4%B8%AD%E8%80%83%E8%AF%95%E8%A1%8C%E8%87%B3%E5%8D%8A%E7%A8%8B%E4%BD%A0%E7%9A%84%E6%94%B6%E8%8E%B7%E5%A6%82%E4%BD%95%E5%91%A2/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/%E6%9C%9F%E4%B8%AD%E8%80%83%E8%AF%95%E8%A1%8C%E8%87%B3%E5%8D%8A%E7%A8%8B%E4%BD%A0%E7%9A%84%E6%94%B6%E8%8E%B7%E5%A6%82%E4%BD%95%E5%91%A2/</guid>
      <description>&lt;p&gt;你好，我是陶辉。&lt;/p&gt;&#xA;&lt;p&gt;时间过得真快，从 4 月 27 日课程上线，转眼已经一月有余了，不知道你的收获如何呢？在这期间，我收到了很多同学的反馈，很感谢大家的认可，也非常开心能与你一起交流技术。&lt;/p&gt;</description>
    </item>
    <item>
      <title>特别放送__大厂面试到底在考些什么？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/%E7%89%B9%E5%88%AB%E6%94%BE%E9%80%81__%E5%A4%A7%E5%8E%82%E9%9D%A2%E8%AF%95%E5%88%B0%E5%BA%95%E5%9C%A8%E8%80%83%E4%BA%9B%E4%BB%80%E4%B9%88/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/%E7%89%B9%E5%88%AB%E6%94%BE%E9%80%81__%E5%A4%A7%E5%8E%82%E9%9D%A2%E8%AF%95%E5%88%B0%E5%BA%95%E5%9C%A8%E8%80%83%E4%BA%9B%E4%BB%80%E4%B9%88/</guid>
      <description>&lt;p&gt;你好，我是陶辉。这节课我们换换脑子，聊一个相对轻松点的话题——大厂面试。&lt;/p&gt;&#xA;&lt;p&gt;2004 年我毕业于西安交通大学计算机科学与技术专业，此后 16 年来既在华为、腾讯、思科、阿里巴巴这样的大厂工作过，也在两家几十人的创业公司工作过，在这种对比下，我对大厂面试的考核点很有心得体会。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
