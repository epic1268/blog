<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>WebAssembly入门课 on Docs</title>
    <link>https://politcloud.org/tags/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/</link>
    <description>Recent content in WebAssembly入门课 on Docs</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 10 Jan 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://politcloud.org/tags/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>01__基础篇：学习此课程你需要了解哪些基础知识？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/01__%E5%9F%BA%E7%A1%80%E7%AF%87%E5%AD%A6%E4%B9%A0%E6%AD%A4%E8%AF%BE%E7%A8%8B%E4%BD%A0%E9%9C%80%E8%A6%81%E4%BA%86%E8%A7%A3%E5%93%AA%E4%BA%9B%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/01__%E5%9F%BA%E7%A1%80%E7%AF%87%E5%AD%A6%E4%B9%A0%E6%AD%A4%E8%AF%BE%E7%A8%8B%E4%BD%A0%E9%9C%80%E8%A6%81%E4%BA%86%E8%A7%A3%E5%93%AA%E4%BA%9B%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
      <description>&lt;p&gt;你好，我是于航。&lt;/p&gt;&#xA;&lt;p&gt;在我们正式进入到 WebAssembly 的学习之前，为了帮助你更好地理解课程内容，我为你准备了一节基础课。&lt;/p&gt;&#xA;&lt;p&gt;在这一节基础课中，我将与编程语言及计算机基础相关的一些概念，按照其各自所属的领域进行了分类，供你进行本课程的预习与巩固。&lt;/p&gt;</description>
    </item>
    <item>
      <title>02__历史篇：为什么会有_WebAssembly_这样一门技术？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/02__%E5%8E%86%E5%8F%B2%E7%AF%87%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E6%9C%89_webassembly_%E8%BF%99%E6%A0%B7%E4%B8%80%E9%97%A8%E6%8A%80%E6%9C%AF/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/02__%E5%8E%86%E5%8F%B2%E7%AF%87%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E6%9C%89_webassembly_%E8%BF%99%E6%A0%B7%E4%B8%80%E9%97%A8%E6%8A%80%E6%9C%AF/</guid>
      <description>&lt;p&gt;你好，我是于航。&lt;/p&gt;&#xA;&lt;p&gt;在开始真正学习 Wasm 这门技术之前，我想先来问你一个问题：你有没有思考过，在 Web 技术的历史发展长河中，为什么会出现 Wasm 这样一门技术？现有的这些 Web 技术，又存在着哪些无法解决的问题？&lt;/p&gt;</description>
    </item>
    <item>
      <title>03__WebAssembly_是一门新的编程语言吗？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/03__webassembly_%E6%98%AF%E4%B8%80%E9%97%A8%E6%96%B0%E7%9A%84%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%90%97/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/03__webassembly_%E6%98%AF%E4%B8%80%E9%97%A8%E6%96%B0%E7%9A%84%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%90%97/</guid>
      <description>&lt;p&gt;你好，我是于航。&lt;/p&gt;&#xA;&lt;p&gt;“WebAssembly（缩写为 Wasm）是一种基于堆栈式虚拟机的二进制指令集。Wasm 被设计成为一种编程语言的可移植编译目标，并且可以通过将其部署在 Web 平台上，以便为客户端及服务端应用程序提供服务”。这是 Wasm 官网给出的一段，对“Wasm 是什么？”这个问题的解答。&lt;/p&gt;</description>
    </item>
    <item>
      <title>04__WebAssembly_模块的基本组成结构到底有多简单？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/04__webassembly_%E6%A8%A1%E5%9D%97%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%BB%84%E6%88%90%E7%BB%93%E6%9E%84%E5%88%B0%E5%BA%95%E6%9C%89%E5%A4%9A%E7%AE%80%E5%8D%95/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/04__webassembly_%E6%A8%A1%E5%9D%97%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%BB%84%E6%88%90%E7%BB%93%E6%9E%84%E5%88%B0%E5%BA%95%E6%9C%89%E5%A4%9A%E7%AE%80%E5%8D%95/</guid>
      <description>&lt;p&gt;你好，我是于航。今天我来和你聊一聊 Wasm 模块的基本组成结构与字节码分析。&lt;/p&gt;&#xA;&lt;p&gt;在之前的课程中，我们介绍了 Wasm 其实是一种基于“堆栈机模型”设计的 V-ISA 指令集。在这节课中，我们将深入 Wasm 模块的字节码结构，探究它在二进制层面的基本布局，以及内部各个结构之间的协作方式。&lt;/p&gt;</description>
    </item>
    <item>
      <title>05__二进制编码：WebAssembly_微观世界的基本数据规则是什么？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/05__%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%BC%96%E7%A0%81webassembly_%E5%BE%AE%E8%A7%82%E4%B8%96%E7%95%8C%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E8%A7%84%E5%88%99%E6%98%AF%E4%BB%80%E4%B9%88/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/05__%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%BC%96%E7%A0%81webassembly_%E5%BE%AE%E8%A7%82%E4%B8%96%E7%95%8C%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E8%A7%84%E5%88%99%E6%98%AF%E4%BB%80%E4%B9%88/</guid>
      <description>&lt;p&gt;你好，我是于航。&lt;/p&gt;&#xA;&lt;p&gt;在上节课的最后，我举了一个简单的例子，来帮助你理解了 Wasm 二进制模块内部字节码的基本结构。在这短短的几十个十六进制数字中，我们看到了组成 Wasm 模块所不可或缺的“魔数”与“版本号”编码，以及组成了各个 Section 结构的专有编码。&lt;/p&gt;</description>
    </item>
    <item>
      <title>06__WAT：如何让一个_WebAssembly_二进制模块的内容易于解读？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/06__wat%E5%A6%82%E4%BD%95%E8%AE%A9%E4%B8%80%E4%B8%AA_webassembly_%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%A8%A1%E5%9D%97%E7%9A%84%E5%86%85%E5%AE%B9%E6%98%93%E4%BA%8E%E8%A7%A3%E8%AF%BB/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/06__wat%E5%A6%82%E4%BD%95%E8%AE%A9%E4%B8%80%E4%B8%AA_webassembly_%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%A8%A1%E5%9D%97%E7%9A%84%E5%86%85%E5%AE%B9%E6%98%93%E4%BA%8E%E8%A7%A3%E8%AF%BB/</guid>
      <description>&lt;p&gt;你好，我是于航。&lt;/p&gt;&#xA;&lt;p&gt;在前面的两节课中，我们分别讲解了 Wasm 模块在二进制层面的基本组成结构与数据编码方式。在 04 的结尾，我们还通过一个简单的例子，逐个字节地分析了定义在 C/C++ 源代码中的函数，在被编译到 Wasm 之后所对应的字节码组成结构。&lt;/p&gt;</description>
    </item>
    <item>
      <title>07__WASI：你听说过_WebAssembly_操作系统接口吗？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/07__wasi%E4%BD%A0%E5%90%AC%E8%AF%B4%E8%BF%87_webassembly_%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%8E%A5%E5%8F%A3%E5%90%97/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/07__wasi%E4%BD%A0%E5%90%AC%E8%AF%B4%E8%BF%87_webassembly_%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%8E%A5%E5%8F%A3%E5%90%97/</guid>
      <description>&lt;p&gt;你好，我是于航。&lt;/p&gt;&#xA;&lt;p&gt;相信你在刚刚接触到 WebAssembly 这门技术的时候一定有所发现，WebAssembly 这个单词实际上是由两部分组成，也就是“Web”和“Assembly”。&lt;/p&gt;</description>
    </item>
    <item>
      <title>08__API：在_WebAssembly_MVP_标准下你能做到哪些事？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/08__api%E5%9C%A8_webassembly_mvp_%E6%A0%87%E5%87%86%E4%B8%8B%E4%BD%A0%E8%83%BD%E5%81%9A%E5%88%B0%E5%93%AA%E4%BA%9B%E4%BA%8B/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/08__api%E5%9C%A8_webassembly_mvp_%E6%A0%87%E5%87%86%E4%B8%8B%E4%BD%A0%E8%83%BD%E5%81%9A%E5%88%B0%E5%93%AA%E4%BA%9B%E4%BA%8B/</guid>
      <description>&lt;p&gt;你好，我是于航。&lt;/p&gt;&#xA;&lt;p&gt;在目前与 Wasm 相关的一系列标准中，我们可以将这些标准主要分为两个部分：“Wasm 核心标准（Core Interfaces）”以及“嵌入接口标准（Embedding interfaces）”。&lt;/p&gt;</description>
    </item>
    <item>
      <title>09__WebAssembly_能够为_Web_前端框架赋能吗？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/09__webassembly_%E8%83%BD%E5%A4%9F%E4%B8%BA_web_%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6%E8%B5%8B%E8%83%BD%E5%90%97/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/09__webassembly_%E8%83%BD%E5%A4%9F%E4%B8%BA_web_%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6%E8%B5%8B%E8%83%BD%E5%90%97/</guid>
      <description>&lt;p&gt;你好，我是于航。&lt;/p&gt;&#xA;&lt;p&gt;相信现在你已经知道，“WebAssembly”是由“Web”与“Assembly”两个单词组成的。前面的“Web”代指 Web 平台；后面的“Assembly”在我们所熟悉的编程语言体系中，可以理解为“汇编”。&lt;/p&gt;</description>
    </item>
    <item>
      <title>10__有哪些已经投入生产的_WebAssembly_真实案例？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/10__%E6%9C%89%E5%93%AA%E4%BA%9B%E5%B7%B2%E7%BB%8F%E6%8A%95%E5%85%A5%E7%94%9F%E4%BA%A7%E7%9A%84_webassembly_%E7%9C%9F%E5%AE%9E%E6%A1%88%E4%BE%8B/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/10__%E6%9C%89%E5%93%AA%E4%BA%9B%E5%B7%B2%E7%BB%8F%E6%8A%95%E5%85%A5%E7%94%9F%E4%BA%A7%E7%9A%84_webassembly_%E7%9C%9F%E5%AE%9E%E6%A1%88%E4%BE%8B/</guid>
      <description>&lt;p&gt;你好，我是于航。&lt;/p&gt;&#xA;&lt;p&gt;本节课，我们将不再“拘泥”于 Wasm 的实现细节，而是要从技术标准走向生产实践。作为应用篇中的第二节课，我们将一起来看看从 2017 年 Wasm MVP 标准的确定，直到如今 WASI 出现，使得 Wasm 走出 Web 的这几年时间里，现实世界中有哪些已经投入生产的 Wasm 真实案例？而这些案例又是怎样利用 Wasm，解决了哪方面实际问题的呢？（这节课里介绍的几个案例，均由我总结于网络上相关公司发布的文章或视频分享。）&lt;/p&gt;</description>
    </item>
    <item>
      <title>11__WebAssembly_在物联网、多媒体与云技术方面有哪些创新实践？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/11__webassembly_%E5%9C%A8%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%9A%E5%AA%92%E4%BD%93%E4%B8%8E%E4%BA%91%E6%8A%80%E6%9C%AF%E6%96%B9%E9%9D%A2%E6%9C%89%E5%93%AA%E4%BA%9B%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/11__webassembly_%E5%9C%A8%E7%89%A9%E8%81%94%E7%BD%91%E5%A4%9A%E5%AA%92%E4%BD%93%E4%B8%8E%E4%BA%91%E6%8A%80%E6%9C%AF%E6%96%B9%E9%9D%A2%E6%9C%89%E5%93%AA%E4%BA%9B%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5/</guid>
      <description>&lt;p&gt;你好，我是于航。&lt;/p&gt;&#xA;&lt;p&gt;我们继续接着上节课的内容，来一块看看 Wasm 在应用实践领域有哪些“新鲜事”。今天我们要来聊的是 Wasm 在物联网、多媒体与云技术领域内的一些创新性实践。我们一直说 Wasm 虽然“出身”于 Web，但实际上却也可以 out-of-web。&lt;/p&gt;</description>
    </item>
    <item>
      <title>12__有哪些优秀的_WebAssembly_编译器与运行时？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/12__%E6%9C%89%E5%93%AA%E4%BA%9B%E4%BC%98%E7%A7%80%E7%9A%84_webassembly_%E7%BC%96%E8%AF%91%E5%99%A8%E4%B8%8E%E8%BF%90%E8%A1%8C%E6%97%B6/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/12__%E6%9C%89%E5%93%AA%E4%BA%9B%E4%BC%98%E7%A7%80%E7%9A%84_webassembly_%E7%BC%96%E8%AF%91%E5%99%A8%E4%B8%8E%E8%BF%90%E8%A1%8C%E6%97%B6/</guid>
      <description>&lt;p&gt;你好，我是于航。&lt;/p&gt;&#xA;&lt;p&gt;本节课我们来一起看看，目前业界有哪些优秀的 Wasm 运行时。这些运行时都是 Wasm 可以在 out-of-web 领域大显身手的最基本保障。它们其中有些支持 WASI 抽象系统接口，有些支持 Wasm Post-MVP 标准中的部分提案，还有一些可以被专门用在诸如嵌入式、IOT 物联网以及甚至云，AI 和区块链等特殊的领域和场景中。&lt;/p&gt;</description>
    </item>
    <item>
      <title>13__LLVM：如何将自定义的语言编译到_WebAssembly？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/13__llvm%E5%A6%82%E4%BD%95%E5%B0%86%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9A%84%E8%AF%AD%E8%A8%80%E7%BC%96%E8%AF%91%E5%88%B0_webassembly/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/13__llvm%E5%A6%82%E4%BD%95%E5%B0%86%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9A%84%E8%AF%AD%E8%A8%80%E7%BC%96%E8%AF%91%E5%88%B0_webassembly/</guid>
      <description>&lt;p&gt;你好，我是于航。&lt;/p&gt;&#xA;&lt;p&gt;应用 Wasm 的常见方式有几种类型，一种方式是通过 Web 浏览器提供的 JavaScript API 与 Web API，来在 Web 应用中调用从 Wasm 模块中导出的函数。通过这种方式，我们可以充分利用 Wasm 的安全、高效及可移植性等优势。&lt;/p&gt;</description>
    </item>
    <item>
      <title>14__有哪些正在行进中的_WebAssembly_Post-MVP_提案？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/14__%E6%9C%89%E5%93%AA%E4%BA%9B%E6%AD%A3%E5%9C%A8%E8%A1%8C%E8%BF%9B%E4%B8%AD%E7%9A%84_webassembly_post-mvp_%E6%8F%90%E6%A1%88/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/14__%E6%9C%89%E5%93%AA%E4%BA%9B%E6%AD%A3%E5%9C%A8%E8%A1%8C%E8%BF%9B%E4%B8%AD%E7%9A%84_webassembly_post-mvp_%E6%8F%90%E6%A1%88/</guid>
      <description>&lt;p&gt;你好，我是于航。&lt;/p&gt;&#xA;&lt;p&gt;作为“应用篇”的最后一节课，我们来一起看看自 Wasm MVP 标准发布之后（2017 年 3 月）的这三年时间里，Wasm 还有哪些行进中的后续标准正在被设计和实现？这些标准将会分别影响整个 Wasm 生态的哪些组成部分？借助于这些新的标准，现有的 Wasm 应用能否被进一步得到优化？Wasm 这项技术能否被应用到更多、更广的领域中呢？相信在学习完这节课后，对于上面这些问题，你会有着进一步的感悟。&lt;/p&gt;</description>
    </item>
    <item>
      <title>15__如何实现一个_WebAssembly_在线多媒体处理应用（一）？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/15__%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA_webassembly_%E5%9C%A8%E7%BA%BF%E5%A4%9A%E5%AA%92%E4%BD%93%E5%A4%84%E7%90%86%E5%BA%94%E7%94%A8%E4%B8%80/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/15__%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA_webassembly_%E5%9C%A8%E7%BA%BF%E5%A4%9A%E5%AA%92%E4%BD%93%E5%A4%84%E7%90%86%E5%BA%94%E7%94%A8%E4%B8%80/</guid>
      <description>&lt;p&gt;你好，我是于航。&lt;/p&gt;&#xA;&lt;p&gt;在之前两个章节的内容中，我们讲解了 Wasm 相关的核心原理，并介绍了 Wasm 在实际各个应用领域内的一些实践情况。从这一讲开始，我们将进入“实战篇”。作为第一个实战应用，我会手把手教你从零构建一个完整的 Wasm Web 应用。&lt;/p&gt;</description>
    </item>
    <item>
      <title>155-WebAssembly入门课</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/155-webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/155-webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/</guid>
      <description></description>
    </item>
    <item>
      <title>16__如何实现一个_WebAssembly_在线多媒体处理应用（二）？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/16__%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA_webassembly_%E5%9C%A8%E7%BA%BF%E5%A4%9A%E5%AA%92%E4%BD%93%E5%A4%84%E7%90%86%E5%BA%94%E7%94%A8%E4%BA%8C/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/16__%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA_webassembly_%E5%9C%A8%E7%BA%BF%E5%A4%9A%E5%AA%92%E4%BD%93%E5%A4%84%E7%90%86%E5%BA%94%E7%94%A8%E4%BA%8C/</guid>
      <description>&lt;p&gt;你好，我是于航。&lt;/p&gt;&#xA;&lt;p&gt;在上一节课中，我们介绍了本次实践项目在代码层面的大体组成结构，着重给你讲解了需要了解的一些基础性知识，比如“滤镜的基本原理及实现方法”以及“Emscripten 的基本用法”等等。而在这节课中，我们将继续构建这个基于 Wasm 实现的多媒体 Web 应用。&lt;/p&gt;</description>
    </item>
    <item>
      <title>17__如何实现一个_WebAssembly_在线多媒体处理应用（三）？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/17__%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA_webassembly_%E5%9C%A8%E7%BA%BF%E5%A4%9A%E5%AA%92%E4%BD%93%E5%A4%84%E7%90%86%E5%BA%94%E7%94%A8%E4%B8%89/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/17__%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA_webassembly_%E5%9C%A8%E7%BA%BF%E5%A4%9A%E5%AA%92%E4%BD%93%E5%A4%84%E7%90%86%E5%BA%94%E7%94%A8%E4%B8%89/</guid>
      <description>&lt;p&gt;你好，我是于航。&lt;/p&gt;&#xA;&lt;p&gt;在上一节课中，我们已经完成了本次实践项目的其中一个核心部分，也就是由 JavaScript 实现的滤镜函数。并且还同时完成了整个 Web 应用与用户的 UI 交互控制部分、视频图像的渲染和绘制逻辑，以及帧率计算逻辑及显示逻辑。&lt;/p&gt;</description>
    </item>
    <item>
      <title>18__如何进行_Wasm_应用的调试与分析？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/18__%E5%A6%82%E4%BD%95%E8%BF%9B%E8%A1%8C_wasm_%E5%BA%94%E7%94%A8%E7%9A%84%E8%B0%83%E8%AF%95%E4%B8%8E%E5%88%86%E6%9E%90/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/18__%E5%A6%82%E4%BD%95%E8%BF%9B%E8%A1%8C_wasm_%E5%BA%94%E7%94%A8%E7%9A%84%E8%B0%83%E8%AF%95%E4%B8%8E%E5%88%86%E6%9E%90/</guid>
      <description>&lt;p&gt;你好，我是于航。&lt;/p&gt;&#xA;&lt;p&gt;所有正在应用 Wasm 这门技术的开发者，都会被频繁问到这样一个问题 —— “如何能够以最正确的方式来对一个 Wasm 模块（应用）进行调试？”&lt;/p&gt;&#xA;&lt;p&gt;实际上，针对 Wasm 模块的调试方案与相应的工具链，暂时还没有统一的“事实标准”。而又由于 Wasm 本身可以被应用在诸如 Web 与 out-of-web 等多种场景中，这便使得对 Wasm 模块或应用的调试过程，变得十分复杂。&lt;/p&gt;</description>
    </item>
    <item>
      <title>19__如何应用_WASI_及其相关生态？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/19__%E5%A6%82%E4%BD%95%E5%BA%94%E7%94%A8_wasi_%E5%8F%8A%E5%85%B6%E7%9B%B8%E5%85%B3%E7%94%9F%E6%80%81/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/19__%E5%A6%82%E4%BD%95%E5%BA%94%E7%94%A8_wasi_%E5%8F%8A%E5%85%B6%E7%9B%B8%E5%85%B3%E7%94%9F%E6%80%81/</guid>
      <description>&lt;p&gt;你好，我是于航。&lt;/p&gt;&#xA;&lt;p&gt;作为“实践篇”的最后一课，今天我们来一起看看“如何从零构建一个 WASI 应用？”。在实践篇的前三节课里，我花了大量的篇幅来介绍如何基于 Emscripten，去构建一个可以运行在 Web 浏览器中的 Wasm 应用。而基于 WASI 构建的 Wasm 应用将会被运行在浏览器之外的 Native 环境中，因此其构建和使用方式与基于 Emscripten 的 Wasm 应用有所不同。&lt;/p&gt;</description>
    </item>
    <item>
      <title>20__总结与答疑</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/20__%E6%80%BB%E7%BB%93%E4%B8%8E%E7%AD%94%E7%96%91/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/20__%E6%80%BB%E7%BB%93%E4%B8%8E%E7%AD%94%E7%96%91/</guid>
      <description>&lt;p&gt;你好，我是于航。&lt;/p&gt;&#xA;&lt;p&gt;在这节课里，我将和你总结一下自开课这段时间以来，各位同学在各个渠道提出的有关 Wasm 的一些问题。限于篇幅，这里我优先选择了 8 个相对比较有代表性的问题，来给你进行解答。对于其中一些已经回复过的问题，我也会给你做进一步的解析。如果你有其他的问题，也欢迎在评论区和我进一步交流。&lt;/p&gt;</description>
    </item>
    <item>
      <title>结束语__WebAssembly，未来已来</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/%E7%BB%93%E6%9D%9F%E8%AF%AD__webassembly%E6%9C%AA%E6%9D%A5%E5%B7%B2%E6%9D%A5/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/%E7%BB%93%E6%9D%9F%E8%AF%AD__webassembly%E6%9C%AA%E6%9D%A5%E5%B7%B2%E6%9D%A5/</guid>
      <description>&lt;p&gt;你好，我是于航。&lt;/p&gt;&#xA;&lt;p&gt;首先，感谢你这一路的陪伴。我本以为就现阶段来说，Wasm 作为一个相对小众的技术领域而言，大家可能更多地是抱着一种“看热闹”的心态，在我的预想里反馈可能不多。但最后结果大大超出我的预期。同学们都在持续不断地学习，并且给出了你们对 Wasm 这门技术的反馈。这让我看到了大多数开发者对 Wasm 所抱有的疑问和期待，相信这也是整个互联网技术圈子对 Wasm 认知的一个缩影。&lt;/p&gt;</description>
    </item>
    <item>
      <title>开篇词__我们为什么要了解_WebAssembly？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/%E5%BC%80%E7%AF%87%E8%AF%8D__%E6%88%91%E4%BB%AC%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%BA%86%E8%A7%A3_webassembly/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/webassembly%E5%85%A5%E9%97%A8%E8%AF%BE/%E5%BC%80%E7%AF%87%E8%AF%8D__%E6%88%91%E4%BB%AC%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%BA%86%E8%A7%A3_webassembly/</guid>
      <description>&lt;p&gt;你好，我是于航，欢迎来到我的 WebAssembly 入门课！&lt;/p&gt;&#xA;&lt;p&gt;提起 WebAssembly，你可能对它的印象只是一个看上去比较“抽象”的新技术。它不像一个新推出的框架或者库，功能定位十分清晰，并且可以直观地通过代码来展示。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
