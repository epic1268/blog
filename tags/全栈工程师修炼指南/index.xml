<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>全栈工程师修炼指南 on Docs</title>
    <link>https://politcloud.org/tags/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/</link>
    <description>Recent content in 全栈工程师修炼指南 on Docs</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 10 Jan 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://politcloud.org/tags/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>01__网络互联的昨天、今天和明天：HTTP_协议的演化</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/01__%E7%BD%91%E7%BB%9C%E4%BA%92%E8%81%94%E7%9A%84%E6%98%A8%E5%A4%A9%E4%BB%8A%E5%A4%A9%E5%92%8C%E6%98%8E%E5%A4%A9http_%E5%8D%8F%E8%AE%AE%E7%9A%84%E6%BC%94%E5%8C%96/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/01__%E7%BD%91%E7%BB%9C%E4%BA%92%E8%81%94%E7%9A%84%E6%98%A8%E5%A4%A9%E4%BB%8A%E5%A4%A9%E5%92%8C%E6%98%8E%E5%A4%A9http_%E5%8D%8F%E8%AE%AE%E7%9A%84%E6%BC%94%E5%8C%96/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;HTTP 协议是互联网基础中的基础，和很多技术谈具体应用场景不同的是，几乎所有的互联网服务都是它的应用，没有它，互联网的“互联”将无从谈起，因此我们把它作为正式学习的开篇。&lt;/p&gt;</description>
    </item>
    <item>
      <title>02__为HTTP穿上盔甲：HTTPS</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/02__%E4%B8%BAhttp%E7%A9%BF%E4%B8%8A%E7%9B%94%E7%94%B2https/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/02__%E4%B8%BAhttp%E7%A9%BF%E4%B8%8A%E7%9B%94%E7%94%B2https/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;在上一讲中，我介绍了互联网最重要的 HTTP 协议。可是随着互联网的发展，你会发现 HTTP 越来越无法满足复杂的需求，比如数据加密传输的安全性需求，再比如服务器消息即时推送的交互模式的需求，而这些不适性是由 HTTP 的基本特性所造成的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>03__换个角度解决问题：服务端推送技术</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/03__%E6%8D%A2%E4%B8%AA%E8%A7%92%E5%BA%A6%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%8E%A8%E9%80%81%E6%8A%80%E6%9C%AF/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/03__%E6%8D%A2%E4%B8%AA%E8%A7%92%E5%BA%A6%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%8E%A8%E9%80%81%E6%8A%80%E6%9C%AF/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;今天我们继续和 HTTP“过不去”。在上一讲，我们讲到了 HTTP 在安全传输方面的局限，并介绍了怎样使用经过 TLS 加密的 HTTPS 连接来解决这样的弊端。&lt;/p&gt;</description>
    </item>
    <item>
      <title>04__工整与自由的风格之争：SOAP和REST</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/04__%E5%B7%A5%E6%95%B4%E4%B8%8E%E8%87%AA%E7%94%B1%E7%9A%84%E9%A3%8E%E6%A0%BC%E4%B9%8B%E4%BA%89soap%E5%92%8Crest/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/04__%E5%B7%A5%E6%95%B4%E4%B8%8E%E8%87%AA%E7%94%B1%E7%9A%84%E9%A3%8E%E6%A0%BC%E4%B9%8B%E4%BA%89soap%E5%92%8Crest/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;今天我要邀请两位风格迥异的主角登上舞台，一位西装革履，另一位随性洒脱。前面那位，代表着工整、严谨和细致；后面那位，代表着自由、灵活和简约。&lt;/p&gt;</description>
    </item>
    <item>
      <title>05__权衡的艺术：漫谈Web_API的设计</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/05__%E6%9D%83%E8%A1%A1%E7%9A%84%E8%89%BA%E6%9C%AF%E6%BC%AB%E8%B0%88web_api%E7%9A%84%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/05__%E6%9D%83%E8%A1%A1%E7%9A%84%E8%89%BA%E6%9C%AF%E6%BC%AB%E8%B0%88web_api%E7%9A%84%E8%AE%BE%E8%AE%A1/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;今天，我们该根据之前所学，来谈谈具体怎样设计 Web API 接口了。我们围绕的核心，是**“权衡”（trade-off）**这两个字，事实上，它不只是 Web API 接口设计的核心，还是软件绝大多数设计问题的核心。&lt;/p&gt;</description>
    </item>
    <item>
      <title>06__特别放送：北美大厂如何招聘全栈工程师？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/06__%E7%89%B9%E5%88%AB%E6%94%BE%E9%80%81%E5%8C%97%E7%BE%8E%E5%A4%A7%E5%8E%82%E5%A6%82%E4%BD%95%E6%8B%9B%E8%81%98%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/06__%E7%89%B9%E5%88%AB%E6%94%BE%E9%80%81%E5%8C%97%E7%BE%8E%E5%A4%A7%E5%8E%82%E5%A6%82%E4%BD%95%E6%8B%9B%E8%81%98%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;在第一章技术内容的末尾，我们来换换脑子，聊一些略轻松的话题。我曾在开篇词中讲过，全栈工程师的市场需求量很大，今天我就来介绍一下北美大厂，特别是那些大名鼎鼎的互联网巨头们，都是怎样招聘全栈工程师的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>07__解耦是永恒的主题：MVC框架的发展</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/07__%E8%A7%A3%E8%80%A6%E6%98%AF%E6%B0%B8%E6%81%92%E7%9A%84%E4%B8%BB%E9%A2%98mvc%E6%A1%86%E6%9E%B6%E7%9A%84%E5%8F%91%E5%B1%95/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/07__%E8%A7%A3%E8%80%A6%E6%98%AF%E6%B0%B8%E6%81%92%E7%9A%84%E4%B8%BB%E9%A2%98mvc%E6%A1%86%E6%9E%B6%E7%9A%84%E5%8F%91%E5%B1%95/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;欢迎进入第二章，本章我们将围绕 MVC 这个老而弥坚的架构模式展开方方面面的介绍，对于基于 Web 的全栈工程师来说，它是我们知识森林中心最茂密的一片区域，请继续打起精神，积极学习和思考。&lt;/p&gt;</description>
    </item>
    <item>
      <title>08__MVC架构解析：模型（Model）篇</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/08__mvc%E6%9E%B6%E6%9E%84%E8%A7%A3%E6%9E%90%E6%A8%A1%E5%9E%8Bmodel%E7%AF%87/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/08__mvc%E6%9E%B6%E6%9E%84%E8%A7%A3%E6%9E%90%E6%A8%A1%E5%9E%8Bmodel%E7%AF%87/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;在上一讲中，我们了解了 MVC 这个老而弥坚的架构模式，而从这一讲开始，连同第 09、10 讲共计 3 篇，我将分别展开介绍 MVC 三大部分内容。今天我要讲的就是第一部分——模型（Model）。&lt;/p&gt;</description>
    </item>
    <item>
      <title>09__MVC架构解析：视图（View）篇</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/09__mvc%E6%9E%B6%E6%9E%84%E8%A7%A3%E6%9E%90%E8%A7%86%E5%9B%BEview%E7%AF%87/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/09__mvc%E6%9E%B6%E6%9E%84%E8%A7%A3%E6%9E%90%E8%A7%86%E5%9B%BEview%E7%AF%87/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;今天我们继续学习 MVC 架构，主要内容就是 MVC 架构的第二部分——视图（View）。&lt;/p&gt;&#xA;&lt;h2 id=&#34;概念&#34;&gt;概念&lt;/h2&gt;&#xA;&lt;p&gt;首先，我想问一问，什么是视图？有程序员说是界面，有程序员说是 UI（User Interface），这些都对，但是都不完整。&lt;/p&gt;</description>
    </item>
    <item>
      <title>10__MVC架构解析：控制器（Controller）篇</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/10__mvc%E6%9E%B6%E6%9E%84%E8%A7%A3%E6%9E%90%E6%8E%A7%E5%88%B6%E5%99%A8controller%E7%AF%87/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/10__mvc%E6%9E%B6%E6%9E%84%E8%A7%A3%E6%9E%90%E6%8E%A7%E5%88%B6%E5%99%A8controller%E7%AF%87/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;今天我们继续学习 MVC 架构，主要内容就是 MVC 架构的第三部分——控制器（Controller）。&lt;/p&gt;&#xA;&lt;p&gt;控制器用于接收请求，校验参数，调用 Model 层获取业务数据，构造和绑定上下文，并转给 View 层去渲染。也就是说，控制器是 MVC 的大脑，它知道接下去该让谁去做什么事。控制器层是大多数 MVC 框架特别愿意做文章的地方，我相信你可能耳闻、了解，甚至熟练使用过一些 MVC 框架了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>11__剑走偏锋：面向切面编程</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/11__%E5%89%91%E8%B5%B0%E5%81%8F%E9%94%8B%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/11__%E5%89%91%E8%B5%B0%E5%81%8F%E9%94%8B%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;今天我们要接触一个和 MVC 密切相关的，能带来思维模式改变的编程范型——面向切面编程（AOP，Aspect Oriented Programming）。&lt;/p&gt;</description>
    </item>
    <item>
      <title>12__唯有套路得人心：谈谈Java_EE的那些模式</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/12__%E5%94%AF%E6%9C%89%E5%A5%97%E8%B7%AF%E5%BE%97%E4%BA%BA%E5%BF%83%E8%B0%88%E8%B0%88java_ee%E7%9A%84%E9%82%A3%E4%BA%9B%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/12__%E5%94%AF%E6%9C%89%E5%A5%97%E8%B7%AF%E5%BE%97%E4%BA%BA%E5%BF%83%E8%B0%88%E8%B0%88java_ee%E7%9A%84%E9%82%A3%E4%BA%9B%E6%A8%A1%E5%BC%8F/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;本章我们以 MVC 架构为核心，已经介绍了很多设计模式，今天我们将进一步泛化，谈论更多的 Java EE 模式。这些模式，就是我们在搭建全栈架构、设计的工作过程中，不断总结和应用的“套路”。&lt;/p&gt;</description>
    </item>
    <item>
      <title>13__特别放送：选择比努力更重要</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/13__%E7%89%B9%E5%88%AB%E6%94%BE%E9%80%81%E9%80%89%E6%8B%A9%E6%AF%94%E5%8A%AA%E5%8A%9B%E6%9B%B4%E9%87%8D%E8%A6%81/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/13__%E7%89%B9%E5%88%AB%E6%94%BE%E9%80%81%E9%80%89%E6%8B%A9%E6%AF%94%E5%8A%AA%E5%8A%9B%E6%9B%B4%E9%87%8D%E8%A6%81/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;又到了一章的末尾，特别放送时间。专栏上线后的这几周，我在留言区回答了一些问题，有一些是技术上的问题，也有一些是非技术上的问题。尽管在 &lt;a href=&#34;https://time.geekbang.org/column/article/134212&#34;&gt;[开篇词]&lt;/a&gt; 和 &lt;a href=&#34;https://time.geekbang.org/column/article/134216&#34;&gt;[学习路径]&lt;/a&gt; 中我已经介绍了全栈工程师的角色、重要性和学习方法，但是依然见到不少困惑和疑问，&lt;strong&gt;其中一个问题反复出现，那就是面对那么多的软件技术，总有一种“学不过来”的感觉，为此感到焦虑和担忧&lt;/strong&gt;。尤其是对于全栈工程师而言，这个话题更是被放大了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>14__别有洞天：从后端到前端</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/14__%E5%88%AB%E6%9C%89%E6%B4%9E%E5%A4%A9%E4%BB%8E%E5%90%8E%E7%AB%AF%E5%88%B0%E5%89%8D%E7%AB%AF/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/14__%E5%88%AB%E6%9C%89%E6%B4%9E%E5%A4%A9%E4%BB%8E%E5%90%8E%E7%AB%AF%E5%88%B0%E5%89%8D%E7%AB%AF/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;前两章我们分别介绍了网络协议和 Web 接口的知识，以及网站等应用的 MVC 架构和其衍生发展而来的各种设计模式。以上希望你已经充分消化吸收了，今天我们将迈入第三大基于 Web 的全栈技能领域——前端。&lt;/p&gt;</description>
    </item>
    <item>
      <title>15__重剑无锋，大巧不工：JavaScript面向对象</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/15__%E9%87%8D%E5%89%91%E6%97%A0%E9%94%8B%E5%A4%A7%E5%B7%A7%E4%B8%8D%E5%B7%A5javascript%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/15__%E9%87%8D%E5%89%91%E6%97%A0%E9%94%8B%E5%A4%A7%E5%B7%A7%E4%B8%8D%E5%B7%A5javascript%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;JavaScript 的设计和编程能力可以说是前端工程师的修养之一，而 JavaScript 面向对象就是其中的一个重要组成部分。&lt;/p&gt;&#xA;&lt;p&gt;我相信对于后端开发来说，面向对象的编程能力是一个程序员必须要熟练掌握的基本技能；而对于前端开发，很多项目，甚至在很多知名互联网公司的项目中，很遗憾，这部分都是缺失的，于是我们看到大量的一个一个散落的方法，以及一堆一堆难以理解的全局变量，这对系统的扩展和维护简直是噩梦。&lt;/p&gt;</description>
    </item>
    <item>
      <title>16__百花齐放，百家争鸣：前端MVC框架</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/16__%E7%99%BE%E8%8A%B1%E9%BD%90%E6%94%BE%E7%99%BE%E5%AE%B6%E4%BA%89%E9%B8%A3%E5%89%8D%E7%AB%AFmvc%E6%A1%86%E6%9E%B6/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/16__%E7%99%BE%E8%8A%B1%E9%BD%90%E6%94%BE%E7%99%BE%E5%AE%B6%E4%BA%89%E9%B8%A3%E5%89%8D%E7%AB%AFmvc%E6%A1%86%E6%9E%B6/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;我在上一章讲到了 MVC 的原理，今天我来讲讲前端的 MVC 框架。这部分发展很快，它们比后端 MVC 框架出现得更晚，但是社区普遍更活跃。&lt;/p&gt;&#xA;&lt;p&gt;我们在学习的过程中，需要继续保持深度和广度的均衡，既要对自己熟悉的那一款框架做深入了解，知道它的核心特性，明白其基本实现原理，对于其优劣有自己的想法；也要多了解了解这个技术的百花园，看看别的框架是什么，想想有什么优势和缺点，拓宽视野，为自己能够做出合理的技术选型而打下扎实的基础。&lt;/p&gt;</description>
    </item>
    <item>
      <title>17__不一样的体验：交互设计和页面布局</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/17__%E4%B8%8D%E4%B8%80%E6%A0%B7%E7%9A%84%E4%BD%93%E9%AA%8C%E4%BA%A4%E4%BA%92%E8%AE%BE%E8%AE%A1%E5%92%8C%E9%A1%B5%E9%9D%A2%E5%B8%83%E5%B1%80/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/17__%E4%B8%8D%E4%B8%80%E6%A0%B7%E7%9A%84%E4%BD%93%E9%AA%8C%E4%BA%A4%E4%BA%92%E8%AE%BE%E8%AE%A1%E5%92%8C%E9%A1%B5%E9%9D%A2%E5%B8%83%E5%B1%80/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;前几讲我们一直在 JavaScript 的代码中游走，这一讲我们来换换脑子，聊一聊界面设计，讲一讲交互和布局。这部分对于基于 Web 的全栈工程师来说，不只是技术栈特殊的一部分，还是一个能够给个人发展格局带来更多可能的部分。&lt;/p&gt;</description>
    </item>
    <item>
      <title>18__千言万语不及一幅画：谈谈数据可视化</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/18__%E5%8D%83%E8%A8%80%E4%B8%87%E8%AF%AD%E4%B8%8D%E5%8F%8A%E4%B8%80%E5%B9%85%E7%94%BB%E8%B0%88%E8%B0%88%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/18__%E5%8D%83%E8%A8%80%E4%B8%87%E8%AF%AD%E4%B8%8D%E5%8F%8A%E4%B8%80%E5%B9%85%E7%94%BB%E8%B0%88%E8%B0%88%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;随着大数据和数据分析趋势的流行，数据可视化变得越来越重要，而许多全栈的学习材料并没有跟上节奏，去介绍这方面的技术。这一讲中，我们将介绍数据可视化的基本概念和原理，以及几个常用的 JavaScript 用来实现数据可视化的库。&lt;/p&gt;</description>
    </item>
    <item>
      <title>19__打开潘多拉盒子：JavaScript异步编程</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/19__%E6%89%93%E5%BC%80%E6%BD%98%E5%A4%9A%E6%8B%89%E7%9B%92%E5%AD%90javascript%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/19__%E6%89%93%E5%BC%80%E6%BD%98%E5%A4%9A%E6%8B%89%E7%9B%92%E5%AD%90javascript%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;我们在本章伊始的 [第 14 讲] 中初步学习了 JavaScript 的事件驱动模型，体会到了思维模式的转变，也建立起了异步编程的初步概念。在本章最后一讲，我们将深入异步编程，继续探讨其中的关键技术。&lt;/p&gt;</description>
    </item>
    <item>
      <title>20__特别放送：全栈团队的角色构成</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/20__%E7%89%B9%E5%88%AB%E6%94%BE%E9%80%81%E5%85%A8%E6%A0%88%E5%9B%A2%E9%98%9F%E7%9A%84%E8%A7%92%E8%89%B2%E6%9E%84%E6%88%90/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/20__%E7%89%B9%E5%88%AB%E6%94%BE%E9%80%81%E5%85%A8%E6%A0%88%E5%9B%A2%E9%98%9F%E7%9A%84%E8%A7%92%E8%89%B2%E6%9E%84%E6%88%90/</guid>
      <description>&lt;p&gt;你好，我是四火。又到了一个章节的末尾，相对轻松的特别放送时间。&lt;/p&gt;&#xA;&lt;p&gt;从技术的角度上看，和相对偏“硬”的常规内容不同，特别放送部分，我一般倾向于介绍一些较“软”的其他内容。第一章的 [特别放送] 我介绍了北美大厂工程师的面试流程，第二章的 [特别放送] 我们讨论了学习的方法。那第三章的特别放送，也就是你正在阅读的这一讲，我想结合我自己的经历，谈一谈全栈团队的角色构成。&lt;/p&gt;</description>
    </item>
    <item>
      <title>21__赫赫有名的双刃剑：缓存（上）</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/21__%E8%B5%AB%E8%B5%AB%E6%9C%89%E5%90%8D%E7%9A%84%E5%8F%8C%E5%88%83%E5%89%91%E7%BC%93%E5%AD%98%E4%B8%8A/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/21__%E8%B5%AB%E8%B5%AB%E6%9C%89%E5%90%8D%E7%9A%84%E5%8F%8C%E5%88%83%E5%89%91%E7%BC%93%E5%AD%98%E4%B8%8A/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;从今天开始，我们将继续在基于 Web 的全栈技术上深挖，本章我们介绍持久层。缓存是全栈开发中非常重要的一环，因此我把它放到了数据持久化系列的开篇。&lt;/p&gt;</description>
    </item>
    <item>
      <title>22__赫赫有名的双刃剑：缓存（下）</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/22__%E8%B5%AB%E8%B5%AB%E6%9C%89%E5%90%8D%E7%9A%84%E5%8F%8C%E5%88%83%E5%89%91%E7%BC%93%E5%AD%98%E4%B8%8B/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/22__%E8%B5%AB%E8%B5%AB%E6%9C%89%E5%90%8D%E7%9A%84%E5%8F%8C%E5%88%83%E5%89%91%E7%BC%93%E5%AD%98%E4%B8%8B/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;在上一讲中，我们介绍了缓存的本质和应用模式。今天我们继续讨论缓存，这一讲会结合一些实际项目，谈一谈缓存的使用会有哪些问题，以及缓存框架的一些通用性的东西。&lt;/p&gt;</description>
    </item>
    <item>
      <title>23__知其然，知其所以然：数据的持久化和一致性</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/23__%E7%9F%A5%E5%85%B6%E7%84%B6%E7%9F%A5%E5%85%B6%E6%89%80%E4%BB%A5%E7%84%B6%E6%95%B0%E6%8D%AE%E7%9A%84%E6%8C%81%E4%B9%85%E5%8C%96%E5%92%8C%E4%B8%80%E8%87%B4%E6%80%A7/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/23__%E7%9F%A5%E5%85%B6%E7%84%B6%E7%9F%A5%E5%85%B6%E6%89%80%E4%BB%A5%E7%84%B6%E6%95%B0%E6%8D%AE%E7%9A%84%E6%8C%81%E4%B9%85%E5%8C%96%E5%92%8C%E4%B8%80%E8%87%B4%E6%80%A7/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;我想你很可能已经使用过许多存储层的技术了，例如缓存、文件、关系数据库，甚至一些云上 key-value 的存储服务，但就如同我之前提到的那样，某项具体技术总是相对好学，可对于全栈知识系统地学习，也包括持久层的学习，是一定要立足于技术的基础、原理和本质的。今天，我们要讲的就是其中之一 —— 一致性（Consistency）。&lt;/p&gt;</description>
    </item>
    <item>
      <title>24__尺有所短，寸有所长：CAP和数据存储技术选择</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/24__%E5%B0%BA%E6%9C%89%E6%89%80%E7%9F%AD%E5%AF%B8%E6%9C%89%E6%89%80%E9%95%BFcap%E5%92%8C%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E6%8A%80%E6%9C%AF%E9%80%89%E6%8B%A9/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/24__%E5%B0%BA%E6%9C%89%E6%89%80%E7%9F%AD%E5%AF%B8%E6%9C%89%E6%89%80%E9%95%BFcap%E5%92%8C%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E6%8A%80%E6%9C%AF%E9%80%89%E6%8B%A9/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;在上一讲中我们着重讲了持久层的一致性，其实，它是分布式系统的一个基础理论。你可能会问，学习基于 Web 的全栈技能，也需要学习一些分布式系统的技术吗？是的！特别是我们在学习其持久层的时候，我们还真得学习一些分布式系统的基础理论，从而正确理解和使用我们熟悉的这些持久层技术。&lt;/p&gt;</description>
    </item>
    <item>
      <title>25__设计数据持久层（上）：理论分析</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/25__%E8%AE%BE%E8%AE%A1%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%B1%82%E4%B8%8A%E7%90%86%E8%AE%BA%E5%88%86%E6%9E%90/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/25__%E8%AE%BE%E8%AE%A1%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%B1%82%E4%B8%8A%E7%90%86%E8%AE%BA%E5%88%86%E6%9E%90/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;在基于 Web 的全栈技术下，每一层的设计都有共同点，当然，也有各自的特殊之处。你可以回想一下，我们曾经在第一章谈到的客户端和服务端交互以及 Web API 的设计，在第三章谈到的前端的设计，在第二章谈到的服务端 MVC 各层的设计，从前到后。那么，本章余下的内容，我们就来让整个设计层面上的体系变得完整，讲一讲最后面一层的数据持久层怎样设计。&lt;/p&gt;</description>
    </item>
    <item>
      <title>26__设计数据持久层（下）：案例介绍</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/26__%E8%AE%BE%E8%AE%A1%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%B1%82%E4%B8%8B%E6%A1%88%E4%BE%8B%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/26__%E8%AE%BE%E8%AE%A1%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%B1%82%E4%B8%8B%E6%A1%88%E4%BE%8B%E4%BB%8B%E7%BB%8D/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;本章我们已经学习了不少持久化，特别是有关存储的技术。那在实际业务中，复杂的问题是一个接着一个的，面对这些琳琅满目的具体技术，我们该怎样运用自己所掌握的知识，做出合理的选择呢？今天我们就来接触一些典型的系统，看看对于它们来说，该做出怎样的持久化设计和技术选型。我相信我们实际接触的系统也有相当程度的类比性，可以带来应用的参考意义。&lt;/p&gt;</description>
    </item>
    <item>
      <title>27__特别放送：聊一聊代码审查</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/27__%E7%89%B9%E5%88%AB%E6%94%BE%E9%80%81%E8%81%8A%E4%B8%80%E8%81%8A%E4%BB%A3%E7%A0%81%E5%AE%A1%E6%9F%A5/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/27__%E7%89%B9%E5%88%AB%E6%94%BE%E9%80%81%E8%81%8A%E4%B8%80%E8%81%8A%E4%BB%A3%E7%A0%81%E5%AE%A1%E6%9F%A5/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;又到了特别放送时间，今天我想聊一聊代码审查（Code Review）。在软件工程师日常的开发工作中，&lt;strong&gt;如果要挑出一项极其重要，却又很容易被忽视的工作，在我看来代码审查几乎是无可争议的第一。&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>28__Ops三部曲之一：配置管理</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/28__ops%E4%B8%89%E9%83%A8%E6%9B%B2%E4%B9%8B%E4%B8%80%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/28__ops%E4%B8%89%E9%83%A8%E6%9B%B2%E4%B9%8B%E4%B8%80%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;欢迎进入第五章：寻找最佳实践。本章我们会讲到 Ops，由于 Ops 的范围实在太广了，因此从今天开始，接连三讲，我们会讨论 Ops 的三个常见话题，今天要谈的就是其中的第一个——配置管理。&lt;/p&gt;</description>
    </item>
    <item>
      <title>29__Ops三部曲之二：集群部署</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/29__ops%E4%B8%89%E9%83%A8%E6%9B%B2%E4%B9%8B%E4%BA%8C%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/29__ops%E4%B8%89%E9%83%A8%E6%9B%B2%E4%B9%8B%E4%BA%8C%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;今天我们来谈谈 Ops 的三部曲之二，集群部署。毕竟一台物理机能够承载的请求数是十分有限的，同时，一台物理机还存在着单点故障（Single Point Failure）问题，因此我们通常需要把多台 Web 服务器组成集群，来提供服务。&lt;/p&gt;</description>
    </item>
    <item>
      <title>30__Ops三部曲之三：测试和发布</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/30__ops%E4%B8%89%E9%83%A8%E6%9B%B2%E4%B9%8B%E4%B8%89%E6%B5%8B%E8%AF%95%E5%92%8C%E5%8F%91%E5%B8%83/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/30__ops%E4%B8%89%E9%83%A8%E6%9B%B2%E4%B9%8B%E4%B8%89%E6%B5%8B%E8%AF%95%E5%92%8C%E5%8F%91%E5%B8%83/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;今天，我们继续 Ops 三部曲。今天我要讲一讲持续集成和持续发布，以及 Web 全栈项目中一些常见的测试维度。&lt;/p&gt;&#xA;&lt;h2 id=&#34;cicd-和-pipeline&#34;&gt;CI/CD 和 Pipeline&lt;/h2&gt;&#xA;&lt;p&gt;CI 指的是 Continuous Integration，持续集成，而 CD 指的是 Continuous Delivery，持续交付。它们二者结合起来，通过将工程师的代码变更反复、多次、快速地集成到代码主线，执行多种自动化的测试和验证，从而给出快速反馈，并最终达到将变更持续、迅速发布到线上的目的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>31__防人之心不可无：网站安全问题窥视</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/31__%E9%98%B2%E4%BA%BA%E4%B9%8B%E5%BF%83%E4%B8%8D%E5%8F%AF%E6%97%A0%E7%BD%91%E7%AB%99%E5%AE%89%E5%85%A8%E9%97%AE%E9%A2%98%E7%AA%A5%E8%A7%86/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/31__%E9%98%B2%E4%BA%BA%E4%B9%8B%E5%BF%83%E4%B8%8D%E5%8F%AF%E6%97%A0%E7%BD%91%E7%AB%99%E5%AE%89%E5%85%A8%E9%97%AE%E9%A2%98%E7%AA%A5%E8%A7%86/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;今天，我们来学习一些网站安全的基础知识。作为一名 Web 全栈工程师，不可避免地会经常性地面对网站安全的问题，因此有关安全的学习是十分必要的。这一讲我们就来看一些常见的安全问题，并了解它们相应的解决办法，加强安全意识。&lt;/p&gt;</description>
    </item>
    <item>
      <title>32__和搜索引擎的对话：SEO的原理和基础</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/32__%E5%92%8C%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E7%9A%84%E5%AF%B9%E8%AF%9Dseo%E7%9A%84%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/32__%E5%92%8C%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E7%9A%84%E5%AF%B9%E8%AF%9Dseo%E7%9A%84%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;今天，我们来聊一聊搜索引擎和 SEO（Search Engine Optimization）。当网站发布上线以后，我们希望通过适当的优化调整，让它可以被搜索引擎更好地“理解”，在用户使用搜索引擎搜索的时候，网站的内容可以更恰当地暴露给用户。&lt;/p&gt;</description>
    </item>
    <item>
      <title>33__特别放送：聊一聊程序员学英语</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/33__%E7%89%B9%E5%88%AB%E6%94%BE%E9%80%81%E8%81%8A%E4%B8%80%E8%81%8A%E7%A8%8B%E5%BA%8F%E5%91%98%E5%AD%A6%E8%8B%B1%E8%AF%AD/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/33__%E7%89%B9%E5%88%AB%E6%94%BE%E9%80%81%E8%81%8A%E4%B8%80%E8%81%8A%E7%A8%8B%E5%BA%8F%E5%91%98%E5%AD%A6%E8%8B%B1%E8%AF%AD/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;又到了相对轻松的特别放送时间，这一次，我想聊一聊程序员对于英语的学习。我在专栏最开始的 [学习路径] 中就提到了工程师的一些“基础”能力，比如数据结构和算法，当然也包括英语。当时我说，&lt;strong&gt;对于进阶的工程师来说，英文能力是突破天花板的一个必选项&lt;/strong&gt;，而且英文是所有进阶的软件工程师应当强化的能力，对全栈工程师来说更甚。但是我在当时并没有展开论述，为什么在中文技术材料如此丰富的今天，在工作环境是以中文为主的情况下，英语的学习依然那么重要。&lt;/p&gt;</description>
    </item>
    <item>
      <title>34__网站性能优化（上）</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/34__%E7%BD%91%E7%AB%99%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B8%8A/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/34__%E7%BD%91%E7%AB%99%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B8%8A/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;从今天开始我们进入“专题”这一章，本章的内容会涉及一些不适合单独归纳到前面任何一章的话题，比如这一讲和下一讲，我们来聊一聊网站的性能优化。&lt;/p&gt;</description>
    </item>
    <item>
      <title>35__网站性能优化（下）</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/35__%E7%BD%91%E7%AB%99%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B8%8B/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/35__%E7%BD%91%E7%AB%99%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B8%8B/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;上一讲我们介绍了网站性能优化的基础知识，包括性能指标、关注点，以及寻找性能瓶颈的思路。那么这一讲，我们就来介绍网站性能优化的具体方法，我们将从产品和架构、后端和持久层，以及前端和网络层这样三个部分分别展开。优化的角度和方法可以说花样繁多，我在这里举一些典型的例子，希望既能给你一些内容上的介绍，进而拓宽视野，也能给你一些思考角度上的启发。&lt;/p&gt;</description>
    </item>
    <item>
      <title>36__全栈开发中的算法（上）</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/36__%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E7%AE%97%E6%B3%95%E4%B8%8A/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/36__%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E7%AE%97%E6%B3%95%E4%B8%8A/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;在本专栏中，我们已经接触到了全栈开发中的一些算法了。在这一讲和下一讲中，我又精心挑选了几个比较重要的。**和单纯地从数学角度去介绍算法不同，我想结合几个全栈开发中实际、典型的问题场景，向你介绍这几个相关的重要算法。**毕竟，我们关心的算法，其实就是可以解决实际问题的方法的一种数学抽象。&lt;/p&gt;</description>
    </item>
    <item>
      <title>37__全栈开发中的算法（下）</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/37__%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E7%AE%97%E6%B3%95%E4%B8%8B/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/37__%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E7%AE%97%E6%B3%95%E4%B8%8B/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;今天，我们来继续学习一些全栈开发中影响深远的算法，我们这次的归类是无损压缩算法。无损压缩，顾名思义就是经过压缩以后，数据的大小降下来了，但是只要经过还原，原始数据是一点都不丢失的。和无损压缩对应的，显然就叫做“有损压缩”了，它们能够做到在牺牲一定程度原数据质量的基础上，比有损压缩获得额外的压缩比。&lt;/p&gt;</description>
    </item>
    <item>
      <title>38__分页的那些事儿</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/38__%E5%88%86%E9%A1%B5%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/38__%E5%88%86%E9%A1%B5%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;分页是全栈开发中非常常见的一个功能，绝大多数网站都需要用到。这个功能可谓麻雀虽小五脏俱全，是从呈现层、控制器层、到模型层，并和数据存储密切相关的真正的“全栈”功能。有时候你能见到一些清晰、明确的分页，也就是说，你能看到某一个内容的呈现被分成若干页，而当前又是在第几页；而有时候这个功能则是部分模糊了的，比方说，能翻页，但是并不显示总共有多少页。那今天，就让我们来了解一些典型的分页方法，理解分页的一些常见问题和它们的解决方式。&lt;/p&gt;</description>
    </item>
    <item>
      <title>39__XML、JSON、YAML比较</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/39__xmljsonyaml%E6%AF%94%E8%BE%83/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/39__xmljsonyaml%E6%AF%94%E8%BE%83/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;XML 和 JSON，是程序员几乎每天都会打交道的数据、特别是配置数据的承载格式。我想你心里应该有一个大致的印象，它们二者各有什么优劣，但是也许没有系统地比较过。那今天我们就把它们放到一起，丁是丁卯是卯地分析分析，对比一下它们各自的特点。另外，这些年来，对于配置，特别是复杂 DSL 的配置，YAML 也逐渐流行开来，因此我们也把它拿过来剖析一番。&lt;/p&gt;</description>
    </item>
    <item>
      <title>40__全栈衍化：让全栈意味着更多</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/40__%E5%85%A8%E6%A0%88%E8%A1%8D%E5%8C%96%E8%AE%A9%E5%85%A8%E6%A0%88%E6%84%8F%E5%91%B3%E7%9D%80%E6%9B%B4%E5%A4%9A/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/40__%E5%85%A8%E6%A0%88%E8%A1%8D%E5%8C%96%E8%AE%A9%E5%85%A8%E6%A0%88%E6%84%8F%E5%91%B3%E7%9D%80%E6%9B%B4%E5%A4%9A/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;专栏更到这里，我们已经把基于 Web 全栈的这棵大树，主要的枝枝丫丫大致都覆盖到了，可是，技术上我们总是希望“更进一步”。这棵大树所在的森林中，还有着广阔的领域等待着探索。当然，我想明确的是，我知道很多程序员还是会继续坚持这条路，因为全栈工程师本身是一个非常理想的职业发展方向，毕竟这个角色，大厂招，创业小团队更是需要；但同时我也知道，也有很多走在 Web 全栈路上的工程师，有着更多的想法，想尝试不一样的“可能性”，而这，就是我想说的个人的“全栈衍化”了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>87-全栈工程师修炼指南</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/87-%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/87-%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/</guid>
      <description></description>
    </item>
    <item>
      <title>导读__如何学习这个专栏？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/%E5%AF%BC%E8%AF%BB__%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0%E8%BF%99%E4%B8%AA%E4%B8%93%E6%A0%8F/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/%E5%AF%BC%E8%AF%BB__%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0%E8%BF%99%E4%B8%AA%E4%B8%93%E6%A0%8F/</guid>
      <description>&lt;p&gt;你好，欢迎来到“全栈工程师修炼指南”，我是专栏编辑王冬青，很高兴认识你。&lt;/p&gt;&#xA;&lt;p&gt;这个专栏我们邀请了西雅图 Oracle 首席软件工程师四火，历时半年打磨完成。为了帮助你更好地了解专栏的内容设计，收获更好的学习效果，我们特别提供了这篇导读，希望你能在这里找到学习这个专栏的最佳姿势。&lt;/p&gt;</description>
    </item>
    <item>
      <title>开篇词__从成长角度看，为什么你应该成为全栈工程师？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/%E5%BC%80%E7%AF%87%E8%AF%8D__%E4%BB%8E%E6%88%90%E9%95%BF%E8%A7%92%E5%BA%A6%E7%9C%8B%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%A0%E5%BA%94%E8%AF%A5%E6%88%90%E4%B8%BA%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/%E5%BC%80%E7%AF%87%E8%AF%8D__%E4%BB%8E%E6%88%90%E9%95%BF%E8%A7%92%E5%BA%A6%E7%9C%8B%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%A0%E5%BA%94%E8%AF%A5%E6%88%90%E4%B8%BA%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88/</guid>
      <description>&lt;p&gt;你好，我是软件工程师熊燚，网上大家都叫我四火，很高兴在这个专栏和你见面。&lt;/p&gt;&#xA;&lt;p&gt;先介绍下我自己。最早我在华为工作，曾是华为某大型视频门户和视频平台的初创人员，也是一名不折不扣的长期看护其基线版本的全栈工程师，这段经历其实为我的全栈技能打下了一个很好的基础。&lt;/p&gt;</description>
    </item>
    <item>
      <title>全栈回顾__成为更好的全栈工程师！</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/%E5%85%A8%E6%A0%88%E5%9B%9E%E9%A1%BE__%E6%88%90%E4%B8%BA%E6%9B%B4%E5%A5%BD%E7%9A%84%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/%E5%85%A8%E6%A0%88%E5%9B%9E%E9%A1%BE__%E6%88%90%E4%B8%BA%E6%9B%B4%E5%A5%BD%E7%9A%84%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;这是这个专栏的最后一讲了。&lt;/p&gt;&#xA;&lt;h2 id=&#34;回顾一下我们学到了什么&#34;&gt;回顾一下，我们学到了什么？&lt;/h2&gt;&#xA;&lt;p&gt;现在，是时候来回顾一下我们学过的 Web 全栈树了。这里我按章节进行划分，把每一讲的标题和主要内容做成了一张思维导图，帮助你回顾。&lt;/p&gt;</description>
    </item>
    <item>
      <title>学习路径__怎样成为一名优秀的全栈工程师？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E5%BE%84__%E6%80%8E%E6%A0%B7%E6%88%90%E4%B8%BA%E4%B8%80%E5%90%8D%E4%BC%98%E7%A7%80%E7%9A%84%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%BF%AE%E7%82%BC%E6%8C%87%E5%8D%97/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E5%BE%84__%E6%80%8E%E6%A0%B7%E6%88%90%E4%B8%BA%E4%B8%80%E5%90%8D%E4%BC%98%E7%A7%80%E7%9A%84%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88/</guid>
      <description>&lt;p&gt;你好，我是四火。&lt;/p&gt;&#xA;&lt;p&gt;每一项综合技术都有自己的特点，基于 Web 的全栈技术也不例外。它五花八门，涉及面广，同类技术多，技术迭代迅猛，技术资料新等等，就如同下山的猛虎，成为了很多程序员朋友迈向全栈大门的一道阻碍。经常听到这样的抱怨：&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
