<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>前端基础建设与架构30讲 on Docs</title>
    <link>https://politcloud.org/tags/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/</link>
    <description>Recent content in 前端基础建设与架构30讲 on Docs</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 10 Jan 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://politcloud.org/tags/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>01npm安装机制及企业级部署私服原理</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/01npm%E5%AE%89%E8%A3%85%E6%9C%BA%E5%88%B6%E5%8F%8A%E4%BC%81%E4%B8%9A%E7%BA%A7%E9%83%A8%E7%BD%B2%E7%A7%81%E6%9C%8D%E5%8E%9F%E7%90%86/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/01npm%E5%AE%89%E8%A3%85%E6%9C%BA%E5%88%B6%E5%8F%8A%E4%BC%81%E4%B8%9A%E7%BA%A7%E9%83%A8%E7%BD%B2%E7%A7%81%E6%9C%8D%E5%8E%9F%E7%90%86/</guid>
      <description>&lt;p&gt;前端工程化离不开 npm（node package manager） 或者 Yarn 这些管理工具。npm 或 Yarn 在工程项目中，除了负责依赖的安装和维护以外，还能通过 npm scripts 串联起各个职能部分，让独立的环节自动运转起来。&lt;/p&gt;</description>
    </item>
    <item>
      <title>02Yarn的安装理念及如何破解依赖管理困境</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/02yarn%E7%9A%84%E5%AE%89%E8%A3%85%E7%90%86%E5%BF%B5%E5%8F%8A%E5%A6%82%E4%BD%95%E7%A0%B4%E8%A7%A3%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86%E5%9B%B0%E5%A2%83/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/02yarn%E7%9A%84%E5%AE%89%E8%A3%85%E7%90%86%E5%BF%B5%E5%8F%8A%E5%A6%82%E4%BD%95%E7%A0%B4%E8%A7%A3%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86%E5%9B%B0%E5%A2%83/</guid>
      <description>&lt;p&gt;01 讲我们讲了 npm 的技巧和原理，但其实在前端工程化这个主题上除了 npm，还有不可忽视的 Yarn。&lt;/p&gt;&#xA;&lt;p&gt;Yarn 是一个由 Facebook、Google、Exponent 和 Tilde 构建的新的 JavaScript 包管理器。它的出现是为了解决历史上 npm 的某些不足（比如 npm 对于依赖的完整性和一致性保障，以及 npm 安装速度过慢的问题等），虽然 npm 目前经过版本迭代汲取了 Yarn 一些优势特点（比如一致性安装校验算法等），但我们依然有必要关注 Yarn 的思想和理念。&lt;/p&gt;</description>
    </item>
    <item>
      <title>03CI环境上的npm优化及更多工程化问题解析</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/03ci%E7%8E%AF%E5%A2%83%E4%B8%8A%E7%9A%84npm%E4%BC%98%E5%8C%96%E5%8F%8A%E6%9B%B4%E5%A4%9A%E5%B7%A5%E7%A8%8B%E5%8C%96%E9%97%AE%E9%A2%98%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/03ci%E7%8E%AF%E5%A2%83%E4%B8%8A%E7%9A%84npm%E4%BC%98%E5%8C%96%E5%8F%8A%E6%9B%B4%E5%A4%9A%E5%B7%A5%E7%A8%8B%E5%8C%96%E9%97%AE%E9%A2%98%E8%A7%A3%E6%9E%90/</guid>
      <description>&lt;p&gt;前两讲，我们围绕着 npm 和 Yarn 的核心原理展开了讲解，实际上 npm 和 Yarn 涉及项目的方方面面，加之本身设计复杂度较高，这一讲我将继续讲解 CI 环境上的 npm 优化以及更多工程化相关问题。希望通过这一讲的学习你能够学习到 CI 环境上使用包管理工具的方方面面，并能够解决非本地环境下（一般是在容器上）使用包管理工具解决相关问题。&lt;/p&gt;</description>
    </item>
    <item>
      <title>04横向对比主流构建工具，了解构建工具的设计考量</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/04%E6%A8%AA%E5%90%91%E5%AF%B9%E6%AF%94%E4%B8%BB%E6%B5%81%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7%E4%BA%86%E8%A7%A3%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7%E7%9A%84%E8%AE%BE%E8%AE%A1%E8%80%83%E9%87%8F/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/04%E6%A8%AA%E5%90%91%E5%AF%B9%E6%AF%94%E4%B8%BB%E6%B5%81%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7%E4%BA%86%E8%A7%A3%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7%E7%9A%84%E8%AE%BE%E8%AE%A1%E8%80%83%E9%87%8F/</guid>
      <description>&lt;p&gt;现代化前端架构离不开构建工具的加持。构建工具的选择、理解和应用决定了是否能够打造一个流畅且接近完美的开发体验。这一讲，我们通过“横向对比构建工具”这个非常新颖的角度，来了解构建工具背后的架构理念。&lt;/p&gt;</description>
    </item>
    <item>
      <title>05Vite实现：从源码分析出发，构建bundlele开发工程</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/05vite%E5%AE%9E%E7%8E%B0%E4%BB%8E%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E5%87%BA%E5%8F%91%E6%9E%84%E5%BB%BAbundlele%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/05vite%E5%AE%9E%E7%8E%B0%E4%BB%8E%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E5%87%BA%E5%8F%91%E6%9E%84%E5%BB%BAbundlele%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B/</guid>
      <description>&lt;p&gt;通过上一讲的内容，相信你已经了解了现代化构建流程和处理内容。这一讲，我将结合 Webpack 为主的成熟方案现阶段的“不足”，从源码实现角度带你分析 Vite 的设计哲学，同时为“解析 Webpack 源码，实现自己的构建工具”一讲内容打下基础，循序渐进，最终你将能够开发一个自己的构建工具。&lt;/p&gt;</description>
    </item>
    <item>
      <title>06core-j及垫片理念：设计一个“最完美”的Polyfill方案</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/06core-j%E5%8F%8A%E5%9E%AB%E7%89%87%E7%90%86%E5%BF%B5%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E6%9C%80%E5%AE%8C%E7%BE%8E%E7%9A%84polyfill%E6%96%B9%E6%A1%88/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/06core-j%E5%8F%8A%E5%9E%AB%E7%89%87%E7%90%86%E5%BF%B5%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E6%9C%80%E5%AE%8C%E7%BE%8E%E7%9A%84polyfill%E6%96%B9%E6%A1%88/</guid>
      <description>&lt;p&gt;即便你不知道 core-js，也一定在项目中直接或间接地使用过它。core-js 是一个 JavaScript 标准库，它包含了 ECMAScript 2020 在内的多项特性的 polyfills，以及 ECMAScript 在 proposals 阶段的特性、WHATWG/W3C 新特性等。因此它是一个现代化前端项目的“标准套件”。&lt;/p&gt;</description>
    </item>
    <item>
      <title>07梳理混乱的Babel，不再被编译报错困扰</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/07%E6%A2%B3%E7%90%86%E6%B7%B7%E4%B9%B1%E7%9A%84babel%E4%B8%8D%E5%86%8D%E8%A2%AB%E7%BC%96%E8%AF%91%E6%8A%A5%E9%94%99%E5%9B%B0%E6%89%B0/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/07%E6%A2%B3%E7%90%86%E6%B7%B7%E4%B9%B1%E7%9A%84babel%E4%B8%8D%E5%86%8D%E8%A2%AB%E7%BC%96%E8%AF%91%E6%8A%A5%E9%94%99%E5%9B%B0%E6%89%B0/</guid>
      <description>&lt;p&gt;今天我和你分享的话题和 Babel 相关。Babel 在前端中占有举足轻重的历史地位，几乎所有的大型前端应用项目都离不开 Babel 的支持。同时，Babel 不仅仅是一个工具，更是一个工具链（toolchain），是前端基建中绝对重要的一环。&lt;/p&gt;</description>
    </item>
    <item>
      <title>08探索前端工具链生态，制定一个统一标准化babel-preet</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/08%E6%8E%A2%E7%B4%A2%E5%89%8D%E7%AB%AF%E5%B7%A5%E5%85%B7%E9%93%BE%E7%94%9F%E6%80%81%E5%88%B6%E5%AE%9A%E4%B8%80%E4%B8%AA%E7%BB%9F%E4%B8%80%E6%A0%87%E5%87%86%E5%8C%96babel-preet/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/08%E6%8E%A2%E7%B4%A2%E5%89%8D%E7%AB%AF%E5%B7%A5%E5%85%B7%E9%93%BE%E7%94%9F%E6%80%81%E5%88%B6%E5%AE%9A%E4%B8%80%E4%B8%AA%E7%BB%9F%E4%B8%80%E6%A0%87%E5%87%86%E5%8C%96babel-preet/</guid>
      <description>&lt;p&gt;前端生态有着与生俱来的混乱和与之抗衡的秩序，有着新生力量的崛起以及随之而来的规范约束。在这个背景下，正面来看，欣欣向荣的前端生态带来了广阔的发展前景，但也造成了一些困扰。比如，我们都经历过在前端基础设施建设中，被各种冗杂的配置项困扰，一不小心就是 Error，步履蹒跚。也许我们可以通过搜索引擎暂时解决问题，但是恍恍惚惚、难以洞悉问题本源。&lt;/p&gt;</description>
    </item>
    <item>
      <title>09从实战出发，从0到1构建一个符合标准的公共库</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/09%E4%BB%8E%E5%AE%9E%E6%88%98%E5%87%BA%E5%8F%91%E4%BB%8E0%E5%88%B01%E6%9E%84%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AC%A6%E5%90%88%E6%A0%87%E5%87%86%E7%9A%84%E5%85%AC%E5%85%B1%E5%BA%93/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/09%E4%BB%8E%E5%AE%9E%E6%88%98%E5%87%BA%E5%8F%91%E4%BB%8E0%E5%88%B01%E6%9E%84%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AC%A6%E5%90%88%E6%A0%87%E5%87%86%E7%9A%84%E5%85%AC%E5%85%B1%E5%BA%93/</guid>
      <description>&lt;p&gt;上一讲我们从 Babel 编译预设的角度理清了前端生态中的公共库和应用的丝缕关联，这一讲我们就从实战出发，动手剖析一个公共库从设计到完成的过程。&lt;/p&gt;&#xA;&lt;p&gt;（源码出处：Creating a simple npm library to use in and out of the browser）&lt;/p&gt;</description>
    </item>
    <item>
      <title>10代码拆分和按需加载：缩减bundleize，把性能做到极致</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/10%E4%BB%A3%E7%A0%81%E6%8B%86%E5%88%86%E5%92%8C%E6%8C%89%E9%9C%80%E5%8A%A0%E8%BD%BD%E7%BC%A9%E5%87%8Fbundleize%E6%8A%8A%E6%80%A7%E8%83%BD%E5%81%9A%E5%88%B0%E6%9E%81%E8%87%B4/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/10%E4%BB%A3%E7%A0%81%E6%8B%86%E5%88%86%E5%92%8C%E6%8C%89%E9%9C%80%E5%8A%A0%E8%BD%BD%E7%BC%A9%E5%87%8Fbundleize%E6%8A%8A%E6%80%A7%E8%83%BD%E5%81%9A%E5%88%B0%E6%9E%81%E8%87%B4/</guid>
      <description>&lt;p&gt;这一讲，我们将对代码拆分和按需加载这一话题进行解析。&lt;/p&gt;&#xA;&lt;p&gt;随着 Webpack 等构建工具的能力越来越强，开发者在构建阶段可以随心所欲打造项目流程，代码拆分和按需加载技术在业界曝光量也越来越高。事实上，代码拆分和按需加载的设计决定着工程化构建的结果，这将直接影响应用的性能表现，因为合理的加载时机和代码拆分能够使初始代码体积更小，页面加载更快。因此，如何合理设计代码拆分和按需加载，是对一个项目架构情况的直接考量。&lt;/p&gt;</description>
    </item>
    <item>
      <title>11TreeShaking：移除JavaScript上下文中的未引用代码</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/11treeshaking%E7%A7%BB%E9%99%A4javascript%E4%B8%8A%E4%B8%8B%E6%96%87%E4%B8%AD%E7%9A%84%E6%9C%AA%E5%BC%95%E7%94%A8%E4%BB%A3%E7%A0%81/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/11treeshaking%E7%A7%BB%E9%99%A4javascript%E4%B8%8A%E4%B8%8B%E6%96%87%E4%B8%AD%E7%9A%84%E6%9C%AA%E5%BC%95%E7%94%A8%E4%BB%A3%E7%A0%81/</guid>
      <description>&lt;p&gt;时至今日，Tree Shaking 对于前端工程师来说，已经不是一个陌生的名词了。顾名思义：Tree Shaking 译为“摇树”，它通常用于描述移除 JavaScript 上下文中的未引用代码（dead-code）。&lt;/p&gt;</description>
    </item>
    <item>
      <title>12如何理解AST实现和编译原理？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/12%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3ast%E5%AE%9E%E7%8E%B0%E5%92%8C%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/12%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3ast%E5%AE%9E%E7%8E%B0%E5%92%8C%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/</guid>
      <description>&lt;p&gt;经常留意前端开发技术的同学一定对 AST 技术不陌生。AST 技术是现代化前端基建和工程化建设的基石：Babel、Webpack、ESLint、代码压缩工具等耳熟能详的工程化基建工具或流程，都离不开 AST 技术；Vue、React 等经典前端框架，也离不开基于 AST 技术的编译。&lt;/p&gt;</description>
    </item>
    <item>
      <title>13工程化思维处理方案：如何实现应用主题切换功能？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/13%E5%B7%A5%E7%A8%8B%E5%8C%96%E6%80%9D%E7%BB%B4%E5%A4%84%E7%90%86%E6%96%B9%E6%A1%88%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%BA%94%E7%94%A8%E4%B8%BB%E9%A2%98%E5%88%87%E6%8D%A2%E5%8A%9F%E8%83%BD/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/13%E5%B7%A5%E7%A8%8B%E5%8C%96%E6%80%9D%E7%BB%B4%E5%A4%84%E7%90%86%E6%96%B9%E6%A1%88%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%BA%94%E7%94%A8%E4%B8%BB%E9%A2%98%E5%88%87%E6%8D%A2%E5%8A%9F%E8%83%BD/</guid>
      <description>&lt;p&gt;前几讲内容，我们主要围绕 JavaScript 和项目相关工程化方案展开。实际上，在前端基础建设中，样式方案的处理也必不可少。这一讲，就让我们设计一个工程化主题切换功能，并梳理现代前端样式的解决方案。&lt;/p&gt;</description>
    </item>
    <item>
      <title>14解析Webpack源码，实现自己的构建工具</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/14%E8%A7%A3%E6%9E%90webpack%E6%BA%90%E7%A0%81%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%B7%B1%E7%9A%84%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/14%E8%A7%A3%E6%9E%90webpack%E6%BA%90%E7%A0%81%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%B7%B1%E7%9A%84%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/</guid>
      <description>&lt;p&gt;前端工程化和基础建设这个话题，自然少不了分析构建工具。作为前端工程中最常见、最经典的构建工具，Webpack 必须要有一个独立小节进行精讲。可是，关于 Webpack 什么样的内容才更有意义呢？当前社区，Webpack 插件编写、loader 编写相关内容已经非常多了，甚至 Tapable 机制也已经有了涉猎。&lt;/p&gt;</description>
    </item>
    <item>
      <title>15从编译到运行，跨端解析小程序多端方案</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/15%E4%BB%8E%E7%BC%96%E8%AF%91%E5%88%B0%E8%BF%90%E8%A1%8C%E8%B7%A8%E7%AB%AF%E8%A7%A3%E6%9E%90%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%A4%9A%E7%AB%AF%E6%96%B9%E6%A1%88/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/15%E4%BB%8E%E7%BC%96%E8%AF%91%E5%88%B0%E8%BF%90%E8%A1%8C%E8%B7%A8%E7%AB%AF%E8%A7%A3%E6%9E%90%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%A4%9A%E7%AB%AF%E6%96%B9%E6%A1%88/</guid>
      <description>&lt;p&gt;客观来说，小程序在用户规模及商业化方面的巨大成功，并不能掩盖其技术环节的设计问题和痛点。从孱弱简陋的小程序开发体验，到整体架构实现，再到小程序 APIs 碎片化现状，就注定了小程序多端方案层出不穷，展现出百家争鸣的局面。&lt;/p&gt;</description>
    </item>
    <item>
      <title>16原生跨平台技术：移动端跨平台到Flutter的技术变革</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/16%E5%8E%9F%E7%94%9F%E8%B7%A8%E5%B9%B3%E5%8F%B0%E6%8A%80%E6%9C%AF%E7%A7%BB%E5%8A%A8%E7%AB%AF%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%88%B0flutter%E7%9A%84%E6%8A%80%E6%9C%AF%E5%8F%98%E9%9D%A9/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/16%E5%8E%9F%E7%94%9F%E8%B7%A8%E5%B9%B3%E5%8F%B0%E6%8A%80%E6%9C%AF%E7%A7%BB%E5%8A%A8%E7%AB%AF%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%88%B0flutter%E7%9A%84%E6%8A%80%E6%9C%AF%E5%8F%98%E9%9D%A9/</guid>
      <description>&lt;p&gt;跨平台其实是一个老生常谈的话题，技术方案也是历经变迁，但始终热点不断，究其原因有二：&lt;/p&gt;&#xA;&lt;p&gt;首先，移动端原生技术需要配备 iOS 和 Android 两套团队和技术栈，且存在发版周期限制，开发效率上存在天然缺陷；&lt;/p&gt;</description>
    </item>
    <item>
      <title>17学习axio：封装一个结构清晰的Fetch库</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/17%E5%AD%A6%E4%B9%A0axio%E5%B0%81%E8%A3%85%E4%B8%80%E4%B8%AA%E7%BB%93%E6%9E%84%E6%B8%85%E6%99%B0%E7%9A%84fetch%E5%BA%93/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/17%E5%AD%A6%E4%B9%A0axio%E5%B0%81%E8%A3%85%E4%B8%80%E4%B8%AA%E7%BB%93%E6%9E%84%E6%B8%85%E6%99%B0%E7%9A%84fetch%E5%BA%93/</guid>
      <description>&lt;p&gt;从这一讲开始，我们将进入核心框架原理与代码设计模式的学习。任何一个动态应用的实现，都离不开前后端的互动配合。前端发送请求获取数据是开发者必不可少的场景。正因为如此，每一个前端项目都有必要接入一个请求库。&lt;/p&gt;</description>
    </item>
    <item>
      <title>18对比Koa和Redux：分析前端中的中间件理念</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/18%E5%AF%B9%E6%AF%94koa%E5%92%8Credux%E5%88%86%E6%9E%90%E5%89%8D%E7%AB%AF%E4%B8%AD%E7%9A%84%E4%B8%AD%E9%97%B4%E4%BB%B6%E7%90%86%E5%BF%B5/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/18%E5%AF%B9%E6%AF%94koa%E5%92%8Credux%E5%88%86%E6%9E%90%E5%89%8D%E7%AB%AF%E4%B8%AD%E7%9A%84%E4%B8%AD%E9%97%B4%E4%BB%B6%E7%90%86%E5%BF%B5/</guid>
      <description>&lt;p&gt;上一讲，我们通过分析 axios 源码，延伸了“如何设计一个请求公共库”，其中提到了不同层次级别的分层理念。这一讲，我们继续讨论代码设计这一话题，聚焦中间件化和插件化理念。并通过实现一个中间件化的请求库和上一节内容融会贯通。&lt;/p&gt;</description>
    </item>
    <item>
      <title>19如何理解软件开发灵活性和高定制性？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/19%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E7%81%B5%E6%B4%BB%E6%80%A7%E5%92%8C%E9%AB%98%E5%AE%9A%E5%88%B6%E6%80%A7/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/19%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E7%81%B5%E6%B4%BB%E6%80%A7%E5%92%8C%E9%AB%98%E5%AE%9A%E5%88%B6%E6%80%A7/</guid>
      <description>&lt;p&gt;前两讲我们介绍了前端开发领域常见的开发模式和封装思想，这一讲，我们将该主题升华，聊一聊软件开发灵活性和高定制性这个话题。&lt;/p&gt;&#xA;&lt;p&gt;业务需求是烦琐多变的，因此开发灵活性至关重要，这直接决定了开发效率，而与灵活性相伴相生的话题就是定制性。本讲主要从设计模式和函数式思想入手，从实际代码出发，来阐释灵活性和高定制性。&lt;/p&gt;</description>
    </item>
    <item>
      <title>20如何理解前端中面向对象的思想？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/20%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3%E5%89%8D%E7%AB%AF%E4%B8%AD%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%80%9D%E6%83%B3/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/20%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3%E5%89%8D%E7%AB%AF%E4%B8%AD%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%80%9D%E6%83%B3/</guid>
      <description>&lt;p&gt;“对象”——这个概念在编程中非常重要，任何语言和领域的开发者都应该具有面向对象思维，才能够有效运用对象。良好的面向对象系统设计将是应用强健性、可维护性和可扩展性的关键；反之，如果面向对象环节有失误，将成为项目的灾难。&lt;/p&gt;</description>
    </item>
    <item>
      <title>21如何利用JavaScript实现经典数据结构？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/21%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8javascript%E5%AE%9E%E7%8E%B0%E7%BB%8F%E5%85%B8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/21%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8javascript%E5%AE%9E%E7%8E%B0%E7%BB%8F%E5%85%B8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</guid>
      <description>&lt;p&gt;前面几讲我们从编程思维的角度分析了软件设计哲学。从这一讲开始，我们将深入数据结构这个话题。&lt;/p&gt;&#xA;&lt;p&gt;数据结构是计算机中组织和存储数据的特定方式，它的目的是方便且高效地对数据进行访问和修改。数据结构体现了数据之间的关系，以及操作数据的一系列方法。数据又是程序的基本单元，因此无论哪种语言、哪种领域，都离不开数据结构；另一方面，数据结构是算法的基础，其本身也包含了算法的部分内容。也就是说，想要掌握算法，有一个坚固的数据结构基础是必要条件。&lt;/p&gt;</description>
    </item>
    <item>
      <title>22剖析前端中的数据结构应用场景</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/22%E5%89%96%E6%9E%90%E5%89%8D%E7%AB%AF%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/22%E5%89%96%E6%9E%90%E5%89%8D%E7%AB%AF%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF/</guid>
      <description>&lt;p&gt;上一讲我们使用 JavaScript 实现了几种常见的数据结构。事实上，前端领域到处体现着数据结构的应用，尤其随着需求的复杂度上升，前端工程师越来越离不开数据结构。React、Vue 这些设计精巧的框架，在线文档编辑系统、大型管理系统，甚至一个简单的检索需求，都离不开数据结构的支持。是否能够掌握这个难点内容，将是进阶的重要考量。&lt;/p&gt;</description>
    </item>
    <item>
      <title>23npmcript：打造一体化的构建和部署流程</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/23npmcript%E6%89%93%E9%80%A0%E4%B8%80%E4%BD%93%E5%8C%96%E7%9A%84%E6%9E%84%E5%BB%BA%E5%92%8C%E9%83%A8%E7%BD%B2%E6%B5%81%E7%A8%8B/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/23npmcript%E6%89%93%E9%80%A0%E4%B8%80%E4%BD%93%E5%8C%96%E7%9A%84%E6%9E%84%E5%BB%BA%E5%92%8C%E9%83%A8%E7%BD%B2%E6%B5%81%E7%A8%8B/</guid>
      <description>&lt;p&gt;之前我们提到过，一个顺畅的基建流程离不开 npm scripts。npm scripts 将工程化的各个环节串联起来，相信任何一个现代化的项目都有自己的 npm scripts 设计。那么作为架构师或资深开发者，我们如何设计并实现项目配套的 npm scripts 呢？关于 npm scripts 我们如何进行封装抽象，做到复用或基建统一呢？&lt;/p&gt;</description>
    </item>
    <item>
      <title>24自动化代码检查：剖析Lint工具和工程化接入&amp;优化方案</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/24%E8%87%AA%E5%8A%A8%E5%8C%96%E4%BB%A3%E7%A0%81%E6%A3%80%E6%9F%A5%E5%89%96%E6%9E%90lint%E5%B7%A5%E5%85%B7%E5%92%8C%E5%B7%A5%E7%A8%8B%E5%8C%96%E6%8E%A5%E5%85%A5%E4%BC%98%E5%8C%96%E6%96%B9%E6%A1%88/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/24%E8%87%AA%E5%8A%A8%E5%8C%96%E4%BB%A3%E7%A0%81%E6%A3%80%E6%9F%A5%E5%89%96%E6%9E%90lint%E5%B7%A5%E5%85%B7%E5%92%8C%E5%B7%A5%E7%A8%8B%E5%8C%96%E6%8E%A5%E5%85%A5%E4%BC%98%E5%8C%96%E6%96%B9%E6%A1%88/</guid>
      <description>&lt;p&gt;不管是团队的扩张还是业务的发展，都会导致项目代码量出现爆炸式增长。为了防止“野蛮生长”现象，我们需要有一个良好的技术选型和成熟的架构做支撑，也需要团队中每一个开发者都能用心维护项目。在此方向上，除了人工 code review 以外，相信大家对于一些规范工具并不陌生。&lt;/p&gt;</description>
    </item>
    <item>
      <title>25如何设计一个前端&#43;移动端离线包方案？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/25%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E5%89%8D%E7%AB%AF&#43;%E7%A7%BB%E5%8A%A8%E7%AB%AF%E7%A6%BB%E7%BA%BF%E5%8C%85%E6%96%B9%E6%A1%88/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/25%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E5%89%8D%E7%AB%AF&#43;%E7%A7%BB%E5%8A%A8%E7%AB%AF%E7%A6%BB%E7%BA%BF%E5%8C%85%E6%96%B9%E6%A1%88/</guid>
      <description>&lt;p&gt;我在《导读：前端技术发展回顾和架构升级之路》中提到了多种渲染方式，而以离线包方案为代表的方案，属于 NSR（Native Side Rendering），这是大前端配合的典型案例。这一讲，我们就从 0 到 1 分析一个前端+移动端离线包方案。&lt;/p&gt;</description>
    </item>
    <item>
      <title>26如何设计一个“万能”项目脚手架？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/26%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E4%B8%87%E8%83%BD%E9%A1%B9%E7%9B%AE%E8%84%9A%E6%89%8B%E6%9E%B6/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/26%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E4%B8%87%E8%83%BD%E9%A1%B9%E7%9B%AE%E8%84%9A%E6%89%8B%E6%9E%B6/</guid>
      <description>&lt;p&gt;脚手架是工程化中不可缺少的一环。究竟什么是脚手架呢？广义上来说，脚手架就是为了保证各施工过程顺利进行而搭设的工作平台。&lt;/p&gt;&#xA;&lt;p&gt;编程领域的脚手架主要为了完成新项目的启动和搭建，能够帮助开发者提升效率和开发体验。对于前端来说，从零开始建立一个项目是复杂的，因此也就存在了较多类型的脚手架：&lt;/p&gt;</description>
    </item>
    <item>
      <title>27同构渲染架构：实现一个SSR应用</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/27%E5%90%8C%E6%9E%84%E6%B8%B2%E6%9F%93%E6%9E%B6%E6%9E%84%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AAssr%E5%BA%94%E7%94%A8/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/27%E5%90%8C%E6%9E%84%E6%B8%B2%E6%9F%93%E6%9E%B6%E6%9E%84%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AAssr%E5%BA%94%E7%94%A8/</guid>
      <description>&lt;p&gt;从这一讲开始，我们正式进入 Node.js 主题学习。作为 Node.js 技术的重要应用场景，同构渲染 SSR 应用尤其重要。不管是服务端渲染还是服务端渲染衍生出的同构应用，现在来看已经并不新鲜了，实现起来也并不困难。可是有的开发者认为：同构应用不就是调用一个&#xA;renderToString&#xA;（React 中）类似的 API 吗？&lt;/p&gt;</description>
    </item>
    <item>
      <title>28设计性能守卫系统：完善CICD流程</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/28%E8%AE%BE%E8%AE%A1%E6%80%A7%E8%83%BD%E5%AE%88%E5%8D%AB%E7%B3%BB%E7%BB%9F%E5%AE%8C%E5%96%84cicd%E6%B5%81%E7%A8%8B/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/28%E8%AE%BE%E8%AE%A1%E6%80%A7%E8%83%BD%E5%AE%88%E5%8D%AB%E7%B3%BB%E7%BB%9F%E5%AE%8C%E5%96%84cicd%E6%B5%81%E7%A8%8B/</guid>
      <description>&lt;p&gt;性能始终是宏大的话题，前面几讲我们或多或少都有涉及性能优化的各种方案。其实，除了传统的性能优化手段以外，我们还需要对性能进行把关，目的是在性能恶化时有所感知、有所防控。那么，一个性能守卫系统即性能监控系统究竟应该如何设计呢？&lt;/p&gt;</description>
    </item>
    <item>
      <title>29实践打造网关：改造企业BFF方案</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/29%E5%AE%9E%E8%B7%B5%E6%89%93%E9%80%A0%E7%BD%91%E5%85%B3%E6%94%B9%E9%80%A0%E4%BC%81%E4%B8%9Abff%E6%96%B9%E6%A1%88/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/29%E5%AE%9E%E8%B7%B5%E6%89%93%E9%80%A0%E7%BD%91%E5%85%B3%E6%94%B9%E9%80%A0%E4%BC%81%E4%B8%9Abff%E6%96%B9%E6%A1%88/</guid>
      <description>&lt;p&gt;前几讲我们分别介绍了 Node.js 在同构项目以及性能守卫服务中的应用。结合当下热点，这一讲我们继续深入讲解 Node.js 另外一个重要的应用场景：企业级 BFF 网关。&lt;/p&gt;&#xA;&lt;p&gt;网关这个话题可以和微服务、Serverless 等概念相结合，想象空间无限大，同时我们又要深入网关实现代码，抽丝剥茧。下面我们就开始今天内容的学习，请你做好准备。&lt;/p&gt;</description>
    </item>
    <item>
      <title>30实现高可用：使用Puppeteer生成性能最优的海报系统</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/30%E5%AE%9E%E7%8E%B0%E9%AB%98%E5%8F%AF%E7%94%A8%E4%BD%BF%E7%94%A8puppeteer%E7%94%9F%E6%88%90%E6%80%A7%E8%83%BD%E6%9C%80%E4%BC%98%E7%9A%84%E6%B5%B7%E6%8A%A5%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/30%E5%AE%9E%E7%8E%B0%E9%AB%98%E5%8F%AF%E7%94%A8%E4%BD%BF%E7%94%A8puppeteer%E7%94%9F%E6%88%90%E6%80%A7%E8%83%BD%E6%9C%80%E4%BC%98%E7%9A%84%E6%B5%B7%E6%8A%A5%E7%B3%BB%E7%BB%9F/</guid>
      <description>&lt;p&gt;在前面第 28 讲“设计性能守卫系统：完善 CI/CD 流程”中我们提到了 Puppeteer。事实上，以 Puppeteer 为代表的 Headless 浏览器在 Node.js 中的应用极为广泛，这一讲，就让我们对 Puppeteer 进行深入分析和应用。&lt;/p&gt;</description>
    </item>
    <item>
      <title>导读前端技术发展回顾和架构升级之路</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/%E5%AF%BC%E8%AF%BB%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E5%8F%91%E5%B1%95%E5%9B%9E%E9%A1%BE%E5%92%8C%E6%9E%B6%E6%9E%84%E5%8D%87%E7%BA%A7%E4%B9%8B%E8%B7%AF/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/%E5%AF%BC%E8%AF%BB%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E5%8F%91%E5%B1%95%E5%9B%9E%E9%A1%BE%E5%92%8C%E6%9E%B6%E6%9E%84%E5%8D%87%E7%BA%A7%E4%B9%8B%E8%B7%AF/</guid>
      <description>&lt;p&gt;这一讲我将从整体上梳理前端开发的演进历史，并从渲染方案架构升级的案例出发，带你了解现代化开发的方向。这部分内容并不涉及具体技术细节，更多的是作为本专栏的导读，带你体会现代化前端架构和基建的背景以及目前前端开发的大环境。&lt;/p&gt;</description>
    </item>
    <item>
      <title>结束语再谈项目的基建和架构，个人的价值和方向</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/%E7%BB%93%E6%9D%9F%E8%AF%AD%E5%86%8D%E8%B0%88%E9%A1%B9%E7%9B%AE%E7%9A%84%E5%9F%BA%E5%BB%BA%E5%92%8C%E6%9E%B6%E6%9E%84%E4%B8%AA%E4%BA%BA%E7%9A%84%E4%BB%B7%E5%80%BC%E5%92%8C%E6%96%B9%E5%90%91/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/%E7%BB%93%E6%9D%9F%E8%AF%AD%E5%86%8D%E8%B0%88%E9%A1%B9%E7%9B%AE%E7%9A%84%E5%9F%BA%E5%BB%BA%E5%92%8C%E6%9E%B6%E6%9E%84%E4%B8%AA%E4%BA%BA%E7%9A%84%E4%BB%B7%E5%80%BC%E5%92%8C%E6%96%B9%E5%90%91/</guid>
      <description>&lt;p&gt;在西班牙语中，有一个很特别的的词语叫“Sobremesa”，它专指“吃完饭后，大家在饭桌上意犹未尽交谈的那段短暂而美好时光”。现在，我们的专栏也已经全部更新完毕，历经“枯燥的程序知识”，我希望在最后的内容中，大家能够放松心情，畅所欲言。今天，我将会从“现代项目库的编写”谈基建和架构，从“如何保持竞争力”谈个人价值和方向。就让这些非技术内容作为全部专栏内容的结束语吧。&lt;/p&gt;</description>
    </item>
    <item>
      <title>开篇词像架构师一样思考，突破技术成长瓶颈</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/%E5%BC%80%E7%AF%87%E8%AF%8D%E5%83%8F%E6%9E%B6%E6%9E%84%E5%B8%88%E4%B8%80%E6%A0%B7%E6%80%9D%E8%80%83%E7%AA%81%E7%A0%B4%E6%8A%80%E6%9C%AF%E6%88%90%E9%95%BF%E7%93%B6%E9%A2%88/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80%E5%BB%BA%E8%AE%BE%E4%B8%8E%E6%9E%B6%E6%9E%8430%E8%AE%B2/%E5%BC%80%E7%AF%87%E8%AF%8D%E5%83%8F%E6%9E%B6%E6%9E%84%E5%B8%88%E4%B8%80%E6%A0%B7%E6%80%9D%E8%80%83%E7%AA%81%E7%A0%B4%E6%8A%80%E6%9C%AF%E6%88%90%E9%95%BF%E7%93%B6%E9%A2%88/</guid>
      <description>&lt;p&gt;透过工程基建，架构有迹可循。你好，我是侯策（LucasHC），目前任职于某互联网独角兽公司，带领 6 条业务线前端团队，负责架构设计和核心开发、工程方案调研和选型，以及团队管理、人才梯队建设等工作。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
