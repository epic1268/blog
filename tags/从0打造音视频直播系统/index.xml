<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>从0打造音视频直播系统 on Docs</title>
    <link>https://politcloud.org/tags/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/</link>
    <description>Recent content in 从0打造音视频直播系统 on Docs</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 10 Jan 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://politcloud.org/tags/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>01_原来通过浏览器访问摄像头这么容易</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/01_%E5%8E%9F%E6%9D%A5%E9%80%9A%E8%BF%87%E6%B5%8F%E8%A7%88%E5%99%A8%E8%AE%BF%E9%97%AE%E6%91%84%E5%83%8F%E5%A4%B4%E8%BF%99%E4%B9%88%E5%AE%B9%E6%98%93/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/01_%E5%8E%9F%E6%9D%A5%E9%80%9A%E8%BF%87%E6%B5%8F%E8%A7%88%E5%99%A8%E8%AE%BF%E9%97%AE%E6%91%84%E5%83%8F%E5%A4%B4%E8%BF%99%E4%B9%88%E5%AE%B9%E6%98%93/</guid>
      <description>&lt;p&gt;对于很多从事 JavaScript 开发的同学来说，基本都认为 JavaScript 是专门做页面控制的。如果用 JavaScript 做音视频处理，那真是很难想象的事儿。你可能首先想到的问题是：JavaScript 或者浏览器的性能跟得上吗？&lt;/p&gt;</description>
    </item>
    <item>
      <title>02_如何通过WebRTC进行音视频设备检测呢？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/02_%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87webrtc%E8%BF%9B%E8%A1%8C%E9%9F%B3%E8%A7%86%E9%A2%91%E8%AE%BE%E5%A4%87%E6%A3%80%E6%B5%8B%E5%91%A2/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/02_%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87webrtc%E8%BF%9B%E8%A1%8C%E9%9F%B3%E8%A7%86%E9%A2%91%E8%AE%BE%E5%A4%87%E6%A3%80%E6%B5%8B%E5%91%A2/</guid>
      <description>&lt;p&gt;使用过音视频会议或在线教育等实时互动软件的同学都知道，在打开摄像头（Camera）或麦克风（Micphone）的时候，首先要对其进行检测，检测的内容包括：&lt;/p&gt;</description>
    </item>
    <item>
      <title>03_如何使用浏览器给自己拍照呢？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/03_%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E7%BB%99%E8%87%AA%E5%B7%B1%E6%8B%8D%E7%85%A7%E5%91%A2/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/03_%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E7%BB%99%E8%87%AA%E5%B7%B1%E6%8B%8D%E7%85%A7%E5%91%A2/</guid>
      <description>&lt;p&gt;在之前的文章中，我向你介绍了如何在浏览器中利用 WebRTC 采集音视频数据。那么，是否可以通过相同的技术进行拍照呢？没错，这是完全可行的。&lt;/p&gt;&#xA;&lt;p&gt;现代的浏览器功能越来越强大，你不光可以通过它进行拍照，而且还可以对拍下来的照片进行各种滤镜处理。&lt;/p&gt;</description>
    </item>
    <item>
      <title>04_可以把采集到的音视频数据录制下来吗？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/04_%E5%8F%AF%E4%BB%A5%E6%8A%8A%E9%87%87%E9%9B%86%E5%88%B0%E7%9A%84%E9%9F%B3%E8%A7%86%E9%A2%91%E6%95%B0%E6%8D%AE%E5%BD%95%E5%88%B6%E4%B8%8B%E6%9D%A5%E5%90%97/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/04_%E5%8F%AF%E4%BB%A5%E6%8A%8A%E9%87%87%E9%9B%86%E5%88%B0%E7%9A%84%E9%9F%B3%E8%A7%86%E9%A2%91%E6%95%B0%E6%8D%AE%E5%BD%95%E5%88%B6%E4%B8%8B%E6%9D%A5%E5%90%97/</guid>
      <description>&lt;p&gt;在音视频会议、在线教育等系统中，&lt;strong&gt;录制&lt;/strong&gt;是一个特别重要的功能。尤其是在线教育系统，基本上每一节课都要录制下来，以便学生可以随时回顾之前学习的内容。&lt;/p&gt;</description>
    </item>
    <item>
      <title>05_原来浏览器还能抓取桌面？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/05_%E5%8E%9F%E6%9D%A5%E6%B5%8F%E8%A7%88%E5%99%A8%E8%BF%98%E8%83%BD%E6%8A%93%E5%8F%96%E6%A1%8C%E9%9D%A2/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/05_%E5%8E%9F%E6%9D%A5%E6%B5%8F%E8%A7%88%E5%99%A8%E8%BF%98%E8%83%BD%E6%8A%93%E5%8F%96%E6%A1%8C%E9%9D%A2/</guid>
      <description>&lt;p&gt;无论是做音视频会议，还是做远程教育，&lt;strong&gt;共享桌面&lt;/strong&gt;都是一个必备功能。如果说在 PC 或 Mac 端写个共享桌面程序你不会有太多感受，但通过浏览器也可以共享桌面是不是觉得就有些神奇了呢？&lt;/p&gt;</description>
    </item>
    <item>
      <title>06_WebRTC中的RTP及RTCP详解</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/06_webrtc%E4%B8%AD%E7%9A%84rtp%E5%8F%8Artcp%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/06_webrtc%E4%B8%AD%E7%9A%84rtp%E5%8F%8Artcp%E8%AF%A6%E8%A7%A3/</guid>
      <description>&lt;p&gt;可以毫不夸张地说，WebRTC 是一个“&lt;strong&gt;宝库&lt;/strong&gt;”，它里面有各种各样的“&lt;strong&gt;好东西&lt;/strong&gt;”。无论你从事什么行业，几乎都可以从它里边吸取能量。&lt;/p&gt;&#xA;&lt;p&gt;在学习 WebRTC 时，你不光要学习如何使用它，还应该多去看它底层的代码，多去了解它都能做些什么，争取对它的原理和使用都了然于心。如此一来，当遇到某个恰当的时机，你就可以从 WebRTC 库中抽取一点“精髓”放到你自己的项目中，让你的项目大放异彩。&lt;/p&gt;</description>
    </item>
    <item>
      <title>07_你竟然不知道SDP？它可是WebRTC的驱动核心！</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/07_%E4%BD%A0%E7%AB%9F%E7%84%B6%E4%B8%8D%E7%9F%A5%E9%81%93sdp%E5%AE%83%E5%8F%AF%E6%98%AFwebrtc%E7%9A%84%E9%A9%B1%E5%8A%A8%E6%A0%B8%E5%BF%83/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/07_%E4%BD%A0%E7%AB%9F%E7%84%B6%E4%B8%8D%E7%9F%A5%E9%81%93sdp%E5%AE%83%E5%8F%AF%E6%98%AFwebrtc%E7%9A%84%E9%A9%B1%E5%8A%A8%E6%A0%B8%E5%BF%83/</guid>
      <description>&lt;p&gt;在前面&lt;a href=&#34;./107948.md&#34;&gt;《01 | 原来通过浏览器访问摄像头这么容易》&lt;/a&gt;&lt;a href=&#34;./109105.md&#34;&gt;《04 | 可以把采集到的音视频数据录制下来吗？》&lt;/a&gt;等文章中，我向你讲解了 WebRTC 如何采集音视频数据，以及如何将它们录制成文件等相关内容。但那些知识不过是个“&lt;strong&gt;开胃菜&lt;/strong&gt;”，WebRTC 真正核心的知识将从本文开始陆续向你展开。不过从本文开始，知识的难度会越来越高，你一定要做好心理准备。&lt;/p&gt;</description>
    </item>
    <item>
      <title>08_有话好商量，论媒体协商</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/08_%E6%9C%89%E8%AF%9D%E5%A5%BD%E5%95%86%E9%87%8F%E8%AE%BA%E5%AA%92%E4%BD%93%E5%8D%8F%E5%95%86/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/08_%E6%9C%89%E8%AF%9D%E5%A5%BD%E5%95%86%E9%87%8F%E8%AE%BA%E5%AA%92%E4%BD%93%E5%8D%8F%E5%95%86/</guid>
      <description>&lt;p&gt;在&lt;a href=&#34;./111337.md&#34;&gt;《07 | 你竟然不知道 SDP？它可是 WebRTC 的驱动核心！》&lt;/a&gt;一文中，我向你详细介绍了标准 SDP 规范，以及 WebRTC 与标准 SDP 规范的一些不同，而本文我们将重点学习一下 WebRTC 究竟是如何使用 SDP 规范进行&lt;strong&gt;媒体协商&lt;/strong&gt;的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>09_让我们揭开WebRTC建立连接的神秘面纱</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/09_%E8%AE%A9%E6%88%91%E4%BB%AC%E6%8F%AD%E5%BC%80webrtc%E5%BB%BA%E7%AB%8B%E8%BF%9E%E6%8E%A5%E7%9A%84%E7%A5%9E%E7%A7%98%E9%9D%A2%E7%BA%B1/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/09_%E8%AE%A9%E6%88%91%E4%BB%AC%E6%8F%AD%E5%BC%80webrtc%E5%BB%BA%E7%AB%8B%E8%BF%9E%E6%8E%A5%E7%9A%84%E7%A5%9E%E7%A7%98%E9%9D%A2%E7%BA%B1/</guid>
      <description>&lt;p&gt;在上一篇&lt;a href=&#34;./111675.md&#34;&gt;《08 | 有话好商量，论媒体协商》&lt;/a&gt;文章中，我向你介绍了 WebRTC 进行通信时，是如何进行媒体协商的，以及媒体协商的目的是什么。&lt;/p&gt;&#xA;&lt;p&gt;在媒体协商过程中，如果双方能达成一致，也就是商量好了使用什么编解码器，确认了使用什么传输协议，那么接下来，WebRTC 就要建立连接，开始传输音视频数据了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>10_WebRTC_NAT穿越原理</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/10_webrtc_nat%E7%A9%BF%E8%B6%8A%E5%8E%9F%E7%90%86/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/10_webrtc_nat%E7%A9%BF%E8%B6%8A%E5%8E%9F%E7%90%86/</guid>
      <description>&lt;p&gt;在 WebRTC 中，NAT 穿越是非常重要的一部分内容，也是比较有深度、比较难以理解的一部分知识。当然，等你学完本文，并完全理解了这部分知识后，你也会特别有成就感！&lt;/p&gt;</description>
    </item>
    <item>
      <title>11_如何通过Node.js实现一套最简单的信令系统？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/11_%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87node.js%E5%AE%9E%E7%8E%B0%E4%B8%80%E5%A5%97%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E4%BF%A1%E4%BB%A4%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/11_%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87node.js%E5%AE%9E%E7%8E%B0%E4%B8%80%E5%A5%97%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E4%BF%A1%E4%BB%A4%E7%B3%BB%E7%BB%9F/</guid>
      <description>&lt;p&gt;通过前面几篇文章的讲解，我想现在你应该已经对 WebRTC 有了一个清楚的认知了。接下来的章节咱们就使用 WebRTC 逐步实现一套真实可用的 1 对 1 实时直播系统吧。&lt;/p&gt;&#xA;&lt;p&gt;WebRTC 1.0 规范对 WebRTC 要实现的功能、API 等相关信息做了大量的约束，比如规范中定义了如何采集音视频数据、如何录制以及如何传输等。甚至更细的，还定义了都有哪些 API，以及这些 API 的作用是什么。但这些约束只针对于客户端，并没有对服务端做任何限制。&lt;/p&gt;</description>
    </item>
    <item>
      <title>12_RTCPeerConnection：音视频实时通讯的核心</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/12_rtcpeerconnection%E9%9F%B3%E8%A7%86%E9%A2%91%E5%AE%9E%E6%97%B6%E9%80%9A%E8%AE%AF%E7%9A%84%E6%A0%B8%E5%BF%83/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/12_rtcpeerconnection%E9%9F%B3%E8%A7%86%E9%A2%91%E5%AE%9E%E6%97%B6%E9%80%9A%E8%AE%AF%E7%9A%84%E6%A0%B8%E5%BF%83/</guid>
      <description>&lt;p&gt;RTCPeerConnection 类是在浏览器下使用 WebRTC 实现 1 对 1 实时互动音视频系统最核心的类。你可以认为它是一个总的接口类或者称它为聚合类，而该类中实现的很多功能都是由其他类具体实现的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>13_在WebRTC中如何控制传输速率呢？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/13_%E5%9C%A8webrtc%E4%B8%AD%E5%A6%82%E4%BD%95%E6%8E%A7%E5%88%B6%E4%BC%A0%E8%BE%93%E9%80%9F%E7%8E%87%E5%91%A2/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/13_%E5%9C%A8webrtc%E4%B8%AD%E5%A6%82%E4%BD%95%E6%8E%A7%E5%88%B6%E4%BC%A0%E8%BE%93%E9%80%9F%E7%8E%87%E5%91%A2/</guid>
      <description>&lt;p&gt;在上一篇&lt;a href=&#34;./116324.md&#34;&gt;《12 | RTCPeerConnection：音视频实时通讯的核心》&lt;/a&gt;一文中，我向你介绍了 RTCPeerConnection 对象是如何在端与端之间建立连接的，以及音视频数据又是如何通过它进行传输的。而本文则更进一步，向你介绍如何使用 RTCPeerConnection 来控制音视频数据的传输速率。&lt;/p&gt;</description>
    </item>
    <item>
      <title>14_如何打开_关闭音视频？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/14_%E5%A6%82%E4%BD%95%E6%89%93%E5%BC%80_%E5%85%B3%E9%97%AD%E9%9F%B3%E8%A7%86%E9%A2%91/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/14_%E5%A6%82%E4%BD%95%E6%89%93%E5%BC%80_%E5%85%B3%E9%97%AD%E9%9F%B3%E8%A7%86%E9%A2%91/</guid>
      <description>&lt;p&gt;在实时互动直播系统中，打开 / 关闭音视频流是很常见的需求。作为一个直播用户，你至少会有下面几种需求：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;将远端的声音静音&lt;/strong&gt;。比如来了一个电话，此时，应该先将直播中远端的声音关掉，等接完电话再将远端的声音打开，否则电话的声音与直播远端的声音会同时播放出来。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;将自己的声音静音&lt;/strong&gt;。比如老板要找你谈话，这时你应该将直播中自己的声音静音，否则你与老板的一些私密谈话会被远端听到。比如被老板骂了，要是被远端听到可就尴尬了。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;关闭远端的视频&lt;/strong&gt;。这个与远端声音静音差不多，只不过将声音改为视频了。比如当机子性能比较差的时候，为了节省资源，你可能会选择将远端的视频关闭掉。不过这种情况不是很多。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;关闭自己的视频&lt;/strong&gt;。当你不想让对方看到自己的视频时，就可以选择关闭自己的视频。比如今天你的状态特别不好，你又特别在乎你的形象，此时你就可以选择关闭自己的视频。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;这几个功能是实时互动直播中的必备功能。因此，在开发实时互动直播系统时一定要将这些功能添加到你的系统中，那该如何实现它们呢？&lt;/p&gt;</description>
    </item>
    <item>
      <title>15_WebRTC中的数据统计原来这么强大（上）</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/15_webrtc%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%9F%E8%AE%A1%E5%8E%9F%E6%9D%A5%E8%BF%99%E4%B9%88%E5%BC%BA%E5%A4%A7%E4%B8%8A/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/15_webrtc%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%9F%E8%AE%A1%E5%8E%9F%E6%9D%A5%E8%BF%99%E4%B9%88%E5%BC%BA%E5%A4%A7%E4%B8%8A/</guid>
      <description>&lt;p&gt;当你使用 WebRTC 实现 1 对 1 通话后，还有一个非常重要的工作需要做，那就是&lt;strong&gt;实现数据监控&lt;/strong&gt;。数据监控对于 WebRTC 来讲，就像是人的眼睛，有了它，你就可以随时了解 WebRTC 客户端的运转情况。&lt;/p&gt;</description>
    </item>
    <item>
      <title>16_WebRTC中的数据统计原来这么强大（下）</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/16_webrtc%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%9F%E8%AE%A1%E5%8E%9F%E6%9D%A5%E8%BF%99%E4%B9%88%E5%BC%BA%E5%A4%A7%E4%B8%8B/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/16_webrtc%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%9F%E8%AE%A1%E5%8E%9F%E6%9D%A5%E8%BF%99%E4%B9%88%E5%BC%BA%E5%A4%A7%E4%B8%8B/</guid>
      <description>&lt;p&gt;在&lt;a href=&#34;./118885.md&#34;&gt;上一篇文章&lt;/a&gt;中我向你介绍了 WebRTC 可以获得哪些统计信息，以及如何使用 RTCPeerConntction 对象的 getStats 方法获取想要的统计信息。&lt;/p&gt;&#xA;&lt;p&gt;那本文我们在&lt;a href=&#34;./118885.md&#34;&gt;上一篇文章&lt;/a&gt;的基础之上，继续对 WebRTC 中的统计信息做进一步的讨论，了解它更为详细的内容。&lt;/p&gt;&#xA;&lt;h2 id=&#34;再论-getstats&#34;&gt;再论 getStats&lt;/h2&gt;&#xA;&lt;p&gt;现在你已经非常清楚，通过 RTCPeerConnection 对象的 getStats 方法可以很轻松地获取到各种统计信息，比如发了多少包、收了多少包、丢了多少包，等等。但实际上对于收发包这块儿的统计还可以从其他方法获取到，即通过 &lt;strong&gt;RTCRtpSender 的 getStats 方法和 RTCRtpReceiver 的 getStats 方法也能获取收发包的统计信息&lt;/strong&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>17_如何使用Canvas绘制统计图表（上）？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/17_%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8canvas%E7%BB%98%E5%88%B6%E7%BB%9F%E8%AE%A1%E5%9B%BE%E8%A1%A8%E4%B8%8A/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/17_%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8canvas%E7%BB%98%E5%88%B6%E7%BB%9F%E8%AE%A1%E5%9B%BE%E8%A1%A8%E4%B8%8A/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Canvas&lt;/strong&gt; 是 HTML5 标准中的一个新元素，你可以把它想像成一块“画布”，有了它你就可以在网页上绘制图像和动画了。在 HTML5 页面中可像使用其他元素一样使用 Canvas，如 Video 标签。为了能够在 Canvas 上绘图，浏览器为此提供了一整套 JavaScript API，我们将在后面的代码中看到如何使用它们。&lt;/p&gt;</description>
    </item>
    <item>
      <title>18_如何使用Canvas绘制统计图表（下）？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/18_%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8canvas%E7%BB%98%E5%88%B6%E7%BB%9F%E8%AE%A1%E5%9B%BE%E8%A1%A8%E4%B8%8B/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/18_%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8canvas%E7%BB%98%E5%88%B6%E7%BB%9F%E8%AE%A1%E5%9B%BE%E8%A1%A8%E4%B8%8B/</guid>
      <description>&lt;p&gt;Google 的 Chrome 浏览器已经默认支持 WebRTC 库了，因此 Chrome 浏览器之间已经可以进行音视频实时通信了。更让人欣喜的是 Google 还开源了 WebRTC 源码，此举不仅惊艳，而且非常伟大。WebRTC 源码的开放，为音视频实时通信领域从业者、爱好者提供了非常好的研究和学习的机会。&lt;/p&gt;</description>
    </item>
    <item>
      <title>19_WebRTC能不能进行文本聊天呢？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/19_webrtc%E8%83%BD%E4%B8%8D%E8%83%BD%E8%BF%9B%E8%A1%8C%E6%96%87%E6%9C%AC%E8%81%8A%E5%A4%A9%E5%91%A2/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/19_webrtc%E8%83%BD%E4%B8%8D%E8%83%BD%E8%BF%9B%E8%A1%8C%E6%96%87%E6%9C%AC%E8%81%8A%E5%A4%A9%E5%91%A2/</guid>
      <description>&lt;p&gt;WebRTC 不但可以让你进行音视频通话，而且还可以用它传输普通的二进制数据，比如说可以利用它实现文本聊天、文件的传输等等。&lt;/p&gt;&#xA;&lt;p&gt;WebRTC 的**数据通道（RTCDataChannel）**是专门用来传输除了音视频数据之外的任何数据，所以它的应用非常广泛，如实时文字聊天、文件传输、远程桌面、游戏控制、P2P 加速等都是它的应用场景。&lt;/p&gt;</description>
    </item>
    <item>
      <title>20_原来WebRTC还可以实时传输文件？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/20_%E5%8E%9F%E6%9D%A5webrtc%E8%BF%98%E5%8F%AF%E4%BB%A5%E5%AE%9E%E6%97%B6%E4%BC%A0%E8%BE%93%E6%96%87%E4%BB%B6/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/20_%E5%8E%9F%E6%9D%A5webrtc%E8%BF%98%E5%8F%AF%E4%BB%A5%E5%AE%9E%E6%97%B6%E4%BC%A0%E8%BE%93%E6%96%87%E4%BB%B6/</guid>
      <description>&lt;p&gt;在&lt;a href=&#34;./127360.md&#34;&gt;上一篇文章&lt;/a&gt;中我向你介绍了在 WebRTC 中如何传输非音视频数据，并通过实现一个 1 对 1 实时聊天的例子向你展示了如何使用 RTCDataChannel 对象进行文本数据的传输。&lt;/p&gt;&#xA;&lt;p&gt;其实利用 WebRTC 的 RTCDataChannel 对象，不光可以实现 1 对 1 的实时聊天，你还可以利用它进行&lt;strong&gt;实时的文件传输&lt;/strong&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>21_如何保证数据传输的安全（上）？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/21_%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93%E7%9A%84%E5%AE%89%E5%85%A8%E4%B8%8A/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/21_%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93%E7%9A%84%E5%AE%89%E5%85%A8%E4%B8%8A/</guid>
      <description>&lt;p&gt;数据安全越来越受到人们的重视，尤其是一些敏感数据，如重要的视频、音频等。在实现音视频通信的过程中，如果在网络上传输的音视频数据是未加密的，那么黑客就可以利用 Wireshark 等工具将它们录制下来，并很容易地将它们播放出来并泄漏出去。&lt;/p&gt;</description>
    </item>
    <item>
      <title>22_如何保证数据传输的安全（下）？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/22_%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93%E7%9A%84%E5%AE%89%E5%85%A8%E4%B8%8B/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/22_%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93%E7%9A%84%E5%AE%89%E5%85%A8%E4%B8%8B/</guid>
      <description>&lt;p&gt;在&lt;a href=&#34;./128405.md&#34;&gt;上一篇文章&lt;/a&gt;中，我向你介绍了保证数据传输安全的一些&lt;strong&gt;基本概念&lt;/strong&gt;，如非对称加密、数字证书等等。那本文我们就结合这些基本概念，来一起看看 &lt;strong&gt;WebRTC 是如何保障数据安全的&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt;WebRTC 的一个重要应用就是在浏览器上实现音视频实时通信，正如&lt;a href=&#34;./128405.md&#34;&gt;上一篇文章&lt;/a&gt;中所讲到的，在浏览器上由于用户量巨大，所以对于音视频的通信必须要有一套机制来保证音视频数据的安全性。&lt;/p&gt;&#xA;&lt;p&gt;实际上，在浏览器上对于音视频数据的安全最终还是由 WebRTC 库自己保证的。它是通过使用 SDP、STUN、DTLS、SRTP 等几个协议的结合来达到数据安全的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>23_实战演练：通过WebRTC实现一个1对1音视频实时直播系统</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/23_%E5%AE%9E%E6%88%98%E6%BC%94%E7%BB%83%E9%80%9A%E8%BF%87webrtc%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA1%E5%AF%B91%E9%9F%B3%E8%A7%86%E9%A2%91%E5%AE%9E%E6%97%B6%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/23_%E5%AE%9E%E6%88%98%E6%BC%94%E7%BB%83%E9%80%9A%E8%BF%87webrtc%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA1%E5%AF%B91%E9%9F%B3%E8%A7%86%E9%A2%91%E5%AE%9E%E6%97%B6%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/</guid>
      <description>&lt;p&gt;在前面的 22 篇文章中，我分步骤向你介绍了如何在浏览器上实现一套简单的直播系统。比如，如何采集音视频数据，如何在同一个浏览器上进行音视频通话，如何传输非音视频数据，等等。&lt;/p&gt;</description>
    </item>
    <item>
      <title>24_多人音视频实时通讯是怎样的架构？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/24_%E5%A4%9A%E4%BA%BA%E9%9F%B3%E8%A7%86%E9%A2%91%E5%AE%9E%E6%97%B6%E9%80%9A%E8%AE%AF%E6%98%AF%E6%80%8E%E6%A0%B7%E7%9A%84%E6%9E%B6%E6%9E%84/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/24_%E5%A4%9A%E4%BA%BA%E9%9F%B3%E8%A7%86%E9%A2%91%E5%AE%9E%E6%97%B6%E9%80%9A%E8%AE%AF%E6%98%AF%E6%80%8E%E6%A0%B7%E7%9A%84%E6%9E%B6%E6%9E%84/</guid>
      <description>&lt;p&gt;在前面的章节里，我们通过大量的篇幅介绍了 WebRTC 在浏览器上对实时通信的各种支持。WebRTC 本身提供的是 1 对 1 的通信模型，在 STUN/TURN 的辅助下，如果能实现 NAT 穿越，那么两个浏览器是可以直接进行媒体数据交换的；如果不能实现 NAT 穿越，那么只能通过 TURN 服务器进行数据转发的方式实现通信。目前来看，Google 开源的用于学习和研究的项目基本都是基于 STUN/TURN 的 1 对 1 通信。&lt;/p&gt;</description>
    </item>
    <item>
      <title>25_那些常见的流媒体服务器，你该选择谁？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/25_%E9%82%A3%E4%BA%9B%E5%B8%B8%E8%A7%81%E7%9A%84%E6%B5%81%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BD%A0%E8%AF%A5%E9%80%89%E6%8B%A9%E8%B0%81/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/25_%E9%82%A3%E4%BA%9B%E5%B8%B8%E8%A7%81%E7%9A%84%E6%B5%81%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BD%A0%E8%AF%A5%E9%80%89%E6%8B%A9%E8%B0%81/</guid>
      <description>&lt;p&gt;在&lt;a href=&#34;./132863.md&#34;&gt;上一篇文章&lt;/a&gt;中，我们详细讨论了三种类型（Mesh、MCU 和 SFU）的多方通信架构，并从中知道&lt;strong&gt;SFU 方案是目前最优的一种多方通信架构方案&lt;/strong&gt;，而且这种方案目前已经有很多开源的实现了，比较流行的开源项目包括 Licode、Janus-gateway、MediaSoup、Medooze 等。&lt;/p&gt;</description>
    </item>
    <item>
      <title>26_为什么编译Medooze_Server这么难？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/26_%E4%B8%BA%E4%BB%80%E4%B9%88%E7%BC%96%E8%AF%91medooze_server%E8%BF%99%E4%B9%88%E9%9A%BE/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/26_%E4%B8%BA%E4%BB%80%E4%B9%88%E7%BC%96%E8%AF%91medooze_server%E8%BF%99%E4%B9%88%E9%9A%BE/</guid>
      <description>&lt;p&gt;在&lt;a href=&#34;./134284.md&#34;&gt;上一篇文章&lt;/a&gt;中，我们对 Licode、Janus、Mediasoup 以及 Medooze 四个 WebRTC 开源流媒体服务器的实现进行对比，对于想研究音视频多方会议、录制回放、直播等流媒体技术的开发人员来说，Medooze 是很好的选择。因为它支持所有这些功能，通过它的源码及其 Demo 就可以对 Medooze 进行深入学习了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>27_让我们一起探索Medooze的具体实现吧（上）</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/27_%E8%AE%A9%E6%88%91%E4%BB%AC%E4%B8%80%E8%B5%B7%E6%8E%A2%E7%B4%A2medooze%E7%9A%84%E5%85%B7%E4%BD%93%E5%AE%9E%E7%8E%B0%E5%90%A7%E4%B8%8A/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/27_%E8%AE%A9%E6%88%91%E4%BB%AC%E4%B8%80%E8%B5%B7%E6%8E%A2%E7%B4%A2medooze%E7%9A%84%E5%85%B7%E4%BD%93%E5%AE%9E%E7%8E%B0%E5%90%A7%E4%B8%8A/</guid>
      <description>&lt;p&gt;在咱们专栏的第一模块，我向你介绍了如何使用 WebRTC 进行实现音视频互动。随着 Google 对 WebRTC 的大力推广，目前主流的浏览器都支持了 WebRTC。WebRTC 最主要的功能就是提供端对端的音视频通信，其可以借助 STUN/TURN 服务器完成 NAT 穿越，实现两个端点之间的直接通信。&lt;/p&gt;</description>
    </item>
    <item>
      <title>28_让我们一起探索Medooze的具体实现吧（下）</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/28_%E8%AE%A9%E6%88%91%E4%BB%AC%E4%B8%80%E8%B5%B7%E6%8E%A2%E7%B4%A2medooze%E7%9A%84%E5%85%B7%E4%BD%93%E5%AE%9E%E7%8E%B0%E5%90%A7%E4%B8%8B/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/28_%E8%AE%A9%E6%88%91%E4%BB%AC%E4%B8%80%E8%B5%B7%E6%8E%A2%E7%B4%A2medooze%E7%9A%84%E5%85%B7%E4%BD%93%E5%AE%9E%E7%8E%B0%E5%90%A7%E4%B8%8B/</guid>
      <description>&lt;p&gt;在&lt;a href=&#34;./136000.md&#34;&gt;上一篇文章&lt;/a&gt;中，我向你介绍了 Medooze 的 SFU 模型、录制回放模型以及推流模型，并且还向你展示了 Medooze 的架构，以及 Medooze 核心组件的基本功能等相关方面的知识。通过这些内容，你现在应该已经对 Medooze 有了一个初步了解了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>29_如何使用Medooze_实现多方视频会议？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/29_%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8medooze_%E5%AE%9E%E7%8E%B0%E5%A4%9A%E6%96%B9%E8%A7%86%E9%A2%91%E4%BC%9A%E8%AE%AE/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/29_%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8medooze_%E5%AE%9E%E7%8E%B0%E5%A4%9A%E6%96%B9%E8%A7%86%E9%A2%91%E4%BC%9A%E8%AE%AE/</guid>
      <description>&lt;p&gt;前面我们通过两篇文章详细介绍了 Medooze 的实现逻辑，我相信你现在已经对 Medooze 有了非常深刻的认知。通过对 Medooze 实现原理和架构的了解，我们可以知道 Medooze 支持的功能非常多，如录制回放、推流、SFU 等，其中最主要的功能是 SFU 的实现。&lt;/p&gt;</description>
    </item>
    <item>
      <title>30_实战演练：通过WebRTC实现多人音视频实时互动直播系统</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/30_%E5%AE%9E%E6%88%98%E6%BC%94%E7%BB%83%E9%80%9A%E8%BF%87webrtc%E5%AE%9E%E7%8E%B0%E5%A4%9A%E4%BA%BA%E9%9F%B3%E8%A7%86%E9%A2%91%E5%AE%9E%E6%97%B6%E4%BA%92%E5%8A%A8%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/30_%E5%AE%9E%E6%88%98%E6%BC%94%E7%BB%83%E9%80%9A%E8%BF%87webrtc%E5%AE%9E%E7%8E%B0%E5%A4%9A%E4%BA%BA%E9%9F%B3%E8%A7%86%E9%A2%91%E5%AE%9E%E6%97%B6%E4%BA%92%E5%8A%A8%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/</guid>
      <description>&lt;p&gt;关于通过 WebRTC 实现多人音视频实时互动的实战，其实我们在&lt;a href=&#34;./137836.md&#34;&gt;上一篇文章&lt;/a&gt;中已经向你做过详细介绍了，其中包括如何编译 Medooze 源码、如何将编译出的 Medooze SFU 进行布署，以及如何去使用等相关的内容。&lt;/p&gt;&#xA;&lt;p&gt;那么今天我们再从另外一个角度来总结一下 Medooze 是如何实现多人音视频互动的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>31_一对多直播系统RTMP_HLS，你该选哪个？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/31_%E4%B8%80%E5%AF%B9%E5%A4%9A%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9Frtmp_hls%E4%BD%A0%E8%AF%A5%E9%80%89%E5%93%AA%E4%B8%AA/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/31_%E4%B8%80%E5%AF%B9%E5%A4%9A%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9Frtmp_hls%E4%BD%A0%E8%AF%A5%E9%80%89%E5%93%AA%E4%B8%AA/</guid>
      <description>&lt;p&gt;近年来，随着智能手机的普及以及移动互联网的飞速发展，音视频技术在各个行业得到了广泛的应用。尤其是娱乐直播在前几年着实火了一把，像映客、斗鱼这类以展示才艺为主的直播产品非常受大家的欢迎。&lt;/p&gt;</description>
    </item>
    <item>
      <title>32_HLS：实现一对多直播系统的必备协议</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/32_hls%E5%AE%9E%E7%8E%B0%E4%B8%80%E5%AF%B9%E5%A4%9A%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%BF%85%E5%A4%87%E5%8D%8F%E8%AE%AE/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/32_hls%E5%AE%9E%E7%8E%B0%E4%B8%80%E5%AF%B9%E5%A4%9A%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%BF%85%E5%A4%87%E5%8D%8F%E8%AE%AE/</guid>
      <description>&lt;p&gt;在&lt;a href=&#34;./140181.md&#34;&gt;上一篇文章&lt;/a&gt;中，我们对 RTMP 协议和 HLS 协议的优势与劣势进行了比较。从比较的结果我们可以看出，RTMP 作为传统的直播传输技术在实时性方面要比 HLS 好很多，所以它还是有一定优势的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>33_FLV：适合录制的多媒体格式</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/33_flv%E9%80%82%E5%90%88%E5%BD%95%E5%88%B6%E7%9A%84%E5%A4%9A%E5%AA%92%E4%BD%93%E6%A0%BC%E5%BC%8F/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/33_flv%E9%80%82%E5%90%88%E5%BD%95%E5%88%B6%E7%9A%84%E5%A4%9A%E5%AA%92%E4%BD%93%E6%A0%BC%E5%BC%8F/</guid>
      <description>&lt;p&gt;虽然苹果拒绝使用 RTMP 协议并推出了自己的 HLS 技术，但大多数用户仍然还是使用 RTMP 协议作为传统直播系统的传输协议。在 Adobe 宣布不再对 RTMP 技术进行支持的情况下，仍然还有这么多用户在使用它，说明 RTMP 协议具有其他协议不可比拟的优势。&lt;/p&gt;</description>
    </item>
    <item>
      <title>34_如何使用Nginx搭建最简单的直播服务器？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/34_%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8nginx%E6%90%AD%E5%BB%BA%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E7%9B%B4%E6%92%AD%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/34_%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8nginx%E6%90%AD%E5%BB%BA%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E7%9B%B4%E6%92%AD%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      <description>&lt;p&gt;在前面三篇文章中，我们介绍了传统直播系统架构、HLS 协议、RTMP 协议相关的知识，那今天我们就来具体实操一下，根据前面所学到的知识搭建出一套最简单的音视频直播系统。&lt;/p&gt;</description>
    </item>
    <item>
      <title>35_如何构建云端一对多直播系统？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/35_%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E4%BA%91%E7%AB%AF%E4%B8%80%E5%AF%B9%E5%A4%9A%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/35_%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E4%BA%91%E7%AB%AF%E4%B8%80%E5%AF%B9%E5%A4%9A%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/</guid>
      <description>&lt;p&gt;在上一篇文章中，我们介绍了如何通过 Nginx 搭建传统直播系统的实验环境，知道了理论是如何与实际结合到一起的。但同时我们也提到，要想通过 Nginx 来实现商用的直播系统还有很长的路要走。&lt;/p&gt;</description>
    </item>
    <item>
      <title>36_如何使用_flv.js_播放_FLV_多媒体文件呢？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/36_%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8_flv.js_%E6%92%AD%E6%94%BE_flv_%E5%A4%9A%E5%AA%92%E4%BD%93%E6%96%87%E4%BB%B6%E5%91%A2/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/36_%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8_flv.js_%E6%92%AD%E6%94%BE_flv_%E5%A4%9A%E5%AA%92%E4%BD%93%E6%96%87%E4%BB%B6%E5%91%A2/</guid>
      <description>&lt;p&gt;flv.js 是由 bilibili 公司开源的项目。它可以解析 FLV 文件，从中取出音视频数据并转成 BMFF 片段（一种 MP4 格式），然后交给 HTML5 的&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;标签进行播放。通过这种方式，使得浏览器在不借助 Flash 的情况下也可以播放 FLV 文件了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>37_如何使用_video.js_播放多媒体文件？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/37_%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8_video.js_%E6%92%AD%E6%94%BE%E5%A4%9A%E5%AA%92%E4%BD%93%E6%96%87%E4%BB%B6/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/37_%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8_video.js_%E6%92%AD%E6%94%BE%E5%A4%9A%E5%AA%92%E4%BD%93%E6%96%87%E4%BB%B6/</guid>
      <description>&lt;p&gt;在上一篇文章中，我们介绍了 flv.js 播放器。那今天我们再来介绍另一款非常有名的 JavaScript 播放器——video.js。&lt;/p&gt;&#xA;&lt;p&gt;我们首先来比较一下这两款播放器，看看它们之间有什么不同？在我看来，flv.js 更聚焦在多媒体格式方面，其主要是将 FLV 格式转换为 MP4 格式，而对于播放器的音量控制、进度条、菜单等 UI 展示部分没有做特别的处理。而 video.js 对音量控制、进度条、菜单等 UI 相关逻辑做了统一处理，对媒体播放部分设计了一个插件框架，可以集成不同媒体格式的播放器进去。所以&lt;strong&gt;相比较而言，video.js 更像是一款完整的播放器&lt;/strong&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>38_实战推演：带你实现一个支持万人同时在线的直播系统</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/38_%E5%AE%9E%E6%88%98%E6%8E%A8%E6%BC%94%E5%B8%A6%E4%BD%A0%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E6%94%AF%E6%8C%81%E4%B8%87%E4%BA%BA%E5%90%8C%E6%97%B6%E5%9C%A8%E7%BA%BF%E7%9A%84%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/38_%E5%AE%9E%E6%88%98%E6%8E%A8%E6%BC%94%E5%B8%A6%E4%BD%A0%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E6%94%AF%E6%8C%81%E4%B8%87%E4%BA%BA%E5%90%8C%E6%97%B6%E5%9C%A8%E7%BA%BF%E7%9A%84%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/</guid>
      <description>&lt;p&gt;本文我们将第三模块所讲的知识做一次梳理，让你在整体上了解“万人直播”到底是怎样实现的。我们将从万人直播的整体架构、主播客户端架构、观众客户端架构和流量统计这四个方面向你讲述万人直播的构建。&lt;/p&gt;</description>
    </item>
    <item>
      <title>77-从0打造音视频直播系统</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/77-%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/77-%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/</guid>
      <description></description>
    </item>
    <item>
      <title>结束语_路漫漫其修远兮，吾将上下而求索</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/%E7%BB%93%E6%9D%9F%E8%AF%AD_%E8%B7%AF%E6%BC%AB%E6%BC%AB%E5%85%B6%E4%BF%AE%E8%BF%9C%E5%85%AE%E5%90%BE%E5%B0%86%E4%B8%8A%E4%B8%8B%E8%80%8C%E6%B1%82%E7%B4%A2/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/%E7%BB%93%E6%9D%9F%E8%AF%AD_%E8%B7%AF%E6%BC%AB%E6%BC%AB%E5%85%B6%E4%BF%AE%E8%BF%9C%E5%85%AE%E5%90%BE%E5%B0%86%E4%B8%8A%E4%B8%8B%E8%80%8C%E6%B1%82%E7%B4%A2/</guid>
      <description>&lt;p&gt;时间过得真快，转眼本专栏就进入了尾声，不得不说这是一段让人难以忘怀的“旅程”。在这段“旅程”中，我也力求对每一篇文章都能做到“精雕细琢”，将要讲的内容说清楚、写透彻。&lt;/p&gt;</description>
    </item>
    <item>
      <title>开篇词_5G的到来将会为音视频插上飞翔的翅膀</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/%E5%BC%80%E7%AF%87%E8%AF%8D_5g%E7%9A%84%E5%88%B0%E6%9D%A5%E5%B0%86%E4%BC%9A%E4%B8%BA%E9%9F%B3%E8%A7%86%E9%A2%91%E6%8F%92%E4%B8%8A%E9%A3%9E%E7%BF%94%E7%9A%84%E7%BF%85%E8%86%80/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E4%BB%8E0%E6%89%93%E9%80%A0%E9%9F%B3%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD%E7%B3%BB%E7%BB%9F/%E5%BC%80%E7%AF%87%E8%AF%8D_5g%E7%9A%84%E5%88%B0%E6%9D%A5%E5%B0%86%E4%BC%9A%E4%B8%BA%E9%9F%B3%E8%A7%86%E9%A2%91%E6%8F%92%E4%B8%8A%E9%A3%9E%E7%BF%94%E7%9A%84%E7%BF%85%E8%86%80/</guid>
      <description>&lt;p&gt;在浩如烟海的生命长河中，人类文明已经有几千年的历史。从远古时期，人类就梦想着有一天可以听到、看到千里之外的声音和景象，当时的人们认为只有神仙（千里眼和顺风耳）才能做到。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
