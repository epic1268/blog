<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>深入剖析Kubernetes on Docs</title>
    <link>https://politcloud.org/tags/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/</link>
    <description>Recent content in 深入剖析Kubernetes on Docs</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 10 Jan 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://politcloud.org/tags/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>01__预习篇_·_小鲸鱼大事记（一）：初出茅庐</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/01__%E9%A2%84%E4%B9%A0%E7%AF%87__%E5%B0%8F%E9%B2%B8%E9%B1%BC%E5%A4%A7%E4%BA%8B%E8%AE%B0%E4%B8%80%E5%88%9D%E5%87%BA%E8%8C%85%E5%BA%90/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/01__%E9%A2%84%E4%B9%A0%E7%AF%87__%E5%B0%8F%E9%B2%B8%E9%B1%BC%E5%A4%A7%E4%BA%8B%E8%AE%B0%E4%B8%80%E5%88%9D%E5%87%BA%E8%8C%85%E5%BA%90/</guid>
      <description>&lt;p&gt;你好，我是张磊。我今天分享的主题是：小鲸鱼大事记之初出茅庐。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;如果我问你，现今最热门的服务器端技术是什么？想必你不假思索就能回答上来：当然是容器！可是，如果现在不是 2018 年而是 2013 年，你的回答还能这么斩钉截铁么？&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>02__预习篇_·_小鲸鱼大事记（二）：崭露头角</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/02__%E9%A2%84%E4%B9%A0%E7%AF%87__%E5%B0%8F%E9%B2%B8%E9%B1%BC%E5%A4%A7%E4%BA%8B%E8%AE%B0%E4%BA%8C%E5%B4%AD%E9%9C%B2%E5%A4%B4%E8%A7%92/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/02__%E9%A2%84%E4%B9%A0%E7%AF%87__%E5%B0%8F%E9%B2%B8%E9%B1%BC%E5%A4%A7%E4%BA%8B%E8%AE%B0%E4%BA%8C%E5%B4%AD%E9%9C%B2%E5%A4%B4%E8%A7%92/</guid>
      <description>&lt;p&gt;你好，我是张磊。我今天分享的主题是：小鲸鱼大事记之崭露头角。&lt;/p&gt;&#xA;&lt;p&gt;在上一篇文章中，我说到，伴随着 PaaS 概念的逐步普及，以 Cloud Foundry 为代表的经典 PaaS 项目，开始进入基础设施领域的视野，平台化和 PaaS 化成了这个生态中的一个最为重要的进化趋势。&lt;/p&gt;</description>
    </item>
    <item>
      <title>03__预习篇_·_小鲸鱼大事记（三）：群雄并起</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/03__%E9%A2%84%E4%B9%A0%E7%AF%87__%E5%B0%8F%E9%B2%B8%E9%B1%BC%E5%A4%A7%E4%BA%8B%E8%AE%B0%E4%B8%89%E7%BE%A4%E9%9B%84%E5%B9%B6%E8%B5%B7/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/03__%E9%A2%84%E4%B9%A0%E7%AF%87__%E5%B0%8F%E9%B2%B8%E9%B1%BC%E5%A4%A7%E4%BA%8B%E8%AE%B0%E4%B8%89%E7%BE%A4%E9%9B%84%E5%B9%B6%E8%B5%B7/</guid>
      <description>&lt;p&gt;你好，我是张磊。我今天分享的主题是：小鲸鱼大事记之群雄并起。&lt;/p&gt;&#xA;&lt;p&gt;在上一篇文章中，我剖析了 Docker 项目迅速走红背后的技术与非技术原因，也介绍了 Docker 公司开启平台化战略的野心。可是，Docker 公司为什么在 Docker 项目已经取得巨大成功之后，却执意要重新走回那条已经让无数先驱们尘沙折戟的 PaaS 之路呢？&lt;/p&gt;</description>
    </item>
    <item>
      <title>04__预习篇_·_小鲸鱼大事记（四）：尘埃落定</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/04__%E9%A2%84%E4%B9%A0%E7%AF%87__%E5%B0%8F%E9%B2%B8%E9%B1%BC%E5%A4%A7%E4%BA%8B%E8%AE%B0%E5%9B%9B%E5%B0%98%E5%9F%83%E8%90%BD%E5%AE%9A/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/04__%E9%A2%84%E4%B9%A0%E7%AF%87__%E5%B0%8F%E9%B2%B8%E9%B1%BC%E5%A4%A7%E4%BA%8B%E8%AE%B0%E5%9B%9B%E5%B0%98%E5%9F%83%E8%90%BD%E5%AE%9A/</guid>
      <description>&lt;p&gt;你好，我是张磊。我今天分享的主题是：小鲸鱼大事记之尘埃落定。&lt;/p&gt;&#xA;&lt;p&gt;在上一次的分享中我提到，伴随着 Docker 公司一手打造出来的容器技术生态在云计算市场中站稳了脚跟，围绕着 Docker 项目进行的各个层次的集成与创新产品，也如雨后春笋般出现在这个新兴市场当中。而 Docker 公司，不失时机地发布了 Docker Compose、Swarm 和 Machine“三件套”，在重新定义 PaaS 的方向上走出了最关键的一步。&lt;/p&gt;</description>
    </item>
    <item>
      <title>05__白话容器基础（一）：从进程说开去</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/05__%E7%99%BD%E8%AF%9D%E5%AE%B9%E5%99%A8%E5%9F%BA%E7%A1%80%E4%B8%80%E4%BB%8E%E8%BF%9B%E7%A8%8B%E8%AF%B4%E5%BC%80%E5%8E%BB/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/05__%E7%99%BD%E8%AF%9D%E5%AE%B9%E5%99%A8%E5%9F%BA%E7%A1%80%E4%B8%80%E4%BB%8E%E8%BF%9B%E7%A8%8B%E8%AF%B4%E5%BC%80%E5%8E%BB/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：白话容器基础之从进程说开去。&lt;/p&gt;&#xA;&lt;p&gt;在前面的 4 篇预习文章中，我梳理了“容器”这项技术的来龙去脉，通过这些内容，我希望你能理解如下几个事实：&lt;/p&gt;</description>
    </item>
    <item>
      <title>06__白话容器基础（二）：隔离与限制</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/06__%E7%99%BD%E8%AF%9D%E5%AE%B9%E5%99%A8%E5%9F%BA%E7%A1%80%E4%BA%8C%E9%9A%94%E7%A6%BB%E4%B8%8E%E9%99%90%E5%88%B6/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/06__%E7%99%BD%E8%AF%9D%E5%AE%B9%E5%99%A8%E5%9F%BA%E7%A1%80%E4%BA%8C%E9%9A%94%E7%A6%BB%E4%B8%8E%E9%99%90%E5%88%B6/</guid>
      <description>&lt;p&gt;你好，我是张磊。我今天和你分享的主题是：白话容器基础之隔离与限制。&lt;/p&gt;&#xA;&lt;p&gt;在上一篇文章中，我详细介绍了 Linux 容器中用来实现“隔离”的技术手段：Namespace。而通过这些讲解，你应该能够明白，&lt;strong&gt;Namespace 技术实际上修改了应用进程看待整个计算机“视图”，即它的“视线”被操作系统做了限制，只能“看到”某些指定的内容&lt;/strong&gt;。但对于宿主机来说，这些被“隔离”了的进程跟其他进程并没有太大区别。&lt;/p&gt;</description>
    </item>
    <item>
      <title>07__白话容器基础（三）：深入理解容器镜像</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/07__%E7%99%BD%E8%AF%9D%E5%AE%B9%E5%99%A8%E5%9F%BA%E7%A1%80%E4%B8%89%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E5%AE%B9%E5%99%A8%E9%95%9C%E5%83%8F/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/07__%E7%99%BD%E8%AF%9D%E5%AE%B9%E5%99%A8%E5%9F%BA%E7%A1%80%E4%B8%89%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E5%AE%B9%E5%99%A8%E9%95%9C%E5%83%8F/</guid>
      <description>&lt;p&gt;你好，我是张磊。我在今天这篇文章的最后，放置了一张 Kubernetes 的技能图谱，希望对你有帮助。&lt;/p&gt;&#xA;&lt;p&gt;在前两次的分享中，我讲解了 Linux 容器最基础的两种技术：Namespace 和 Cgroups。希望此时，你已经彻底理解了“容器的本质是一种特殊的进程”这个最重要的概念。&lt;/p&gt;</description>
    </item>
    <item>
      <title>08__白话容器基础（四）：重新认识Docker容器</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/08__%E7%99%BD%E8%AF%9D%E5%AE%B9%E5%99%A8%E5%9F%BA%E7%A1%80%E5%9B%9B%E9%87%8D%E6%96%B0%E8%AE%A4%E8%AF%86docker%E5%AE%B9%E5%99%A8/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/08__%E7%99%BD%E8%AF%9D%E5%AE%B9%E5%99%A8%E5%9F%BA%E7%A1%80%E5%9B%9B%E9%87%8D%E6%96%B0%E8%AE%A4%E8%AF%86docker%E5%AE%B9%E5%99%A8/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：白话容器基础之重新认识 Docker 容器。&lt;/p&gt;&#xA;&lt;p&gt;在前面的三次分享中，我分别从 Linux Namespace 的隔离能力、Linux Cgroups 的限制能力，以及基于 rootfs 的文件系统三个角度，为你剖析了一个 Linux 容器的核心实现原理。&lt;/p&gt;</description>
    </item>
    <item>
      <title>09__从容器到容器云：谈谈Kubernetes的本质</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/09__%E4%BB%8E%E5%AE%B9%E5%99%A8%E5%88%B0%E5%AE%B9%E5%99%A8%E4%BA%91%E8%B0%88%E8%B0%88kubernetes%E7%9A%84%E6%9C%AC%E8%B4%A8/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/09__%E4%BB%8E%E5%AE%B9%E5%99%A8%E5%88%B0%E5%AE%B9%E5%99%A8%E4%BA%91%E8%B0%88%E8%B0%88kubernetes%E7%9A%84%E6%9C%AC%E8%B4%A8/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：从容器到容器云，谈谈 Kubernetes 的本质。&lt;/p&gt;&#xA;&lt;p&gt;在前面的四篇文章中，我以 Docker 项目为例，一步步剖析了 Linux 容器的具体实现方式。通过这些讲解你应该能够明白：一个“容器”，实际上是一个由 Linux Namespace、Linux Cgroups 和 rootfs 三种技术构建出来的进程的隔离环境。&lt;/p&gt;</description>
    </item>
    <item>
      <title>10__Kubernetes一键部署利器：kubeadm</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/10__kubernetes%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2%E5%88%A9%E5%99%A8kubeadm/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/10__kubernetes%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2%E5%88%A9%E5%99%A8kubeadm/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：Kubernetes 一键部署利器之 kubeadm。&lt;/p&gt;&#xA;&lt;p&gt;通过前面几篇文章的内容，我其实阐述了这样一个思想：&lt;strong&gt;要真正发挥容器技术的实力，你就不能仅仅局限于对 Linux 容器本身的钻研和使用。&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>11__从0到1：搭建一个完整的Kubernetes集群</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/11__%E4%BB%8E0%E5%88%B01%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84kubernetes%E9%9B%86%E7%BE%A4/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/11__%E4%BB%8E0%E5%88%B01%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84kubernetes%E9%9B%86%E7%BE%A4/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：从 0 到 1 搭建一个完整的 Kubernetes 集群。&lt;/p&gt;&#xA;&lt;p&gt;在上一篇文章中，我介绍了 kubeadm 这个 Kubernetes 半官方管理工具的工作原理。既然 kubeadm 的初衷是让 Kubernetes 集群的部署不再让人头疼，那么这篇文章，我们就来使用它部署一个完整的 Kubernetes 集群吧。&lt;/p&gt;</description>
    </item>
    <item>
      <title>12__牛刀小试：我的第一个容器化应用</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/12__%E7%89%9B%E5%88%80%E5%B0%8F%E8%AF%95%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%AE%B9%E5%99%A8%E5%8C%96%E5%BA%94%E7%94%A8/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/12__%E7%89%9B%E5%88%80%E5%B0%8F%E8%AF%95%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%AE%B9%E5%99%A8%E5%8C%96%E5%BA%94%E7%94%A8/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：牛刀小试之我的第一个容器化应用。&lt;/p&gt;&#xA;&lt;p&gt;在上一篇文章《从 0 到 1：搭建一个完整的 Kubernetes 集群》中，我和你一起部署了一套完整的 Kubernetes 集群。这个集群虽然离生产环境的要求还有一定差距（比如，没有一键高可用部署），但也可以当作是一个准生产级别的 Kubernetes 集群了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>13__为什么我们需要Pod？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/13__%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E4%BB%AC%E9%9C%80%E8%A6%81pod/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/13__%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E4%BB%AC%E9%9C%80%E8%A6%81pod/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：为什么我们需要 Pod。&lt;/p&gt;&#xA;&lt;p&gt;在前面的文章中，我详细介绍了在 Kubernetes 里部署一个应用的过程。在这些讲解中，我提到了这样一个知识点：Pod，是 Kubernetes 项目中最小的 API 对象。如果换一个更专业的说法，我们可以这样描述：Pod，是 Kubernetes 项目的原子调度单位。&lt;/p&gt;</description>
    </item>
    <item>
      <title>13-深入剖析Kubernetes</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/13-%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/13-%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/</guid>
      <description></description>
    </item>
    <item>
      <title>14__深入解析Pod对象（一）：基本概念</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/14__%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90pod%E5%AF%B9%E8%B1%A1%E4%B8%80%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/14__%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90pod%E5%AF%B9%E8%B1%A1%E4%B8%80%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：深入解析 Pod 对象之基本概念。&lt;/p&gt;&#xA;&lt;p&gt;在上一篇文章中，我详细介绍了 Pod 这个 Kubernetes 项目中最重要的概念。而在今天这篇文章中，我会和你分享 Pod 对象的更多细节。&lt;/p&gt;</description>
    </item>
    <item>
      <title>15__深入解析Pod对象（二）：使用进阶</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/15__%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90pod%E5%AF%B9%E8%B1%A1%E4%BA%8C%E4%BD%BF%E7%94%A8%E8%BF%9B%E9%98%B6/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/15__%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90pod%E5%AF%B9%E8%B1%A1%E4%BA%8C%E4%BD%BF%E7%94%A8%E8%BF%9B%E9%98%B6/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：深入解析 Pod 对象之使用进阶。&lt;/p&gt;&#xA;&lt;p&gt;在上一篇文章中，我深入解析了 Pod 的 API 对象，讲解了 Pod 和 Container 的关系。&lt;/p&gt;&#xA;&lt;p&gt;作为 Kubernetes 项目里最核心的编排对象，Pod 携带的信息非常丰富。其中，资源定义（比如 CPU、内存等），以及调度相关的字段，我会在后面专门讲解调度器时再进行深入的分析。在本篇，我们就先从一种特殊的 Volume 开始，来帮助你更加深入地理解 Pod 对象各个重要字段的含义。&lt;/p&gt;</description>
    </item>
    <item>
      <title>16__编排其实很简单：谈谈“控制器”模型</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/16__%E7%BC%96%E6%8E%92%E5%85%B6%E5%AE%9E%E5%BE%88%E7%AE%80%E5%8D%95%E8%B0%88%E8%B0%88%E6%8E%A7%E5%88%B6%E5%99%A8%E6%A8%A1%E5%9E%8B/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/16__%E7%BC%96%E6%8E%92%E5%85%B6%E5%AE%9E%E5%BE%88%E7%AE%80%E5%8D%95%E8%B0%88%E8%B0%88%E6%8E%A7%E5%88%B6%E5%99%A8%E6%A8%A1%E5%9E%8B/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：编排其实很简单之谈谈“控制器”模型。&lt;/p&gt;&#xA;&lt;p&gt;在上一篇文章中，我和你详细介绍了 Pod 的用法，讲解了 Pod 这个 API 对象的各个字段。而接下来，我们就一起来看看“编排”这个 Kubernetes 项目最核心的功能吧。&lt;/p&gt;</description>
    </item>
    <item>
      <title>17__经典PaaS的记忆：作业副本与水平扩展</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/17__%E7%BB%8F%E5%85%B8paas%E7%9A%84%E8%AE%B0%E5%BF%86%E4%BD%9C%E4%B8%9A%E5%89%AF%E6%9C%AC%E4%B8%8E%E6%B0%B4%E5%B9%B3%E6%89%A9%E5%B1%95/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/17__%E7%BB%8F%E5%85%B8paas%E7%9A%84%E8%AE%B0%E5%BF%86%E4%BD%9C%E4%B8%9A%E5%89%AF%E6%9C%AC%E4%B8%8E%E6%B0%B4%E5%B9%B3%E6%89%A9%E5%B1%95/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：经典 PaaS 的记忆之作业副本与水平扩展。&lt;/p&gt;&#xA;&lt;p&gt;在上一篇文章中，我为你详细介绍了 Kubernetes 项目中第一个重要的设计思想：控制器模式。&lt;/p&gt;</description>
    </item>
    <item>
      <title>18__深入理解StatefulSet（一）：拓扑状态</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/18__%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3statefulset%E4%B8%80%E6%8B%93%E6%89%91%E7%8A%B6%E6%80%81/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/18__%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3statefulset%E4%B8%80%E6%8B%93%E6%89%91%E7%8A%B6%E6%80%81/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：深入理解 StatefulSet 之拓扑状态。&lt;/p&gt;&#xA;&lt;p&gt;在上一篇文章中，我在结尾处讨论到了 Deployment 实际上并不足以覆盖所有的应用编排问题。&lt;/p&gt;&#xA;&lt;p&gt;造成这个问题的根本原因，在于 Deployment 对应用做了一个简单化假设。&lt;/p&gt;</description>
    </item>
    <item>
      <title>19__深入理解StatefulSet（二）：存储状态</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/19__%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3statefulset%E4%BA%8C%E5%AD%98%E5%82%A8%E7%8A%B6%E6%80%81/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/19__%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3statefulset%E4%BA%8C%E5%AD%98%E5%82%A8%E7%8A%B6%E6%80%81/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：深入理解 StatefulSet 之存储状态。&lt;/p&gt;&#xA;&lt;p&gt;在上一篇文章中，我和你分享了 StatefulSet 如何保证应用实例的拓扑状态，在 Pod 删除和再创建的过程中保持稳定。&lt;/p&gt;</description>
    </item>
    <item>
      <title>20__深入理解StatefulSet（三）：有状态应用实践</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/20__%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3statefulset%E4%B8%89%E6%9C%89%E7%8A%B6%E6%80%81%E5%BA%94%E7%94%A8%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/20__%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3statefulset%E4%B8%89%E6%9C%89%E7%8A%B6%E6%80%81%E5%BA%94%E7%94%A8%E5%AE%9E%E8%B7%B5/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：深入理解 StatefulSet 之有状态应用实践。&lt;/p&gt;&#xA;&lt;p&gt;在前面的两篇文章中，我详细讲解了 StatefulSet 的工作原理，以及处理拓扑状态和存储状态的方法。而在今天这篇文章中，我将通过一个实际的例子，再次为你深入解读一下部署一个 StatefulSet 的完整流程。&lt;/p&gt;</description>
    </item>
    <item>
      <title>21__容器化守护进程的意义：DaemonSet</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/21__%E5%AE%B9%E5%99%A8%E5%8C%96%E5%AE%88%E6%8A%A4%E8%BF%9B%E7%A8%8B%E7%9A%84%E6%84%8F%E4%B9%89daemonset/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/21__%E5%AE%B9%E5%99%A8%E5%8C%96%E5%AE%88%E6%8A%A4%E8%BF%9B%E7%A8%8B%E7%9A%84%E6%84%8F%E4%B9%89daemonset/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：容器化守护进程的意义之 DaemonSet。&lt;/p&gt;&#xA;&lt;p&gt;在上一篇文章中，我和你详细分享了使用 StatefulSet 编排“有状态应用”的过程。从中不难看出，StatefulSet 其实就是对现有典型运维业务的容器化抽象。也就是说，你一定有方法在不使用 Kubernetes、甚至不使用容器的情况下，自己 DIY 一个类似的方案出来。但是，一旦涉及到升级、版本管理等更工程化的能力，Kubernetes 的好处，才会更加凸现。&lt;/p&gt;</description>
    </item>
    <item>
      <title>22__撬动离线业务：Job与CronJob</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/22__%E6%92%AC%E5%8A%A8%E7%A6%BB%E7%BA%BF%E4%B8%9A%E5%8A%A1job%E4%B8%8Ecronjob/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/22__%E6%92%AC%E5%8A%A8%E7%A6%BB%E7%BA%BF%E4%B8%9A%E5%8A%A1job%E4%B8%8Ecronjob/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：撬动离线业务之 Job 与 CronJob。&lt;/p&gt;&#xA;&lt;p&gt;在前面的几篇文章中，我和你详细分享了 Deployment、StatefulSet，以及 DaemonSet 这三个编排概念。你有没有发现它们的共同之处呢？&lt;/p&gt;</description>
    </item>
    <item>
      <title>23__声明式API与Kubernetes编程范式</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/23__%E5%A3%B0%E6%98%8E%E5%BC%8Fapi%E4%B8%8Ekubernetes%E7%BC%96%E7%A8%8B%E8%8C%83%E5%BC%8F/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/23__%E5%A3%B0%E6%98%8E%E5%BC%8Fapi%E4%B8%8Ekubernetes%E7%BC%96%E7%A8%8B%E8%8C%83%E5%BC%8F/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：声明式 API 与 Kubernetes 编程范式。&lt;/p&gt;&#xA;&lt;p&gt;在前面的几篇文章中，我和你分享了很多 Kubernetes 的 API 对象。这些 API 对象，有的是用来描述应用，有的则是为应用提供各种各样的服务。但是，无一例外地，为了使用这些 API 对象提供的能力，你都需要编写一个对应的 YAML 文件交给 Kubernetes。&lt;/p&gt;</description>
    </item>
    <item>
      <title>24__深入解析声明式API（一）：API对象的奥秘</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/24__%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90%E5%A3%B0%E6%98%8E%E5%BC%8Fapi%E4%B8%80api%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%A5%A5%E7%A7%98/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/24__%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90%E5%A3%B0%E6%98%8E%E5%BC%8Fapi%E4%B8%80api%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%A5%A5%E7%A7%98/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：深入解析声明式 API 之 API 对象的奥秘。&lt;/p&gt;&#xA;&lt;p&gt;在上一篇文章中，我为你详细讲解了 Kubernetes 声明式 API 的设计、特点，以及使用方式。&lt;/p&gt;&#xA;&lt;p&gt;而在今天这篇文章中，我就来为你讲解一下 Kubernetes 声明式 API 的工作原理，以及如何利用这套 API 机制，在 Kubernetes 里添加自定义的 API 对象。&lt;/p&gt;</description>
    </item>
    <item>
      <title>25__深入解析声明式API（二）：编写自定义控制器</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/25__%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90%E5%A3%B0%E6%98%8E%E5%BC%8Fapi%E4%BA%8C%E7%BC%96%E5%86%99%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E5%88%B6%E5%99%A8/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/25__%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90%E5%A3%B0%E6%98%8E%E5%BC%8Fapi%E4%BA%8C%E7%BC%96%E5%86%99%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E5%88%B6%E5%99%A8/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：深入解析声明式 API 之编写自定义控制器。&lt;/p&gt;&#xA;&lt;p&gt;在上一篇文章中，我和你详细分享了 Kubernetes 中声明式 API 的实现原理，并且通过一个添加 Network 对象的实例，为你讲述了在 Kubernetes 里添加 API 资源的过程。&lt;/p&gt;</description>
    </item>
    <item>
      <title>26__基于角色的权限控制：RBAC</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/26__%E5%9F%BA%E4%BA%8E%E8%A7%92%E8%89%B2%E7%9A%84%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6rbac/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/26__%E5%9F%BA%E4%BA%8E%E8%A7%92%E8%89%B2%E7%9A%84%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6rbac/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：基于角色的权限控制之 RBAC。&lt;/p&gt;&#xA;&lt;p&gt;在前面的文章中，我已经为你讲解了很多种 Kubernetes 内置的编排对象，以及对应的控制器模式的实现原理。此外，我还剖析了自定义 API 资源类型和控制器的编写方式。&lt;/p&gt;</description>
    </item>
    <item>
      <title>27__聪明的微创新：Operator工作原理解读</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/27__%E8%81%AA%E6%98%8E%E7%9A%84%E5%BE%AE%E5%88%9B%E6%96%B0operator%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86%E8%A7%A3%E8%AF%BB/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/27__%E8%81%AA%E6%98%8E%E7%9A%84%E5%BE%AE%E5%88%9B%E6%96%B0operator%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86%E8%A7%A3%E8%AF%BB/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：聪明的微创新之 Operator 工作原理解读。&lt;/p&gt;&#xA;&lt;p&gt;在前面的几篇文章中，我已经和你分享了 Kubernetes 项目中的大部分编排对象（比如 Deployment、StatefulSet、DaemonSet，以及 Job），也介绍了“有状态应用”的管理方法，还阐述了为 Kubernetes 添加自定义 API 对象和编写自定义控制器的原理和流程。&lt;/p&gt;</description>
    </item>
    <item>
      <title>28__PV、PVC、StorageClass，这些到底在说啥？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/28__pvpvcstorageclass%E8%BF%99%E4%BA%9B%E5%88%B0%E5%BA%95%E5%9C%A8%E8%AF%B4%E5%95%A5/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/28__pvpvcstorageclass%E8%BF%99%E4%BA%9B%E5%88%B0%E5%BA%95%E5%9C%A8%E8%AF%B4%E5%95%A5/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：PV、PVC、StorageClass，这些到底在说啥？&lt;/p&gt;&#xA;&lt;p&gt;在前面的文章中，我重点为你分析了 Kubernetes 的各种编排能力。&lt;/p&gt;</description>
    </item>
    <item>
      <title>29__PV、PVC体系是不是多此一举？从本地持久化卷谈起</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/29__pvpvc%E4%BD%93%E7%B3%BB%E6%98%AF%E4%B8%8D%E6%98%AF%E5%A4%9A%E6%AD%A4%E4%B8%80%E4%B8%BE%E4%BB%8E%E6%9C%AC%E5%9C%B0%E6%8C%81%E4%B9%85%E5%8C%96%E5%8D%B7%E8%B0%88%E8%B5%B7/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/29__pvpvc%E4%BD%93%E7%B3%BB%E6%98%AF%E4%B8%8D%E6%98%AF%E5%A4%9A%E6%AD%A4%E4%B8%80%E4%B8%BE%E4%BB%8E%E6%9C%AC%E5%9C%B0%E6%8C%81%E4%B9%85%E5%8C%96%E5%8D%B7%E8%B0%88%E8%B5%B7/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：PV、PVC 体系是不是多此一举？从本地持久化卷谈起。&lt;/p&gt;&#xA;&lt;p&gt;在上一篇文章中，我为你详细讲解了 PV、PVC 持久化存储体系在 Kubernetes 项目中的设计和实现原理。而在文章最后的思考题中，我为你留下了这样一个讨论话题：像 PV、PVC 这样的用法，是不是有“过度设计”的嫌疑？&lt;/p&gt;</description>
    </item>
    <item>
      <title>30__编写自己的存储插件：FlexVolume与CSI</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/30__%E7%BC%96%E5%86%99%E8%87%AA%E5%B7%B1%E7%9A%84%E5%AD%98%E5%82%A8%E6%8F%92%E4%BB%B6flexvolume%E4%B8%8Ecsi/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/30__%E7%BC%96%E5%86%99%E8%87%AA%E5%B7%B1%E7%9A%84%E5%AD%98%E5%82%A8%E6%8F%92%E4%BB%B6flexvolume%E4%B8%8Ecsi/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：编写自己的存储插件之 FlexVolume 与 CSI。&lt;/p&gt;&#xA;&lt;p&gt;在上一篇文章中，我为你详细介绍了 Kubernetes 里的持久化存储体系，讲解了 PV 和 PVC 的具体实现原理，并提到了这样的设计实际上是出于对整个存储体系的可扩展性的考虑。&lt;/p&gt;</description>
    </item>
    <item>
      <title>31__容器存储实践：CSI插件编写指南</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/31__%E5%AE%B9%E5%99%A8%E5%AD%98%E5%82%A8%E5%AE%9E%E8%B7%B5csi%E6%8F%92%E4%BB%B6%E7%BC%96%E5%86%99%E6%8C%87%E5%8D%97/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/31__%E5%AE%B9%E5%99%A8%E5%AD%98%E5%82%A8%E5%AE%9E%E8%B7%B5csi%E6%8F%92%E4%BB%B6%E7%BC%96%E5%86%99%E6%8C%87%E5%8D%97/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：容器存储实践之 CSI 插件编写指南。&lt;/p&gt;&#xA;&lt;p&gt;在上一篇文章中，我已经为你详细讲解了 CSI 插件机制的设计原理。今天我将继续和你一起实践一个 CSI 插件的编写过程。&lt;/p&gt;</description>
    </item>
    <item>
      <title>32__浅谈容器网络</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/32__%E6%B5%85%E8%B0%88%E5%AE%B9%E5%99%A8%E7%BD%91%E7%BB%9C/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/32__%E6%B5%85%E8%B0%88%E5%AE%B9%E5%99%A8%E7%BD%91%E7%BB%9C/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：浅谈容器网络。&lt;/p&gt;&#xA;&lt;p&gt;在前面讲解容器基础时，我曾经提到过一个 Linux 容器能看见的“网络栈”，实际上是被隔离在它自己的 Network Namespace 当中的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>33__深入解析容器跨主机网络</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/33__%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90%E5%AE%B9%E5%99%A8%E8%B7%A8%E4%B8%BB%E6%9C%BA%E7%BD%91%E7%BB%9C/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/33__%E6%B7%B1%E5%85%A5%E8%A7%A3%E6%9E%90%E5%AE%B9%E5%99%A8%E8%B7%A8%E4%B8%BB%E6%9C%BA%E7%BD%91%E7%BB%9C/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：深入解析容器跨主机网络。&lt;/p&gt;&#xA;&lt;p&gt;在上一篇文章中，我为你详细讲解了在单机环境下，Linux 容器网络的实现原理（网桥模式）。并且提到了，在 Docker 的默认配置下，不同宿主机上的容器通过 IP 地址进行互相访问是根本做不到的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>34__Kubernetes网络模型与CNI网络插件</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/34__kubernetes%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B%E4%B8%8Ecni%E7%BD%91%E7%BB%9C%E6%8F%92%E4%BB%B6/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/34__kubernetes%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B%E4%B8%8Ecni%E7%BD%91%E7%BB%9C%E6%8F%92%E4%BB%B6/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：Kubernetes 网络模型与 CNI 网络插件。&lt;/p&gt;&#xA;&lt;p&gt;在上一篇文章中，我以 Flannel 项目为例，为你详细讲解了容器跨主机网络的两种实现方法：UDP 和 VXLAN。&lt;/p&gt;</description>
    </item>
    <item>
      <title>35__解读Kubernetes三层网络方案</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/35__%E8%A7%A3%E8%AF%BBkubernetes%E4%B8%89%E5%B1%82%E7%BD%91%E7%BB%9C%E6%96%B9%E6%A1%88/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/35__%E8%A7%A3%E8%AF%BBkubernetes%E4%B8%89%E5%B1%82%E7%BD%91%E7%BB%9C%E6%96%B9%E6%A1%88/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：解读 Kubernetes 三层网络方案。&lt;/p&gt;&#xA;&lt;p&gt;在上一篇文章中，我以网桥类型的 Flannel 插件为例，为你讲解了 Kubernetes 里容器网络和 CNI 插件的主要工作原理。不过，除了这种模式之外，还有一种纯三层（Pure Layer 3）网络方案非常值得你注意。其中的典型例子，莫过于 Flannel 的 host-gw 模式和 Calico 项目了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>36__为什么说Kubernetes只有soft_multi-tenancy？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/36__%E4%B8%BA%E4%BB%80%E4%B9%88%E8%AF%B4kubernetes%E5%8F%AA%E6%9C%89soft_multi-tenancy/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/36__%E4%B8%BA%E4%BB%80%E4%B9%88%E8%AF%B4kubernetes%E5%8F%AA%E6%9C%89soft_multi-tenancy/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：为什么说 Kubernetes 只有 soft multi-tenancy？&lt;/p&gt;&#xA;&lt;p&gt;在前面的文章中，我为你详细讲解了 Kubernetes 生态里，主流容器网络方案的工作原理。&lt;/p&gt;&#xA;&lt;p&gt;不难发现，Kubernetes 的网络模型，以及前面这些网络方案的实现，都只关注容器之间网络的“连通”，却并不关心容器之间网络的“隔离”。这跟传统的 IaaS 层的网络方案，区别非常明显。&lt;/p&gt;</description>
    </item>
    <item>
      <title>37__找到容器不容易：Service、DNS与服务发现</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/37__%E6%89%BE%E5%88%B0%E5%AE%B9%E5%99%A8%E4%B8%8D%E5%AE%B9%E6%98%93servicedns%E4%B8%8E%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/37__%E6%89%BE%E5%88%B0%E5%AE%B9%E5%99%A8%E4%B8%8D%E5%AE%B9%E6%98%93servicedns%E4%B8%8E%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：找到容器不容易之 Service、DNS 与服务发现。&lt;/p&gt;&#xA;&lt;p&gt;在前面的文章中，我们已经多次使用到了 Service 这个 Kubernetes 里重要的服务对象。而 Kubernetes 之所以需要 Service，一方面是因为 Pod 的 IP 不是固定的，另一方面则是因为一组 Pod 实例之间总会有负载均衡的需求。&lt;/p&gt;</description>
    </item>
    <item>
      <title>38__从外界连通Service与Service调试“三板斧”</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/38__%E4%BB%8E%E5%A4%96%E7%95%8C%E8%BF%9E%E9%80%9Aservice%E4%B8%8Eservice%E8%B0%83%E8%AF%95%E4%B8%89%E6%9D%BF%E6%96%A7/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/38__%E4%BB%8E%E5%A4%96%E7%95%8C%E8%BF%9E%E9%80%9Aservice%E4%B8%8Eservice%E8%B0%83%E8%AF%95%E4%B8%89%E6%9D%BF%E6%96%A7/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：从外界连通 Service 与 Service 调试“三板斧”。&lt;/p&gt;&#xA;&lt;p&gt;在上一篇文章中，我为你介绍了 Service 机制的工作原理。通过这些讲解，你应该能够明白这样一个事实：Service 的访问信息在 Kubernetes 集群之外，其实是无效的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>39__谈谈Service与Ingress</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/39__%E8%B0%88%E8%B0%88service%E4%B8%8Eingress/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/39__%E8%B0%88%E8%B0%88service%E4%B8%8Eingress/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：谈谈 Service 与 Ingress。&lt;/p&gt;&#xA;&lt;p&gt;在上一篇文章中，我为你详细讲解了将 Service 暴露给外界的三种方法。其中有一个叫作 LoadBalancer 类型的 Service，它会为你在 Cloud Provider（比如：Google Cloud 或者 OpenStack）里创建一个与该 Service 对应的负载均衡服务。&lt;/p&gt;</description>
    </item>
    <item>
      <title>40__Kubernetes的资源模型与资源管理</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/40__kubernetes%E7%9A%84%E8%B5%84%E6%BA%90%E6%A8%A1%E5%9E%8B%E4%B8%8E%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/40__kubernetes%E7%9A%84%E8%B5%84%E6%BA%90%E6%A8%A1%E5%9E%8B%E4%B8%8E%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：Kubernetes 的资源模型与资源管理。&lt;/p&gt;&#xA;&lt;p&gt;作为一个容器集群编排与管理项目，Kubernetes 为用户提供的基础设施能力，不仅包括了我在前面为你讲述的应用定义和描述的部分，还包括了对应用的资源管理和调度的处理。那么，从今天这篇文章开始，我就来为你详细讲解一下后面这部分内容。&lt;/p&gt;</description>
    </item>
    <item>
      <title>41__十字路口上的Kubernetes默认调度器</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/41__%E5%8D%81%E5%AD%97%E8%B7%AF%E5%8F%A3%E4%B8%8A%E7%9A%84kubernetes%E9%BB%98%E8%AE%A4%E8%B0%83%E5%BA%A6%E5%99%A8/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/41__%E5%8D%81%E5%AD%97%E8%B7%AF%E5%8F%A3%E4%B8%8A%E7%9A%84kubernetes%E9%BB%98%E8%AE%A4%E8%B0%83%E5%BA%A6%E5%99%A8/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：十字路口上的 Kubernetes 默认调度器。&lt;/p&gt;&#xA;&lt;p&gt;在上一篇文章中，我主要为你介绍了 Kubernetes 里关于资源模型和资源管理的设计方法。而在今天这篇文章中，我就来为你介绍一下 Kubernetes 的默认调度器（default scheduler）。&lt;/p&gt;</description>
    </item>
    <item>
      <title>42__Kubernetes默认调度器调度策略解析</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/42__kubernetes%E9%BB%98%E8%AE%A4%E8%B0%83%E5%BA%A6%E5%99%A8%E8%B0%83%E5%BA%A6%E7%AD%96%E7%95%A5%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/42__kubernetes%E9%BB%98%E8%AE%A4%E8%B0%83%E5%BA%A6%E5%99%A8%E8%B0%83%E5%BA%A6%E7%AD%96%E7%95%A5%E8%A7%A3%E6%9E%90/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：Kubernetes 默认调度器调度策略解析。&lt;/p&gt;&#xA;&lt;p&gt;在上一篇文章中，我主要为你讲解了 Kubernetes 默认调度器的设计原理和架构。在今天这篇文章中，我们就专注在调度过程中 Predicates 和 Priorities 这两个调度策略主要发生作用的阶段。&lt;/p&gt;</description>
    </item>
    <item>
      <title>43__Kubernetes默认调度器的优先级与抢占机制</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/43__kubernetes%E9%BB%98%E8%AE%A4%E8%B0%83%E5%BA%A6%E5%99%A8%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8E%E6%8A%A2%E5%8D%A0%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/43__kubernetes%E9%BB%98%E8%AE%A4%E8%B0%83%E5%BA%A6%E5%99%A8%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E4%B8%8E%E6%8A%A2%E5%8D%A0%E6%9C%BA%E5%88%B6/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：Kubernetes 默认调度器的优先级与抢占机制。&lt;/p&gt;&#xA;&lt;p&gt;在上一篇文章中，我为你详细讲解了 Kubernetes 默认调度器的主要调度算法的工作原理。在本篇文章中，我再来为你讲解一下 Kubernetes 调度器里的另一个重要机制，即：优先级（Priority）和抢占（Preemption）机制。&lt;/p&gt;</description>
    </item>
    <item>
      <title>44__Kubernetes_GPU管理与Device_Plugin机制</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/44__kubernetes_gpu%E7%AE%A1%E7%90%86%E4%B8%8Edevice_plugin%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/44__kubernetes_gpu%E7%AE%A1%E7%90%86%E4%B8%8Edevice_plugin%E6%9C%BA%E5%88%B6/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：Kubernetes GPU 管理与 Device Plugin 机制。&lt;/p&gt;&#xA;&lt;p&gt;2016 年，随着 AlphaGo 的走红和 TensorFlow 项目的异军突起，一场名为 AI 的技术革命迅速从学术界蔓延到了工业界，所谓的 AI 元年，就此拉开帷幕。&lt;/p&gt;</description>
    </item>
    <item>
      <title>45__幕后英雄：SIG-Node与CRI</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/45__%E5%B9%95%E5%90%8E%E8%8B%B1%E9%9B%84sig-node%E4%B8%8Ecri/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/45__%E5%B9%95%E5%90%8E%E8%8B%B1%E9%9B%84sig-node%E4%B8%8Ecri/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：幕后英雄之 SIG-Node 与 CRI。&lt;/p&gt;&#xA;&lt;p&gt;在前面的文章中，我为你详细讲解了关于 Kubernetes 调度和资源管理相关的内容。实际上，在调度这一步完成后，Kubernetes 就需要负责将这个调度成功的 Pod，在宿主机上创建出来，并把它所定义的各个容器启动起来。这些，都是 kubelet 这个核心组件的主要功能。&lt;/p&gt;</description>
    </item>
    <item>
      <title>46__解读_CRI_与_容器运行时</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/46__%E8%A7%A3%E8%AF%BB_cri_%E4%B8%8E_%E5%AE%B9%E5%99%A8%E8%BF%90%E8%A1%8C%E6%97%B6/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/46__%E8%A7%A3%E8%AF%BB_cri_%E4%B8%8E_%E5%AE%B9%E5%99%A8%E8%BF%90%E8%A1%8C%E6%97%B6/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：解读 CRI 与 容器运行时。&lt;/p&gt;&#xA;&lt;p&gt;在上一篇文章中，我为你详细讲解了 kubelet 的工作原理和 CRI 的来龙去脉。在今天这篇文章中，我们就来进一步地、更深入地了解一下 CRI 的设计与工作原理。&lt;/p&gt;</description>
    </item>
    <item>
      <title>47__绝不仅仅是安全：Kata_Containers_与_gVisor</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/47__%E7%BB%9D%E4%B8%8D%E4%BB%85%E4%BB%85%E6%98%AF%E5%AE%89%E5%85%A8kata_containers_%E4%B8%8E_gvisor/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/47__%E7%BB%9D%E4%B8%8D%E4%BB%85%E4%BB%85%E6%98%AF%E5%AE%89%E5%85%A8kata_containers_%E4%B8%8E_gvisor/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：绝不仅仅是安全之 Kata Containers 与 gVisor。&lt;/p&gt;&#xA;&lt;p&gt;在上一篇文章中，我为你详细地讲解了 kubelet 和 CRI 的设计和具体的工作原理。而在讲解 CRI 的诞生背景时，我也提到过，这其中的一个重要推动力，就是基于虚拟化或者独立内核的安全容器项目的逐渐成熟。&lt;/p&gt;</description>
    </item>
    <item>
      <title>48__Prometheus、Metrics_Server与Kubernetes监控体系</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/48__prometheusmetrics_server%E4%B8%8Ekubernetes%E7%9B%91%E6%8E%A7%E4%BD%93%E7%B3%BB/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/48__prometheusmetrics_server%E4%B8%8Ekubernetes%E7%9B%91%E6%8E%A7%E4%BD%93%E7%B3%BB/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：Prometheus、Metrics Server 与 Kubernetes 监控体系。&lt;/p&gt;&#xA;&lt;p&gt;通过前面的文章，我已经和你分享过了 Kubernetes 的核心架构，编排概念，以及具体的设计与实现。接下来，我会用 3 篇文章，为你介绍 Kubernetes 监控相关的一些核心技术。&lt;/p&gt;</description>
    </item>
    <item>
      <title>49__Custom_Metrics_让Auto_Scaling不再“食之无味”</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/49__custom_metrics_%E8%AE%A9auto_scaling%E4%B8%8D%E5%86%8D%E9%A3%9F%E4%B9%8B%E6%97%A0%E5%91%B3/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/49__custom_metrics_%E8%AE%A9auto_scaling%E4%B8%8D%E5%86%8D%E9%A3%9F%E4%B9%8B%E6%97%A0%E5%91%B3/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：Custom Metrics，让 Auto Scaling 不再“食之无味”。&lt;/p&gt;&#xA;&lt;p&gt;在上一篇文章中，我为你详细讲述了 Kubernetes 里的核心监控体系的架构。不难看到，Prometheus 项目在其中占据了最为核心的位置。&lt;/p&gt;</description>
    </item>
    <item>
      <title>50__让日志无处可逃：容器日志收集与管理</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/50__%E8%AE%A9%E6%97%A5%E5%BF%97%E6%97%A0%E5%A4%84%E5%8F%AF%E9%80%83%E5%AE%B9%E5%99%A8%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86%E4%B8%8E%E7%AE%A1%E7%90%86/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/50__%E8%AE%A9%E6%97%A5%E5%BF%97%E6%97%A0%E5%A4%84%E5%8F%AF%E9%80%83%E5%AE%B9%E5%99%A8%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86%E4%B8%8E%E7%AE%A1%E7%90%86/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：让日志无处可逃之容器日志收集与管理。&lt;/p&gt;&#xA;&lt;p&gt;在前面的文章中，我为你详细讲解了 Kubernetes 的核心监控体系和自定义监控体系的设计与实现思路。而在本篇文章里，我就来为你详细介绍一下 Kubernetes 里关于容器日志的处理方式。&lt;/p&gt;</description>
    </item>
    <item>
      <title>51__谈谈Kubernetes开源社区和未来走向</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/51__%E8%B0%88%E8%B0%88kubernetes%E5%BC%80%E6%BA%90%E7%A4%BE%E5%8C%BA%E5%92%8C%E6%9C%AA%E6%9D%A5%E8%B5%B0%E5%90%91/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/51__%E8%B0%88%E8%B0%88kubernetes%E5%BC%80%E6%BA%90%E7%A4%BE%E5%8C%BA%E5%92%8C%E6%9C%AA%E6%9D%A5%E8%B5%B0%E5%90%91/</guid>
      <description>&lt;p&gt;你好，我是张磊。今天我和你分享的主题是：谈谈 Kubernetes 开源社区和未来走向。&lt;/p&gt;&#xA;&lt;p&gt;在前面的文章中，我已经为你详细讲解了容器与 Kubernetes 项目的所有核心技术点。在今天这最后一篇文章里，我就跟你谈一谈 Kubernetes 开源社区以及 CNCF 相关的一些话题。&lt;/p&gt;</description>
    </item>
    <item>
      <title>52__答疑：在问题中解决问题，在思考中产生思考</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/52__%E7%AD%94%E7%96%91%E5%9C%A8%E9%97%AE%E9%A2%98%E4%B8%AD%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98%E5%9C%A8%E6%80%9D%E8%80%83%E4%B8%AD%E4%BA%A7%E7%94%9F%E6%80%9D%E8%80%83/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/52__%E7%AD%94%E7%96%91%E5%9C%A8%E9%97%AE%E9%A2%98%E4%B8%AD%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98%E5%9C%A8%E6%80%9D%E8%80%83%E4%B8%AD%E4%BA%A7%E7%94%9F%E6%80%9D%E8%80%83/</guid>
      <description>&lt;p&gt;在本篇文章中，我将会对本专栏部分文章最后的思考题，进行一次集中地汇总和答疑。希望能够帮助你更好地理解和掌握 Kubernetes 项目。&lt;/p&gt;&#xA;&lt;p&gt;问题 1：你是否知道如何修复容器中的 top 指令以及 /proc 文件系统中的信息呢？（提示：lxcfs）&lt;/p&gt;</description>
    </item>
    <item>
      <title>结束语__Kubernetes：赢开发者赢天下</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/%E7%BB%93%E6%9D%9F%E8%AF%AD__kubernetes%E8%B5%A2%E5%BC%80%E5%8F%91%E8%80%85%E8%B5%A2%E5%A4%A9%E4%B8%8B/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/%E7%BB%93%E6%9D%9F%E8%AF%AD__kubernetes%E8%B5%A2%E5%BC%80%E5%8F%91%E8%80%85%E8%B5%A2%E5%A4%A9%E4%B8%8B/</guid>
      <description>&lt;p&gt;你好，我是张磊。&lt;/p&gt;&#xA;&lt;p&gt;在本专栏一开始，我用了大量的笔墨和篇幅和你探讨了这样一个话题：Kubernetes 为什么会赢？&lt;/p&gt;&#xA;&lt;p&gt;而在当时的讨论中，我为你下了这样一个结论：Kubernetes 项目之所以能赢，最重要的原因在于它争取到了云计算生态里的绝大多数开发者。不过，相信在那个时候，你可能会对这个结论有所疑惑：大家不都说 Kubernetes 是一个运维工具么？怎么就和开发者搭上了关系呢？&lt;/p&gt;</description>
    </item>
    <item>
      <title>开篇词__打通“容器技术”的任督二脉</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/%E5%BC%80%E7%AF%87%E8%AF%8D__%E6%89%93%E9%80%9A%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF%E7%9A%84%E4%BB%BB%E7%9D%A3%E4%BA%8C%E8%84%89/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/%E5%BC%80%E7%AF%87%E8%AF%8D__%E6%89%93%E9%80%9A%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF%E7%9A%84%E4%BB%BB%E7%9D%A3%E4%BA%8C%E8%84%89/</guid>
      <description>&lt;p&gt;你好，我是张磊，Kubernetes 社区的一位资深成员和项目维护者。&lt;/p&gt;&#xA;&lt;p&gt;2012 年，我还在浙大读书的时候，就有幸组建了一个云计算与 PaaS 基础设施相关的科研团队，就这样，我从早期的 Cloud Foundry 社区开始，正式与容器结缘。&lt;/p&gt;</description>
    </item>
    <item>
      <title>特别放送__2019_年，容器技术生态会发生些什么？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/%E7%89%B9%E5%88%AB%E6%94%BE%E9%80%81__2019_%E5%B9%B4%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF%E7%94%9F%E6%80%81%E4%BC%9A%E5%8F%91%E7%94%9F%E4%BA%9B%E4%BB%80%E4%B9%88/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90kubernetes/%E7%89%B9%E5%88%AB%E6%94%BE%E9%80%81__2019_%E5%B9%B4%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF%E7%94%9F%E6%80%81%E4%BC%9A%E5%8F%91%E7%94%9F%E4%BA%9B%E4%BB%80%E4%B9%88/</guid>
      <description>&lt;p&gt;你好，我是张磊。&lt;/p&gt;&#xA;&lt;p&gt;虽然“深入剖析 Kubernetes”专栏已经更新结束了，但我仍在挂念着每一个订阅专栏的“你”，也希望能多和你分享一些我的观点和看法，希望对你有所帮助。今天我和你分享的主题是：2019 年，容器技术生态会发生些什么。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
