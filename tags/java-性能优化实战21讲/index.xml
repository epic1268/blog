<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java 性能优化实战21讲 on Docs</title>
    <link>https://politcloud.org/tags/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/</link>
    <description>Recent content in Java 性能优化实战21讲 on Docs</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 10 Jan 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://politcloud.org/tags/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>01理论分析：性能优化，有哪些衡量指标？需要注意什么？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/01%E7%90%86%E8%AE%BA%E5%88%86%E6%9E%90%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%9C%89%E5%93%AA%E4%BA%9B%E8%A1%A1%E9%87%8F%E6%8C%87%E6%A0%87%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E4%BB%80%E4%B9%88/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/01%E7%90%86%E8%AE%BA%E5%88%86%E6%9E%90%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%9C%89%E5%93%AA%E4%BA%9B%E8%A1%A1%E9%87%8F%E6%8C%87%E6%A0%87%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E4%BB%80%E4%B9%88/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h2 id=&#34;autocollapsetoc-true&#34;&gt;title: &amp;ldquo;01理论分析：性能优化，有哪些衡量指标？需要注意什么？&amp;rdquo;&#xA;draft: false&#xA;date: 2024-06-14&#xA;keywords: [01理论分析：性能优化，有哪些衡量指标？需要注意什么？, Java 性能优化实战21讲, 极客时间]&#xA;categories: [Java 性能优化实战21讲]&#xA;tags: [极客时间]&#xA;comment: true&#xA;toc: true&#xA;autoCollapseToc: true&lt;/h2&gt;&#xA;&lt;p&gt;本课时主要从理论分析入手来介绍性能优化的衡量指标，及其理论方法和注意点。&lt;/p&gt;</description>
    </item>
    <item>
      <title>02理论分析：性能优化有章可循，谈谈常用的切入点</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/02%E7%90%86%E8%AE%BA%E5%88%86%E6%9E%90%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%9C%89%E7%AB%A0%E5%8F%AF%E5%BE%AA%E8%B0%88%E8%B0%88%E5%B8%B8%E7%94%A8%E7%9A%84%E5%88%87%E5%85%A5%E7%82%B9/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/02%E7%90%86%E8%AE%BA%E5%88%86%E6%9E%90%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%9C%89%E7%AB%A0%E5%8F%AF%E5%BE%AA%E8%B0%88%E8%B0%88%E5%B8%B8%E7%94%A8%E7%9A%84%E5%88%87%E5%85%A5%E7%82%B9/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h2 id=&#34;autocollapsetoc-true&#34;&gt;title: &amp;ldquo;02理论分析：性能优化有章可循，谈谈常用的切入点&amp;rdquo;&#xA;draft: false&#xA;date: 2024-06-14&#xA;keywords: [02理论分析：性能优化有章可循，谈谈常用的切入点, Java 性能优化实战21讲, 极客时间]&#xA;categories: [Java 性能优化实战21讲]&#xA;tags: [极客时间]&#xA;comment: true&#xA;toc: true&#xA;autoCollapseToc: true&lt;/h2&gt;&#xA;&lt;p&gt;本课时主要讲解 Java 性能优化有哪些可以遵循的规律。&lt;/p&gt;</description>
    </item>
    <item>
      <title>03深入剖析：哪些资源，容易成为瓶颈？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/03%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90%E5%93%AA%E4%BA%9B%E8%B5%84%E6%BA%90%E5%AE%B9%E6%98%93%E6%88%90%E4%B8%BA%E7%93%B6%E9%A2%88/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/03%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90%E5%93%AA%E4%BA%9B%E8%B5%84%E6%BA%90%E5%AE%B9%E6%98%93%E6%88%90%E4%B8%BA%E7%93%B6%E9%A2%88/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h2 id=&#34;autocollapsetoc-true&#34;&gt;title: &amp;ldquo;03深入剖析：哪些资源，容易成为瓶颈？&amp;rdquo;&#xA;draft: false&#xA;date: 2024-06-14&#xA;keywords: [03深入剖析：哪些资源，容易成为瓶颈？, Java 性能优化实战21讲, 极客时间]&#xA;categories: [Java 性能优化实战21讲]&#xA;tags: [极客时间]&#xA;comment: true&#xA;toc: true&#xA;autoCollapseToc: true&lt;/h2&gt;&#xA;&lt;p&gt;在第 02 课时，我们简单介绍了解决性能问题常用的一些切入点。本课时我将从计算机资源层面向你讲解，哪些系统组件容易出现性能瓶颈？以及如何判断该系统组件是否达到了瓶颈？&lt;/p&gt;</description>
    </item>
    <item>
      <title>04工具实践：如何获取代码性能数据？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/04%E5%B7%A5%E5%85%B7%E5%AE%9E%E8%B7%B5%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E4%BB%A3%E7%A0%81%E6%80%A7%E8%83%BD%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/04%E5%B7%A5%E5%85%B7%E5%AE%9E%E8%B7%B5%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E4%BB%A3%E7%A0%81%E6%80%A7%E8%83%BD%E6%95%B0%E6%8D%AE/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h2 id=&#34;autocollapsetoc-true&#34;&gt;title: &amp;ldquo;04工具实践：如何获取代码性能数据？&amp;rdquo;&#xA;draft: false&#xA;date: 2024-06-14&#xA;keywords: [04工具实践：如何获取代码性能数据？, Java 性能优化实战21讲, 极客时间]&#xA;categories: [Java 性能优化实战21讲]&#xA;tags: [极客时间]&#xA;comment: true&#xA;toc: true&#xA;autoCollapseToc: true&lt;/h2&gt;&#xA;&lt;p&gt;首先解答一下上一课时的问题。磁盘的速度这么慢，为什么 Kafka 操作磁盘，吞吐量还能那么高？&lt;/p&gt;</description>
    </item>
    <item>
      <title>05工具实践：基准测试JMH，精确测量方法性能</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/05%E5%B7%A5%E5%85%B7%E5%AE%9E%E8%B7%B5%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95jmh%E7%B2%BE%E7%A1%AE%E6%B5%8B%E9%87%8F%E6%96%B9%E6%B3%95%E6%80%A7%E8%83%BD/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/05%E5%B7%A5%E5%85%B7%E5%AE%9E%E8%B7%B5%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95jmh%E7%B2%BE%E7%A1%AE%E6%B5%8B%E9%87%8F%E6%96%B9%E6%B3%95%E6%80%A7%E8%83%BD/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h2 id=&#34;autocollapsetoc-true&#34;&gt;title: &amp;ldquo;05工具实践：基准测试JMH，精确测量方法性能&amp;rdquo;&#xA;draft: false&#xA;date: 2024-06-14&#xA;keywords: [05工具实践：基准测试JMH，精确测量方法性能, Java 性能优化实战21讲, 极客时间]&#xA;categories: [Java 性能优化实战21讲]&#xA;tags: [极客时间]&#xA;comment: true&#xA;toc: true&#xA;autoCollapseToc: true&lt;/h2&gt;&#xA;&lt;p&gt;上一课时，我们了解到一些外部工具可以获取系统的性能数据。&lt;/p&gt;</description>
    </item>
    <item>
      <title>06案例分析：缓冲区如何让代码加速</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/06%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90%E7%BC%93%E5%86%B2%E5%8C%BA%E5%A6%82%E4%BD%95%E8%AE%A9%E4%BB%A3%E7%A0%81%E5%8A%A0%E9%80%9F/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/06%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90%E7%BC%93%E5%86%B2%E5%8C%BA%E5%A6%82%E4%BD%95%E8%AE%A9%E4%BB%A3%E7%A0%81%E5%8A%A0%E9%80%9F/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h2 id=&#34;autocollapsetoc-true&#34;&gt;title: &amp;ldquo;06案例分析：缓冲区如何让代码加速&amp;rdquo;&#xA;draft: false&#xA;date: 2024-06-14&#xA;keywords: [Java 性能优化实战21讲, 06案例分析：缓冲区如何让代码加速, 极客时间]&#xA;categories: [Java 性能优化实战21讲]&#xA;tags: [极客时间]&#xA;comment: true&#xA;toc: true&#xA;autoCollapseToc: true&lt;/h2&gt;&#xA;&lt;p&gt;本课时将详细介绍“缓冲”这个优化手段，之前在 02 课时的复用优化中便提到过“缓冲”，你可以回看复习一下。&lt;/p&gt;</description>
    </item>
    <item>
      <title>07案例分析：无处不在的缓存，高并发系统的法宝</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/07%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90%E6%97%A0%E5%A4%84%E4%B8%8D%E5%9C%A8%E7%9A%84%E7%BC%93%E5%AD%98%E9%AB%98%E5%B9%B6%E5%8F%91%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%B3%95%E5%AE%9D/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/07%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90%E6%97%A0%E5%A4%84%E4%B8%8D%E5%9C%A8%E7%9A%84%E7%BC%93%E5%AD%98%E9%AB%98%E5%B9%B6%E5%8F%91%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%B3%95%E5%AE%9D/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h2 id=&#34;autocollapsetoc-true&#34;&gt;title: &amp;ldquo;07案例分析：无处不在的缓存，高并发系统的法宝&amp;rdquo;&#xA;draft: false&#xA;date: 2024-06-14&#xA;keywords: [Java 性能优化实战21讲, 07案例分析：无处不在的缓存，高并发系统的法宝, 极客时间]&#xA;categories: [Java 性能优化实战21讲]&#xA;tags: [极客时间]&#xA;comment: true&#xA;toc: true&#xA;autoCollapseToc: true&lt;/h2&gt;&#xA;&lt;p&gt;在上一课时，我们介绍了“缓冲”，这一课时我将介绍“缓冲”的孪生兄弟“缓存”。&lt;/p&gt;</description>
    </item>
    <item>
      <title>08案例分析：Redi如何助力秒杀业务</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/08%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90redi%E5%A6%82%E4%BD%95%E5%8A%A9%E5%8A%9B%E7%A7%92%E6%9D%80%E4%B8%9A%E5%8A%A1/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/08%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90redi%E5%A6%82%E4%BD%95%E5%8A%A9%E5%8A%9B%E7%A7%92%E6%9D%80%E4%B8%9A%E5%8A%A1/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h2 id=&#34;autocollapsetoc-true&#34;&gt;title: &amp;ldquo;08案例分析：Redi如何助力秒杀业务&amp;rdquo;&#xA;draft: false&#xA;date: 2024-06-14&#xA;keywords: [Java 性能优化实战21讲, 极客时间, 08案例分析：Redi如何助力秒杀业务]&#xA;categories: [Java 性能优化实战21讲]&#xA;tags: [极客时间]&#xA;comment: true&#xA;toc: true&#xA;autoCollapseToc: true&lt;/h2&gt;&#xA;&lt;p&gt;在上一课时，我们以 Guava 的 LoadingCache 为例，介绍了堆内缓存的特点以及一些注意事项。同时，还了解了缓存使用的场景，这对分布式缓存来说，同样适用。&lt;/p&gt;</description>
    </item>
    <item>
      <title>09案例分析：池化对象的应用场景</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/09%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90%E6%B1%A0%E5%8C%96%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/09%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90%E6%B1%A0%E5%8C%96%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h2 id=&#34;autocollapsetoc-true&#34;&gt;title: &amp;ldquo;09案例分析：池化对象的应用场景&amp;rdquo;&#xA;draft: false&#xA;date: 2024-06-14&#xA;keywords: [Java 性能优化实战21讲, 09案例分析：池化对象的应用场景, 极客时间]&#xA;categories: [Java 性能优化实战21讲]&#xA;tags: [极客时间]&#xA;comment: true&#xA;toc: true&#xA;autoCollapseToc: true&lt;/h2&gt;&#xA;&lt;p&gt;在我们平常的编码中，通常会将一些对象保存起来，这主要考虑的是对象的创建成本。比如像线程资源、数据库连接资源或者 TCP 连接等，这类对象的初始化通常要花费比较长的时间，如果频繁地申请和销毁，就会耗费大量的系统资源，造成不必要的性能损失。&lt;/p&gt;</description>
    </item>
    <item>
      <title>10案例分析：大对象复用的目标和注意点</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/10%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90%E5%A4%A7%E5%AF%B9%E8%B1%A1%E5%A4%8D%E7%94%A8%E7%9A%84%E7%9B%AE%E6%A0%87%E5%92%8C%E6%B3%A8%E6%84%8F%E7%82%B9/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/10%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90%E5%A4%A7%E5%AF%B9%E8%B1%A1%E5%A4%8D%E7%94%A8%E7%9A%84%E7%9B%AE%E6%A0%87%E5%92%8C%E6%B3%A8%E6%84%8F%E7%82%B9/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h2 id=&#34;autocollapsetoc-true&#34;&gt;title: &amp;ldquo;10案例分析：大对象复用的目标和注意点&amp;rdquo;&#xA;draft: false&#xA;date: 2024-06-14&#xA;keywords: [10案例分析：大对象复用的目标和注意点, Java 性能优化实战21讲, 极客时间]&#xA;categories: [Java 性能优化实战21讲]&#xA;tags: [极客时间]&#xA;comment: true&#xA;toc: true&#xA;autoCollapseToc: true&lt;/h2&gt;&#xA;&lt;p&gt;本课时我们将讲解一下对于“大对象”的优化。这里的“大对象”，是一个泛化概念，它可能存放在 JVM 中，也可能正在网络上传输，也可能存在于数据库中。&lt;/p&gt;</description>
    </item>
    <item>
      <title>11案例分析：如何用设计模式优化性能</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/11%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90%E5%A6%82%E4%BD%95%E7%94%A8%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%BC%98%E5%8C%96%E6%80%A7%E8%83%BD/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/11%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90%E5%A6%82%E4%BD%95%E7%94%A8%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%BC%98%E5%8C%96%E6%80%A7%E8%83%BD/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h2 id=&#34;autocollapsetoc-true&#34;&gt;title: &amp;ldquo;11案例分析：如何用设计模式优化性能&amp;rdquo;&#xA;draft: false&#xA;date: 2024-06-14&#xA;keywords: [11案例分析：如何用设计模式优化性能, Java 性能优化实战21讲, 极客时间]&#xA;categories: [Java 性能优化实战21讲]&#xA;tags: [极客时间]&#xA;comment: true&#xA;toc: true&#xA;autoCollapseToc: true&lt;/h2&gt;&#xA;&lt;p&gt;代码的结构对应用的整体性能，有着重要的影响。结构优秀的代码，可以避免很多潜在的性能问题，在代码的扩展性上也有巨大的作用；结构清晰、层次分明的代码，也有助于帮你找到系统的瓶颈点，进行专项优化。&lt;/p&gt;</description>
    </item>
    <item>
      <title>12案例分析：并行计算让代码“飞”起来</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/12%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90%E5%B9%B6%E8%A1%8C%E8%AE%A1%E7%AE%97%E8%AE%A9%E4%BB%A3%E7%A0%81%E9%A3%9E%E8%B5%B7%E6%9D%A5/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/12%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90%E5%B9%B6%E8%A1%8C%E8%AE%A1%E7%AE%97%E8%AE%A9%E4%BB%A3%E7%A0%81%E9%A3%9E%E8%B5%B7%E6%9D%A5/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h2 id=&#34;autocollapsetoc-true&#34;&gt;title: &amp;ldquo;12案例分析：并行计算让代码“飞”起来&amp;rdquo;&#xA;draft: false&#xA;date: 2024-06-14&#xA;keywords: [12案例分析：并行计算让代码“飞”起来, Java 性能优化实战21讲, 极客时间]&#xA;categories: [Java 性能优化实战21讲]&#xA;tags: [极客时间]&#xA;comment: true&#xA;toc: true&#xA;autoCollapseToc: true&lt;/h2&gt;&#xA;&lt;p&gt;现在的电脑，往往都有多颗核，即使是一部手机，也往往配备了并行处理器，通过多进程和多线程的手段，就可以让多个 CPU 核同时工作，加快任务的执行。&lt;/p&gt;</description>
    </item>
    <item>
      <title>13案例分析：多线程锁的优化</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/13%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90%E5%A4%9A%E7%BA%BF%E7%A8%8B%E9%94%81%E7%9A%84%E4%BC%98%E5%8C%96/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/13%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90%E5%A4%9A%E7%BA%BF%E7%A8%8B%E9%94%81%E7%9A%84%E4%BC%98%E5%8C%96/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h2 id=&#34;autocollapsetoc-true&#34;&gt;title: &amp;ldquo;13案例分析：多线程锁的优化&amp;rdquo;&#xA;draft: false&#xA;date: 2024-06-14&#xA;keywords: [13案例分析：多线程锁的优化, Java 性能优化实战21讲, 极客时间]&#xA;categories: [Java 性能优化实战21讲]&#xA;tags: [极客时间]&#xA;comment: true&#xA;toc: true&#xA;autoCollapseToc: true&lt;/h2&gt;&#xA;&lt;p&gt;我们在上一课时，了解到可以使用 ThreadLocal，来避免 SimpleDateFormat 在并发环境下引起的时间错乱问题。其实还有一种解决方式，就是通过对parse 方法进行加锁，也能保证日期处理类的正确运行，代码如下图（可见仓库）：&lt;/p&gt;</description>
    </item>
    <item>
      <title>14案例分析：乐观锁和无锁</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/14%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90%E4%B9%90%E8%A7%82%E9%94%81%E5%92%8C%E6%97%A0%E9%94%81/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/14%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90%E4%B9%90%E8%A7%82%E9%94%81%E5%92%8C%E6%97%A0%E9%94%81/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h2 id=&#34;autocollapsetoc-true&#34;&gt;title: &amp;ldquo;14案例分析：乐观锁和无锁&amp;rdquo;&#xA;draft: false&#xA;date: 2024-06-14&#xA;keywords: [Java 性能优化实战21讲, 极客时间, 14案例分析：乐观锁和无锁]&#xA;categories: [Java 性能优化实战21讲]&#xA;tags: [极客时间]&#xA;comment: true&#xA;toc: true&#xA;autoCollapseToc: true&lt;/h2&gt;&#xA;&lt;p&gt;上一课时，我们提到了 concurrent 下面的 Lock，了解到它可以在 API 级别，对共享资源进行更细粒度的控制。Lock 是基于 AQS（AbstractQueuedSynchronizer）实现的，AQS 是用来构建 Lock 或其他同步组件的基础，它使用了一个 int 成员变量来表示state（同步状态），通过内置的 FIFO 队列，来完成资源获取线程的排队。&lt;/p&gt;</description>
    </item>
    <item>
      <title>15案例分析：从BIO到NIO，再到AIO</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/15%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90%E4%BB%8Ebio%E5%88%B0nio%E5%86%8D%E5%88%B0aio/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/15%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90%E4%BB%8Ebio%E5%88%B0nio%E5%86%8D%E5%88%B0aio/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h2 id=&#34;autocollapsetoc-true&#34;&gt;title: &amp;ldquo;15案例分析：从BIO到NIO，再到AIO&amp;rdquo;&#xA;draft: false&#xA;date: 2024-06-14&#xA;keywords: [15案例分析：从BIO到NIO，再到AIO, Java 性能优化实战21讲, 极客时间]&#xA;categories: [Java 性能优化实战21讲]&#xA;tags: [极客时间]&#xA;comment: true&#xA;toc: true&#xA;autoCollapseToc: true&lt;/h2&gt;&#xA;&lt;p&gt;Netty 的高性能架构，是基于一个网络编程设计模式 Reactor 进行设计的。现在，大多数与 I/O 相关的组件，都会使用 Reactor 模型，比如 Tomcat、Redis、Nginx 等，可见 Reactor 应用的广泛性。&lt;/p&gt;</description>
    </item>
    <item>
      <title>16案例分析：常见Java代码优化法则</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/16%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90%E5%B8%B8%E8%A7%81java%E4%BB%A3%E7%A0%81%E4%BC%98%E5%8C%96%E6%B3%95%E5%88%99/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/16%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90%E5%B8%B8%E8%A7%81java%E4%BB%A3%E7%A0%81%E4%BC%98%E5%8C%96%E6%B3%95%E5%88%99/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h2 id=&#34;autocollapsetoc-true&#34;&gt;title: &amp;ldquo;16案例分析：常见Java代码优化法则&amp;rdquo;&#xA;draft: false&#xA;date: 2024-06-14&#xA;keywords: [Java 性能优化实战21讲, 16案例分析：常见Java代码优化法则, 极客时间]&#xA;categories: [Java 性能优化实战21讲]&#xA;tags: [极客时间]&#xA;comment: true&#xA;toc: true&#xA;autoCollapseToc: true&lt;/h2&gt;&#xA;&lt;p&gt;回顾一下 06 课时到 15 课时，我们分别了解缓冲、缓存、池化对象、大对象复用、并行计算、锁优化、NIO 等优化方法，它们对性能的提升往往是质的飞跃。&lt;/p&gt;</description>
    </item>
    <item>
      <title>17高级进阶：JVM如何完成垃圾回收？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/17%E9%AB%98%E7%BA%A7%E8%BF%9B%E9%98%B6jvm%E5%A6%82%E4%BD%95%E5%AE%8C%E6%88%90%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/17%E9%AB%98%E7%BA%A7%E8%BF%9B%E9%98%B6jvm%E5%A6%82%E4%BD%95%E5%AE%8C%E6%88%90%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h2 id=&#34;autocollapsetoc-true&#34;&gt;title: &amp;ldquo;17高级进阶：JVM如何完成垃圾回收？&amp;rdquo;&#xA;draft: false&#xA;date: 2024-06-14&#xA;keywords: [17高级进阶：JVM如何完成垃圾回收？, Java 性能优化实战21讲, 极客时间]&#xA;categories: [Java 性能优化实战21讲]&#xA;tags: [极客时间]&#xA;comment: true&#xA;toc: true&#xA;autoCollapseToc: true&lt;/h2&gt;&#xA;&lt;p&gt;从本课时开始，我们将集中讲解一下 JVM（Java Virtual Machine）的基本知识点。Java 中的一些代码优化技巧，和JVM的关系非常的大，比如逃逸分析对非捕获型 Lambda 表达式的优化。&lt;/p&gt;</description>
    </item>
    <item>
      <title>18高级进阶：JIT如何影响JVM的性能？</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/18%E9%AB%98%E7%BA%A7%E8%BF%9B%E9%98%B6jit%E5%A6%82%E4%BD%95%E5%BD%B1%E5%93%8Djvm%E7%9A%84%E6%80%A7%E8%83%BD/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/18%E9%AB%98%E7%BA%A7%E8%BF%9B%E9%98%B6jit%E5%A6%82%E4%BD%95%E5%BD%B1%E5%93%8Djvm%E7%9A%84%E6%80%A7%E8%83%BD/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h2 id=&#34;autocollapsetoc-true&#34;&gt;title: &amp;ldquo;18高级进阶：JIT如何影响JVM的性能？&amp;rdquo;&#xA;draft: false&#xA;date: 2024-06-14&#xA;keywords: [18高级进阶：JIT如何影响JVM的性能？, Java 性能优化实战21讲, 极客时间]&#xA;categories: [Java 性能优化实战21讲]&#xA;tags: [极客时间]&#xA;comment: true&#xA;toc: true&#xA;autoCollapseToc: true&lt;/h2&gt;&#xA;&lt;p&gt;我们在上一课时，我们了解到 Java 虚拟机栈，其实是一个双层的栈，如下图所示，第一层就是针对 method 的栈帧，第二层是针对字节码指令的操作数栈。&lt;/p&gt;</description>
    </item>
    <item>
      <title>19高级进阶：JVM常见优化参数</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/19%E9%AB%98%E7%BA%A7%E8%BF%9B%E9%98%B6jvm%E5%B8%B8%E8%A7%81%E4%BC%98%E5%8C%96%E5%8F%82%E6%95%B0/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/19%E9%AB%98%E7%BA%A7%E8%BF%9B%E9%98%B6jvm%E5%B8%B8%E8%A7%81%E4%BC%98%E5%8C%96%E5%8F%82%E6%95%B0/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h2 id=&#34;autocollapsetoc-true&#34;&gt;title: &amp;ldquo;19高级进阶：JVM常见优化参数&amp;rdquo;&#xA;draft: false&#xA;date: 2024-06-14&#xA;keywords: [19高级进阶：JVM常见优化参数, Java 性能优化实战21讲, 极客时间]&#xA;categories: [Java 性能优化实战21讲]&#xA;tags: [极客时间]&#xA;comment: true&#xA;toc: true&#xA;autoCollapseToc: true&lt;/h2&gt;&#xA;&lt;p&gt;现在大家用得最多的 Java 版本是 Java 8，如果你的公司比较保守，那么使用较多的垃圾回收器就是 CMS 。但 CMS 已经在 Java 14 中被正式废除，随着 ZGC 的诞生和 G1 的稳定，CMS 终将成为过去式。&lt;/p&gt;</description>
    </item>
    <item>
      <title>20SpringBoot服务性能优化</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/20springboot%E6%9C%8D%E5%8A%A1%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/20springboot%E6%9C%8D%E5%8A%A1%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h2 id=&#34;autocollapsetoc-true&#34;&gt;title: &amp;ldquo;20SpringBoot服务性能优化&amp;rdquo;&#xA;draft: false&#xA;date: 2024-06-14&#xA;keywords: [Java 性能优化实战21讲, 极客时间, 20SpringBoot服务性能优化]&#xA;categories: [Java 性能优化实战21讲]&#xA;tags: [极客时间]&#xA;comment: true&#xA;toc: true&#xA;autoCollapseToc: true&lt;/h2&gt;&#xA;&lt;p&gt;在开始对 SpringBoot 服务进行性能优化之前，你需要做一些准备，把 SpringBoot 服务的一些数据暴露出来。比如，你的服务用到了缓存，就需要把缓存命中率这些数据进行收集；用到了数据库连接池，就需要把连接池的参数给暴露出来。&lt;/p&gt;</description>
    </item>
    <item>
      <title>21性能优化的过程方法与求职面经总结</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/21%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E7%9A%84%E8%BF%87%E7%A8%8B%E6%96%B9%E6%B3%95%E4%B8%8E%E6%B1%82%E8%81%8C%E9%9D%A2%E7%BB%8F%E6%80%BB%E7%BB%93/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/21%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E7%9A%84%E8%BF%87%E7%A8%8B%E6%96%B9%E6%B3%95%E4%B8%8E%E6%B1%82%E8%81%8C%E9%9D%A2%E7%BB%8F%E6%80%BB%E7%BB%93/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h2 id=&#34;autocollapsetoc-true&#34;&gt;title: &amp;ldquo;21性能优化的过程方法与求职面经总结&amp;rdquo;&#xA;draft: false&#xA;date: 2024-06-14&#xA;keywords: [21性能优化的过程方法与求职面经总结, Java 性能优化实战21讲, 极客时间]&#xA;categories: [Java 性能优化实战21讲]&#xA;tags: [极客时间]&#xA;comment: true&#xA;toc: true&#xA;autoCollapseToc: true&lt;/h2&gt;&#xA;&lt;p&gt;经过前面的学习，你可能会发现，即使熟悉了开发中的各项技术和优化技巧，但在真正的性能优化场景下，自己依旧很难开展优化任务。其实这是因为你脑海里的知识杂乱无章，仅能靠回忆仅能完成片面的优化。&lt;/p&gt;</description>
    </item>
    <item>
      <title>结束语实践出真知</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/%E7%BB%93%E6%9D%9F%E8%AF%AD%E5%AE%9E%E8%B7%B5%E5%87%BA%E7%9C%9F%E7%9F%A5/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/%E7%BB%93%E6%9D%9F%E8%AF%AD%E5%AE%9E%E8%B7%B5%E5%87%BA%E7%9C%9F%E7%9F%A5/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h2 id=&#34;autocollapsetoc-true&#34;&gt;title: &amp;ldquo;结束语实践出真知&amp;rdquo;&#xA;draft: false&#xA;date: 2024-06-14&#xA;keywords: [Java 性能优化实战21讲, 极客时间, 结束语实践出真知]&#xA;categories: [Java 性能优化实战21讲]&#xA;tags: [极客时间]&#xA;comment: true&#xA;toc: true&#xA;autoCollapseToc: true&lt;/h2&gt;&#xA;&lt;p&gt;你好，欢迎来到该专栏的最后一部分，到现在为止，咱们的这一专栏就算讲完了，在学习过程中，你会发现这个专栏的思路是非常清晰的，性能优化的诸多方法论和面试高频考点都包含在其中，非常值得你反复学习揣摩。&lt;/p&gt;</description>
    </item>
    <item>
      <title>开篇词Java性能优化，是进阶高级架构师的炼金石</title>
      <link>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/%E5%BC%80%E7%AF%87%E8%AF%8Djava%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%98%AF%E8%BF%9B%E9%98%B6%E9%AB%98%E7%BA%A7%E6%9E%B6%E6%9E%84%E5%B8%88%E7%9A%84%E7%82%BC%E9%87%91%E7%9F%B3/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://politcloud.org/post/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4/java-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%AE%9E%E6%88%9821%E8%AE%B2/%E5%BC%80%E7%AF%87%E8%AF%8Djava%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%98%AF%E8%BF%9B%E9%98%B6%E9%AB%98%E7%BA%A7%E6%9E%B6%E6%9E%84%E5%B8%88%E7%9A%84%E7%82%BC%E9%87%91%E7%9F%B3/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h2 id=&#34;autocollapsetoc-true&#34;&gt;title: &amp;ldquo;开篇词Java性能优化，是进阶高级架构师的炼金石&amp;rdquo;&#xA;draft: false&#xA;date: 2024-06-14&#xA;keywords: [Java 性能优化实战21讲, 开篇词Java性能优化，是进阶高级架构师的炼金石, 极客时间]&#xA;categories: [Java 性能优化实战21讲]&#xA;tags: [极客时间]&#xA;comment: true&#xA;toc: true&#xA;autoCollapseToc: true&lt;/h2&gt;&#xA;&lt;p&gt;你好，我是李国。作为《Java 性能优化与面试 21 讲》这个课程的作者，我先来简单介绍下自己。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
